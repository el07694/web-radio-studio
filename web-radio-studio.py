from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1251, 500)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(200, 200))
        MainWindow.setMaximumSize(QtCore.QSize(16777215, 16777215))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/logo/assets/icons/logo/logo_thumbnail.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setStyleSheet("")
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_29 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_29.setContentsMargins(6, 6, 6, 6)
        self.verticalLayout_29.setSpacing(0)
        self.verticalLayout_29.setObjectName("verticalLayout_29")
        self.stackedWidget = StackedWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.stackedWidget.sizePolicy().hasHeightForWidth())
        self.stackedWidget.setSizePolicy(sizePolicy)
        self.stackedWidget.setStyleSheet("")
        self.stackedWidget.setObjectName("stackedWidget")
        self.page_1 = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_1.sizePolicy().hasHeightForWidth())
        self.page_1.setSizePolicy(sizePolicy)
        self.page_1.setObjectName("page_1")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.page_1)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setSpacing(3)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.decks = QtWidgets.QFrame(self.page_1)
        self.decks.setMinimumSize(QtCore.QSize(0, 0))
        self.decks.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.decks.setStyleSheet("QFrame#decks{\n"
"    border:none;\n"
"}")
        self.decks.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.decks.setFrameShadow(QtWidgets.QFrame.Raised)
        self.decks.setObjectName("decks")
        self.gridLayout = QtWidgets.QGridLayout(self.decks)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setSpacing(3)
        self.gridLayout.setObjectName("gridLayout")
        self.speackers_deck = QtWidgets.QFrame(self.decks)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.speackers_deck.sizePolicy().hasHeightForWidth())
        self.speackers_deck.setSizePolicy(sizePolicy)
        self.speackers_deck.setMinimumSize(QtCore.QSize(0, 0))
        self.speackers_deck.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.speackers_deck.setStatusTip("")
        self.speackers_deck.setStyleSheet("QFrame{\n"
"    background-color:rgb(170, 255, 127);\n"
"    border:1px solid #ABABAB;\n"
"}")
        self.speackers_deck.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.speackers_deck.setFrameShadow(QtWidgets.QFrame.Raised)
        self.speackers_deck.setObjectName("speackers_deck")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.speackers_deck)
        self.verticalLayout.setContentsMargins(6, 6, 6, 6)
        self.verticalLayout.setSpacing(3)
        self.verticalLayout.setObjectName("verticalLayout")
        self.speackers_deck_labels = QtWidgets.QFrame(self.speackers_deck)
        self.speackers_deck_labels.setStyleSheet("QFrame{\n"
"    border:none;\n"
"}")
        self.speackers_deck_labels.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.speackers_deck_labels.setFrameShadow(QtWidgets.QFrame.Raised)
        self.speackers_deck_labels.setObjectName("speackers_deck_labels")
        self.horizontalLayout_65 = QtWidgets.QHBoxLayout(self.speackers_deck_labels)
        self.horizontalLayout_65.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_65.setObjectName("horizontalLayout_65")
        self.speackers_deck_title = QtWidgets.QLabel(self.speackers_deck_labels)
        self.speackers_deck_title.setStyleSheet("QLabel{\n"
"    border:none;\n"
"    font-weight:bold;\n"
"}")
        self.speackers_deck_title.setObjectName("speackers_deck_title")
        self.horizontalLayout_65.addWidget(self.speackers_deck_title)
        spacerItem = QtWidgets.QSpacerItem(1067, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_65.addItem(spacerItem)
        self.speackers_deck_time_label = QtWidgets.QLabel(self.speackers_deck_labels)
        self.speackers_deck_time_label.setObjectName("speackers_deck_time_label")
        self.horizontalLayout_65.addWidget(self.speackers_deck_time_label)
        self.verticalLayout.addWidget(self.speackers_deck_labels)
        self.speackers_deck_timeline_container_frame = QtWidgets.QFrame(self.speackers_deck)
        self.speackers_deck_timeline_container_frame.setMinimumSize(QtCore.QSize(0, 5))
        self.speackers_deck_timeline_container_frame.setMaximumSize(QtCore.QSize(16777215, 5))
        self.speackers_deck_timeline_container_frame.setStyleSheet("QFrame{border:1px solid #ABABAB;}")
        self.speackers_deck_timeline_container_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.speackers_deck_timeline_container_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.speackers_deck_timeline_container_frame.setObjectName("speackers_deck_timeline_container_frame")
        self.speackers_deck_timeline_pick_frame = QtWidgets.QFrame(self.speackers_deck_timeline_container_frame)
        self.speackers_deck_timeline_pick_frame.setGeometry(QtCore.QRect(1, 1, 0, 4))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.speackers_deck_timeline_pick_frame.sizePolicy().hasHeightForWidth())
        self.speackers_deck_timeline_pick_frame.setSizePolicy(sizePolicy)
        self.speackers_deck_timeline_pick_frame.setMinimumSize(QtCore.QSize(0, 4))
        self.speackers_deck_timeline_pick_frame.setMaximumSize(QtCore.QSize(16777215, 4))
        self.speackers_deck_timeline_pick_frame.setStyleSheet("QFrame{\n"
"    background-color:blue;\n"
"}")
        self.speackers_deck_timeline_pick_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.speackers_deck_timeline_pick_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.speackers_deck_timeline_pick_frame.setObjectName("speackers_deck_timeline_pick_frame")
        self.verticalLayout.addWidget(self.speackers_deck_timeline_container_frame)
        self.speackers_deck_buttons_frame = QtWidgets.QFrame(self.speackers_deck)
        self.speackers_deck_buttons_frame.setStyleSheet("QFrame{border:none;}")
        self.speackers_deck_buttons_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.speackers_deck_buttons_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.speackers_deck_buttons_frame.setObjectName("speackers_deck_buttons_frame")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.speackers_deck_buttons_frame)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.speackers_deck_click_to_talk = QtWidgets.QPushButton(self.speackers_deck_buttons_frame)
        self.speackers_deck_click_to_talk.setMinimumSize(QtCore.QSize(0, 0))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/microphone-1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.speackers_deck_click_to_talk.setIcon(icon1)
        self.speackers_deck_click_to_talk.setObjectName("speackers_deck_click_to_talk")
        self.horizontalLayout_3.addWidget(self.speackers_deck_click_to_talk)
        self.speackers_deck_hold_to_talk = QtWidgets.QPushButton(self.speackers_deck_buttons_frame)
        self.speackers_deck_hold_to_talk.setMinimumSize(QtCore.QSize(0, 0))
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/microphone.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.speackers_deck_hold_to_talk.setIcon(icon2)
        self.speackers_deck_hold_to_talk.setObjectName("speackers_deck_hold_to_talk")
        self.horizontalLayout_3.addWidget(self.speackers_deck_hold_to_talk)
        self.speackers_deck_volume = QtWidgets.QPushButton(self.speackers_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.speackers_deck_volume.sizePolicy().hasHeightForWidth())
        self.speackers_deck_volume.setSizePolicy(sizePolicy)
        self.speackers_deck_volume.setMinimumSize(QtCore.QSize(0, 0))
        self.speackers_deck_volume.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/volume.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.speackers_deck_volume.setIcon(icon3)
        self.speackers_deck_volume.setObjectName("speackers_deck_volume")
        self.horizontalLayout_3.addWidget(self.speackers_deck_volume)
        self.speackers_deck_pan = QtWidgets.QPushButton(self.speackers_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.speackers_deck_pan.sizePolicy().hasHeightForWidth())
        self.speackers_deck_pan.setSizePolicy(sizePolicy)
        self.speackers_deck_pan.setMinimumSize(QtCore.QSize(0, 0))
        self.speackers_deck_pan.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/equalizer.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.speackers_deck_pan.setIcon(icon4)
        self.speackers_deck_pan.setObjectName("speackers_deck_pan")
        self.horizontalLayout_3.addWidget(self.speackers_deck_pan)
        self.speackers_deck_normalize = QtWidgets.QPushButton(self.speackers_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.speackers_deck_normalize.sizePolicy().hasHeightForWidth())
        self.speackers_deck_normalize.setSizePolicy(sizePolicy)
        self.speackers_deck_normalize.setMinimumSize(QtCore.QSize(0, 0))
        self.speackers_deck_normalize.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/standarization.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.speackers_deck_normalize.setIcon(icon5)
        self.speackers_deck_normalize.setObjectName("speackers_deck_normalize")
        self.horizontalLayout_3.addWidget(self.speackers_deck_normalize)
        self.speackers_deck_filter = QtWidgets.QPushButton(self.speackers_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.speackers_deck_filter.sizePolicy().hasHeightForWidth())
        self.speackers_deck_filter.setSizePolicy(sizePolicy)
        self.speackers_deck_filter.setMinimumSize(QtCore.QSize(0, 0))
        self.speackers_deck_filter.setText("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/apply-filter.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.speackers_deck_filter.setIcon(icon6)
        self.speackers_deck_filter.setObjectName("speackers_deck_filter")
        self.horizontalLayout_3.addWidget(self.speackers_deck_filter)
        self.verticalLayout.addWidget(self.speackers_deck_buttons_frame)
        self.gridLayout.addWidget(self.speackers_deck, 4, 0, 1, 3)
        self.deck_1 = QtWidgets.QFrame(self.decks)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.deck_1.sizePolicy().hasHeightForWidth())
        self.deck_1.setSizePolicy(sizePolicy)
        self.deck_1.setMinimumSize(QtCore.QSize(0, 124))
        self.deck_1.setMaximumSize(QtCore.QSize(16777215, 124))
        self.deck_1.setStyleSheet("QFrame#deck_1{\n"
"    border:1px solid #ABABAB;\n"
"    background-color:orange;\n"
"}")
        self.deck_1.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.deck_1.setFrameShadow(QtWidgets.QFrame.Raised)
        self.deck_1.setObjectName("deck_1")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.deck_1)
        self.gridLayout_5.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_5.setSpacing(3)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.deck_1_image = QtWidgets.QLabel(self.deck_1)
        self.deck_1_image.setMinimumSize(QtCore.QSize(80, 100))
        self.deck_1_image.setMaximumSize(QtCore.QSize(80, 100))
        self.deck_1_image.setStatusTip("")
        self.deck_1_image.setStyleSheet("QLabel{\n"
"    border:none;\n"
"    padding:10px;\n"
"}")
        self.deck_1_image.setText("")
        self.deck_1_image.setPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/deck-image.png"))
        self.deck_1_image.setScaledContents(True)
        self.deck_1_image.setObjectName("deck_1_image")
        self.gridLayout_5.addWidget(self.deck_1_image, 0, 0, 1, 1)
        self.deck_1_main = QtWidgets.QFrame(self.deck_1)
        self.deck_1_main.setStyleSheet("QFrame{border:none;}")
        self.deck_1_main.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.deck_1_main.setFrameShadow(QtWidgets.QFrame.Raised)
        self.deck_1_main.setObjectName("deck_1_main")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.deck_1_main)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.deck_1_labels_frame = QtWidgets.QFrame(self.deck_1_main)
        self.deck_1_labels_frame.setStyleSheet("QFrame{border:none;}")
        self.deck_1_labels_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.deck_1_labels_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.deck_1_labels_frame.setObjectName("deck_1_labels_frame")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.deck_1_labels_frame)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.deck_1_label_name = QtWidgets.QLabel(self.deck_1_labels_frame)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.deck_1_label_name.setFont(font)
        self.deck_1_label_name.setStyleSheet("QLabel{border:none;}")
        self.deck_1_label_name.setAlignment(QtCore.Qt.AlignJustify|QtCore.Qt.AlignVCenter)
        self.deck_1_label_name.setWordWrap(True)
        self.deck_1_label_name.setObjectName("deck_1_label_name")
        self.horizontalLayout.addWidget(self.deck_1_label_name)
        self.verticalLayout_2.addWidget(self.deck_1_labels_frame)
        self.deck_1_timeline_container_frame = QtWidgets.QFrame(self.deck_1_main)
        self.deck_1_timeline_container_frame.setMinimumSize(QtCore.QSize(0, 5))
        self.deck_1_timeline_container_frame.setMaximumSize(QtCore.QSize(16777215, 5))
        self.deck_1_timeline_container_frame.setStyleSheet("QFrame{border:1px solid #ABABAB;}")
        self.deck_1_timeline_container_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.deck_1_timeline_container_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.deck_1_timeline_container_frame.setObjectName("deck_1_timeline_container_frame")
        self.deck_1_timeline_pick_frame = QtWidgets.QFrame(self.deck_1_timeline_container_frame)
        self.deck_1_timeline_pick_frame.setGeometry(QtCore.QRect(1, 1, 0, 4))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.deck_1_timeline_pick_frame.sizePolicy().hasHeightForWidth())
        self.deck_1_timeline_pick_frame.setSizePolicy(sizePolicy)
        self.deck_1_timeline_pick_frame.setMinimumSize(QtCore.QSize(0, 4))
        self.deck_1_timeline_pick_frame.setMaximumSize(QtCore.QSize(16777215, 4))
        self.deck_1_timeline_pick_frame.setStyleSheet("QFrame{\n"
"    background-color:blue;\n"
"}")
        self.deck_1_timeline_pick_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.deck_1_timeline_pick_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.deck_1_timeline_pick_frame.setObjectName("deck_1_timeline_pick_frame")
        self.verticalLayout_2.addWidget(self.deck_1_timeline_container_frame)
        self.deck_1_control_buttons_frame = QtWidgets.QFrame(self.deck_1_main)
        self.deck_1_control_buttons_frame.setStyleSheet("QFrame{border:none;}")
        self.deck_1_control_buttons_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.deck_1_control_buttons_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.deck_1_control_buttons_frame.setObjectName("deck_1_control_buttons_frame")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.deck_1_control_buttons_frame)
        self.horizontalLayout_2.setContentsMargins(0, -1, 0, -1)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.deck_1_play_or_pause = QtWidgets.QPushButton(self.deck_1_control_buttons_frame)
        self.deck_1_play_or_pause.setMinimumSize(QtCore.QSize(25, 25))
        self.deck_1_play_or_pause.setMaximumSize(QtCore.QSize(25, 25))
        self.deck_1_play_or_pause.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/play-song.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.deck_1_play_or_pause.setIcon(icon7)
        self.deck_1_play_or_pause.setIconSize(QtCore.QSize(20, 20))
        self.deck_1_play_or_pause.setObjectName("deck_1_play_or_pause")
        self.horizontalLayout_2.addWidget(self.deck_1_play_or_pause)
        self.deck_1_stop = QtWidgets.QPushButton(self.deck_1_control_buttons_frame)
        self.deck_1_stop.setMinimumSize(QtCore.QSize(25, 25))
        self.deck_1_stop.setMaximumSize(QtCore.QSize(25, 25))
        self.deck_1_stop.setText("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/stop-song.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.deck_1_stop.setIcon(icon8)
        self.deck_1_stop.setObjectName("deck_1_stop")
        self.horizontalLayout_2.addWidget(self.deck_1_stop)
        spacerItem1 = QtWidgets.QSpacerItem(589, 8, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.deck_1_volume = QtWidgets.QPushButton(self.deck_1_control_buttons_frame)
        self.deck_1_volume.setMinimumSize(QtCore.QSize(0, 25))
        self.deck_1_volume.setMaximumSize(QtCore.QSize(250, 25))
        self.deck_1_volume.setText("")
        self.deck_1_volume.setIcon(icon3)
        self.deck_1_volume.setObjectName("deck_1_volume")
        self.horizontalLayout_2.addWidget(self.deck_1_volume)
        self.deck_1_pan = QtWidgets.QPushButton(self.deck_1_control_buttons_frame)
        self.deck_1_pan.setMinimumSize(QtCore.QSize(0, 25))
        self.deck_1_pan.setMaximumSize(QtCore.QSize(250, 25))
        self.deck_1_pan.setText("")
        self.deck_1_pan.setIcon(icon4)
        self.deck_1_pan.setObjectName("deck_1_pan")
        self.horizontalLayout_2.addWidget(self.deck_1_pan)
        self.deck_1_normalize = QtWidgets.QPushButton(self.deck_1_control_buttons_frame)
        self.deck_1_normalize.setMinimumSize(QtCore.QSize(0, 25))
        self.deck_1_normalize.setMaximumSize(QtCore.QSize(250, 25))
        self.deck_1_normalize.setText("")
        self.deck_1_normalize.setIcon(icon5)
        self.deck_1_normalize.setObjectName("deck_1_normalize")
        self.horizontalLayout_2.addWidget(self.deck_1_normalize)
        self.deck_1_filter = QtWidgets.QPushButton(self.deck_1_control_buttons_frame)
        self.deck_1_filter.setMinimumSize(QtCore.QSize(0, 25))
        self.deck_1_filter.setMaximumSize(QtCore.QSize(250, 25))
        self.deck_1_filter.setText("")
        self.deck_1_filter.setIcon(icon6)
        self.deck_1_filter.setObjectName("deck_1_filter")
        self.horizontalLayout_2.addWidget(self.deck_1_filter)
        self.verticalLayout_2.addWidget(self.deck_1_control_buttons_frame)
        self.deck_1_timeline_frame = QtWidgets.QFrame(self.deck_1_main)
        self.deck_1_timeline_frame.setStyleSheet("QFrame{border:none;}")
        self.deck_1_timeline_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.deck_1_timeline_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.deck_1_timeline_frame.setObjectName("deck_1_timeline_frame")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.deck_1_timeline_frame)
        self.horizontalLayout_4.setContentsMargins(0, -1, 0, -1)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.deck_1_timeslider = QtWidgets.QSlider(self.deck_1_timeline_frame)
        self.deck_1_timeslider.setOrientation(QtCore.Qt.Horizontal)
        self.deck_1_timeslider.setObjectName("deck_1_timeslider")
        self.horizontalLayout_4.addWidget(self.deck_1_timeslider)
        self.deck_1_duration = QtWidgets.QLabel(self.deck_1_timeline_frame)
        self.deck_1_duration.setObjectName("deck_1_duration")
        self.horizontalLayout_4.addWidget(self.deck_1_duration)
        self.verticalLayout_2.addWidget(self.deck_1_timeline_frame)
        self.gridLayout_5.addWidget(self.deck_1_main, 0, 1, 1, 1)
        self.deck_1_web = QtWidgets.QFrame(self.deck_1)
        self.deck_1_web.setMinimumSize(QtCore.QSize(0, 1))
        self.deck_1_web.setMaximumSize(QtCore.QSize(16777215, 1))
        self.deck_1_web.setStyleSheet("QFrame{border:none;}")
        self.deck_1_web.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.deck_1_web.setFrameShadow(QtWidgets.QFrame.Raised)
        self.deck_1_web.setObjectName("deck_1_web")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.deck_1_web)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.gridLayout_5.addWidget(self.deck_1_web, 1, 0, 1, 2)
        self.gridLayout.addWidget(self.deck_1, 3, 0, 1, 1)
        self.deck_2 = QtWidgets.QFrame(self.decks)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.deck_2.sizePolicy().hasHeightForWidth())
        self.deck_2.setSizePolicy(sizePolicy)
        self.deck_2.setMinimumSize(QtCore.QSize(0, 124))
        self.deck_2.setMaximumSize(QtCore.QSize(16777215, 124))
        self.deck_2.setStyleSheet("QFrame#deck_2{\n"
"    border:1px solid #ABABAB;\n"
"    background-color:#48dfff;\n"
"}")
        self.deck_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.deck_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.deck_2.setObjectName("deck_2")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.deck_2)
        self.gridLayout_8.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_8.setSpacing(3)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.deck_2_image = QtWidgets.QLabel(self.deck_2)
        self.deck_2_image.setMinimumSize(QtCore.QSize(80, 100))
        self.deck_2_image.setMaximumSize(QtCore.QSize(80, 100))
        self.deck_2_image.setStatusTip("")
        self.deck_2_image.setStyleSheet("QLabel{\n"
"    border:none;\n"
"    padding:10px;\n"
"}")
        self.deck_2_image.setText("")
        self.deck_2_image.setPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/deck-image.png"))
        self.deck_2_image.setScaledContents(True)
        self.deck_2_image.setObjectName("deck_2_image")
        self.gridLayout_8.addWidget(self.deck_2_image, 0, 0, 1, 1)
        self.deck_2_main = QtWidgets.QFrame(self.deck_2)
        self.deck_2_main.setStyleSheet("QFrame{border:none;}")
        self.deck_2_main.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.deck_2_main.setFrameShadow(QtWidgets.QFrame.Raised)
        self.deck_2_main.setObjectName("deck_2_main")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.deck_2_main)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.deck_2_labels_frame = QtWidgets.QFrame(self.deck_2_main)
        self.deck_2_labels_frame.setStyleSheet("QFrame{border:none;}")
        self.deck_2_labels_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.deck_2_labels_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.deck_2_labels_frame.setObjectName("deck_2_labels_frame")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout(self.deck_2_labels_frame)
        self.horizontalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.deck_2_label_name = QtWidgets.QLabel(self.deck_2_labels_frame)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.deck_2_label_name.setFont(font)
        self.deck_2_label_name.setStyleSheet("QLabel{border:none;}")
        self.deck_2_label_name.setAlignment(QtCore.Qt.AlignJustify|QtCore.Qt.AlignVCenter)
        self.deck_2_label_name.setWordWrap(True)
        self.deck_2_label_name.setObjectName("deck_2_label_name")
        self.horizontalLayout_10.addWidget(self.deck_2_label_name)
        self.verticalLayout_4.addWidget(self.deck_2_labels_frame)
        self.deck_2_timeline_container_frame = QtWidgets.QFrame(self.deck_2_main)
        self.deck_2_timeline_container_frame.setMinimumSize(QtCore.QSize(0, 5))
        self.deck_2_timeline_container_frame.setMaximumSize(QtCore.QSize(16777215, 5))
        self.deck_2_timeline_container_frame.setStyleSheet("QFrame{border:1px solid #ABABAB;}")
        self.deck_2_timeline_container_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.deck_2_timeline_container_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.deck_2_timeline_container_frame.setObjectName("deck_2_timeline_container_frame")
        self.deck_2_timeline_pick_frame = QtWidgets.QFrame(self.deck_2_timeline_container_frame)
        self.deck_2_timeline_pick_frame.setGeometry(QtCore.QRect(1, 1, 0, 4))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.deck_2_timeline_pick_frame.sizePolicy().hasHeightForWidth())
        self.deck_2_timeline_pick_frame.setSizePolicy(sizePolicy)
        self.deck_2_timeline_pick_frame.setMinimumSize(QtCore.QSize(0, 4))
        self.deck_2_timeline_pick_frame.setMaximumSize(QtCore.QSize(16777215, 4))
        self.deck_2_timeline_pick_frame.setStyleSheet("QFrame{\n"
"    background-color:blue;\n"
"}")
        self.deck_2_timeline_pick_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.deck_2_timeline_pick_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.deck_2_timeline_pick_frame.setObjectName("deck_2_timeline_pick_frame")
        self.verticalLayout_4.addWidget(self.deck_2_timeline_container_frame)
        self.deck_2_control_buttons_frame = QtWidgets.QFrame(self.deck_2_main)
        self.deck_2_control_buttons_frame.setStyleSheet("QFrame{border:none;}")
        self.deck_2_control_buttons_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.deck_2_control_buttons_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.deck_2_control_buttons_frame.setObjectName("deck_2_control_buttons_frame")
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout(self.deck_2_control_buttons_frame)
        self.horizontalLayout_11.setContentsMargins(0, -1, 0, -1)
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.deck_2_play_or_pause = QtWidgets.QPushButton(self.deck_2_control_buttons_frame)
        self.deck_2_play_or_pause.setMinimumSize(QtCore.QSize(25, 25))
        self.deck_2_play_or_pause.setMaximumSize(QtCore.QSize(25, 25))
        self.deck_2_play_or_pause.setText("")
        self.deck_2_play_or_pause.setIcon(icon7)
        self.deck_2_play_or_pause.setIconSize(QtCore.QSize(20, 20))
        self.deck_2_play_or_pause.setObjectName("deck_2_play_or_pause")
        self.horizontalLayout_11.addWidget(self.deck_2_play_or_pause)
        self.deck_2_stop = QtWidgets.QPushButton(self.deck_2_control_buttons_frame)
        self.deck_2_stop.setMinimumSize(QtCore.QSize(25, 25))
        self.deck_2_stop.setMaximumSize(QtCore.QSize(25, 25))
        self.deck_2_stop.setText("")
        self.deck_2_stop.setIcon(icon8)
        self.deck_2_stop.setObjectName("deck_2_stop")
        self.horizontalLayout_11.addWidget(self.deck_2_stop)
        spacerItem2 = QtWidgets.QSpacerItem(108, 8, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_11.addItem(spacerItem2)
        self.deck_2_volume = QtWidgets.QPushButton(self.deck_2_control_buttons_frame)
        self.deck_2_volume.setMinimumSize(QtCore.QSize(0, 25))
        self.deck_2_volume.setMaximumSize(QtCore.QSize(250, 25))
        self.deck_2_volume.setText("")
        self.deck_2_volume.setIcon(icon3)
        self.deck_2_volume.setObjectName("deck_2_volume")
        self.horizontalLayout_11.addWidget(self.deck_2_volume)
        self.deck_2_pan = QtWidgets.QPushButton(self.deck_2_control_buttons_frame)
        self.deck_2_pan.setMinimumSize(QtCore.QSize(0, 25))
        self.deck_2_pan.setMaximumSize(QtCore.QSize(250, 25))
        self.deck_2_pan.setText("")
        self.deck_2_pan.setIcon(icon4)
        self.deck_2_pan.setObjectName("deck_2_pan")
        self.horizontalLayout_11.addWidget(self.deck_2_pan)
        self.deck_2_normalize = QtWidgets.QPushButton(self.deck_2_control_buttons_frame)
        self.deck_2_normalize.setMinimumSize(QtCore.QSize(0, 25))
        self.deck_2_normalize.setMaximumSize(QtCore.QSize(250, 25))
        self.deck_2_normalize.setText("")
        self.deck_2_normalize.setIcon(icon5)
        self.deck_2_normalize.setObjectName("deck_2_normalize")
        self.horizontalLayout_11.addWidget(self.deck_2_normalize)
        self.deck_2_filter = QtWidgets.QPushButton(self.deck_2_control_buttons_frame)
        self.deck_2_filter.setMinimumSize(QtCore.QSize(0, 25))
        self.deck_2_filter.setMaximumSize(QtCore.QSize(250, 25))
        self.deck_2_filter.setText("")
        self.deck_2_filter.setIcon(icon6)
        self.deck_2_filter.setObjectName("deck_2_filter")
        self.horizontalLayout_11.addWidget(self.deck_2_filter)
        self.verticalLayout_4.addWidget(self.deck_2_control_buttons_frame)
        self.deck_2_timeline_frame = QtWidgets.QFrame(self.deck_2_main)
        self.deck_2_timeline_frame.setStyleSheet("QFrame{border:none;}")
        self.deck_2_timeline_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.deck_2_timeline_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.deck_2_timeline_frame.setObjectName("deck_2_timeline_frame")
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout(self.deck_2_timeline_frame)
        self.horizontalLayout_12.setContentsMargins(0, -1, 0, -1)
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.deck_2_timeslider = QtWidgets.QSlider(self.deck_2_timeline_frame)
        self.deck_2_timeslider.setOrientation(QtCore.Qt.Horizontal)
        self.deck_2_timeslider.setObjectName("deck_2_timeslider")
        self.horizontalLayout_12.addWidget(self.deck_2_timeslider)
        self.deck_2_duration = QtWidgets.QLabel(self.deck_2_timeline_frame)
        self.deck_2_duration.setObjectName("deck_2_duration")
        self.horizontalLayout_12.addWidget(self.deck_2_duration)
        self.verticalLayout_4.addWidget(self.deck_2_timeline_frame)
        self.gridLayout_8.addWidget(self.deck_2_main, 0, 1, 1, 1)
        self.deck_2_web = QtWidgets.QFrame(self.deck_2)
        self.deck_2_web.setMinimumSize(QtCore.QSize(0, 1))
        self.deck_2_web.setMaximumSize(QtCore.QSize(16777215, 1))
        self.deck_2_web.setStyleSheet("QFrame{border:none;}")
        self.deck_2_web.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.deck_2_web.setFrameShadow(QtWidgets.QFrame.Raised)
        self.deck_2_web.setObjectName("deck_2_web")
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout(self.deck_2_web)
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.gridLayout_8.addWidget(self.deck_2_web, 1, 0, 1, 2)
        self.gridLayout.addWidget(self.deck_2, 3, 2, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem3, 5, 0, 1, 3)
        self.main_graph = QtWidgets.QGraphicsView(self.decks)
        self.main_graph.setMinimumSize(QtCore.QSize(0, 120))
        self.main_graph.setMaximumSize(QtCore.QSize(16777215, 120))
        self.main_graph.setStyleSheet("QGraphicsView#main_graph{border:1px solid #ABABAB;background:white;}")
        self.main_graph.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.main_graph.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.main_graph.setRenderHints(QtGui.QPainter.Antialiasing)
        self.main_graph.setObjectName("main_graph")
        self.gridLayout.addWidget(self.main_graph, 2, 0, 1, 3)
        self.time_and_info_frame = QtWidgets.QFrame(self.decks)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.time_and_info_frame.sizePolicy().hasHeightForWidth())
        self.time_and_info_frame.setSizePolicy(sizePolicy)
        self.time_and_info_frame.setMinimumSize(QtCore.QSize(0, 0))
        self.time_and_info_frame.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.time_and_info_frame.setStyleSheet("QFrame {\n"
"    background: qlineargradient(\n"
"        spread:pad,\n"
"        x1:0, y1:0,\n"
"        x2:1, y2:1,\n"
"        stop:0 #e0f7fa, \n"
"        stop:1 #b2ebf2\n"
"    );\n"
"    border:1px solid #ABABAB;\n"
"    padding:3px 0px;\n"
"}\n"
"\n"
"QLabel {\n"
"    color: #01579b;\n"
"    border:none;\n"
"    background:transparent;\n"
"}\n"
"\n"
"#line_1,#line_2,#line_3,#line_4,#line_5 {\n"
"    background: qlineargradient(\n"
"        spread:pad,\n"
"        x1:0, y1:0,\n"
"        x2:0, y2:1,\n"
"        stop:0 #1e3a5f, /* Dark navy blue */\n"
"        stop:1 #274b77  /* Slightly lighter dark blue */\n"
"    );\n"
"    width: 2px; /* Thickness of the line */\n"
"    border: none; /* Remove any default border */\n"
"}")
        self.time_and_info_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.time_and_info_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.time_and_info_frame.setObjectName("time_and_info_frame")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.time_and_info_frame)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setSpacing(6)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem4)
        self.label_6 = QtWidgets.QLabel(self.time_and_info_frame)
        self.label_6.setMinimumSize(QtCore.QSize(20, 20))
        self.label_6.setMaximumSize(QtCore.QSize(20, 20))
        self.label_6.setText("")
        self.label_6.setPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/active-connections.png"))
        self.label_6.setScaledContents(True)
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_5.addWidget(self.label_6)
        self.label_4 = QtWidgets.QLabel(self.time_and_info_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_4.sizePolicy().hasHeightForWidth())
        self.label_4.setSizePolicy(sizePolicy)
        self.label_4.setScaledContents(False)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_5.addWidget(self.label_4)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem5)
        self.line_5 = QtWidgets.QFrame(self.time_and_info_frame)
        self.line_5.setMinimumSize(QtCore.QSize(1, 0))
        self.line_5.setMaximumSize(QtCore.QSize(1, 16777215))
        self.line_5.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.horizontalLayout_5.addWidget(self.line_5)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem6)
        self.label_7 = QtWidgets.QLabel(self.time_and_info_frame)
        self.label_7.setMinimumSize(QtCore.QSize(20, 20))
        self.label_7.setMaximumSize(QtCore.QSize(20, 20))
        self.label_7.setText("")
        self.label_7.setPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/listeners.png"))
        self.label_7.setScaledContents(True)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_5.addWidget(self.label_7)
        self.label_2 = QtWidgets.QLabel(self.time_and_info_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_5.addWidget(self.label_2)
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem7)
        self.line_2 = QtWidgets.QFrame(self.time_and_info_frame)
        self.line_2.setMinimumSize(QtCore.QSize(1, 0))
        self.line_2.setMaximumSize(QtCore.QSize(1, 16777215))
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.horizontalLayout_5.addWidget(self.line_2)
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem8)
        self.label_8 = QtWidgets.QLabel(self.time_and_info_frame)
        self.label_8.setMinimumSize(QtCore.QSize(20, 20))
        self.label_8.setMaximumSize(QtCore.QSize(20, 20))
        self.label_8.setText("")
        self.label_8.setPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/cpu.png"))
        self.label_8.setScaledContents(True)
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_5.addWidget(self.label_8)
        self.label_3 = QtWidgets.QLabel(self.time_and_info_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy)
        self.label_3.setMinimumSize(QtCore.QSize(75, 0))
        self.label_3.setMaximumSize(QtCore.QSize(75, 16777215))
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_5.addWidget(self.label_3)
        spacerItem9 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem9)
        self.line_3 = QtWidgets.QFrame(self.time_and_info_frame)
        self.line_3.setMinimumSize(QtCore.QSize(1, 0))
        self.line_3.setMaximumSize(QtCore.QSize(1, 16777215))
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.horizontalLayout_5.addWidget(self.line_3)
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem10)
        self.label_9 = QtWidgets.QLabel(self.time_and_info_frame)
        self.label_9.setMinimumSize(QtCore.QSize(20, 20))
        self.label_9.setMaximumSize(QtCore.QSize(20, 20))
        self.label_9.setText("")
        self.label_9.setPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/date.png"))
        self.label_9.setScaledContents(True)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout_5.addWidget(self.label_9)
        self.label = QtWidgets.QLabel(self.time_and_info_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setText("")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.horizontalLayout_5.addWidget(self.label)
        spacerItem11 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem11)
        self.line_4 = QtWidgets.QFrame(self.time_and_info_frame)
        self.line_4.setMinimumSize(QtCore.QSize(1, 0))
        self.line_4.setMaximumSize(QtCore.QSize(1, 16777215))
        self.line_4.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.horizontalLayout_5.addWidget(self.line_4)
        spacerItem12 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem12)
        self.label_11 = QtWidgets.QLabel(self.time_and_info_frame)
        self.label_11.setMinimumSize(QtCore.QSize(20, 20))
        self.label_11.setMaximumSize(QtCore.QSize(20, 20))
        self.label_11.setText("")
        self.label_11.setPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/ram.png"))
        self.label_11.setScaledContents(True)
        self.label_11.setObjectName("label_11")
        self.horizontalLayout_5.addWidget(self.label_11)
        self.label_5 = QtWidgets.QLabel(self.time_and_info_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())
        self.label_5.setSizePolicy(sizePolicy)
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_5.addWidget(self.label_5)
        spacerItem13 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem13)
        self.gridLayout.addWidget(self.time_and_info_frame, 1, 0, 1, 3)
        self.navigation_buttons_frame = QtWidgets.QFrame(self.decks)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.navigation_buttons_frame.sizePolicy().hasHeightForWidth())
        self.navigation_buttons_frame.setSizePolicy(sizePolicy)
        self.navigation_buttons_frame.setStyleSheet("QFrame{border:none;}")
        self.navigation_buttons_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.navigation_buttons_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.navigation_buttons_frame.setObjectName("navigation_buttons_frame")
        self.horizontalLayout_30 = QtWidgets.QHBoxLayout(self.navigation_buttons_frame)
        self.horizontalLayout_30.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_30.setSpacing(0)
        self.horizontalLayout_30.setObjectName("horizontalLayout_30")
        spacerItem14 = QtWidgets.QSpacerItem(1439, 14, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_30.addItem(spacerItem14)
        self.move_previous_1 = QtWidgets.QPushButton(self.navigation_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_previous_1.sizePolicy().hasHeightForWidth())
        self.move_previous_1.setSizePolicy(sizePolicy)
        self.move_previous_1.setMinimumSize(QtCore.QSize(14, 14))
        self.move_previous_1.setMaximumSize(QtCore.QSize(14, 14))
        self.move_previous_1.setStyleSheet("QPushButton{\n"
"    padding-right:2px;\n"
"    padding-top:2px;\n"
"}\n"
"\n"
"QPushButton:!hover{\n"
"    border:none;\n"
"    background:transparent;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    border:1px solid #ABABAB;\n"
"    background:rgb(251, 251, 251);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    border:1px solid #ABABAB;\n"
"    background:rgb(220, 220, 220);\n"
"}")
        self.move_previous_1.setText("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/stacked-widget/assets/icons/stacked-widget/arrow-left.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.move_previous_1.setIcon(icon9)
        self.move_previous_1.setIconSize(QtCore.QSize(8, 8))
        self.move_previous_1.setObjectName("move_previous_1")
        self.horizontalLayout_30.addWidget(self.move_previous_1)
        spacerItem15 = QtWidgets.QSpacerItem(2, 14, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_30.addItem(spacerItem15)
        self.move_next_1 = QtWidgets.QPushButton(self.navigation_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_next_1.sizePolicy().hasHeightForWidth())
        self.move_next_1.setSizePolicy(sizePolicy)
        self.move_next_1.setMinimumSize(QtCore.QSize(14, 14))
        self.move_next_1.setMaximumSize(QtCore.QSize(14, 14))
        self.move_next_1.setStyleSheet("QPushButton{\n"
"    padding-right:4px;\n"
"    padding-top:2px;\n"
"}\n"
"\n"
"QPushButton:!hover{\n"
"    border:none;\n"
"    background:transparent;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    border:1px solid #ABABAB;\n"
"    background:rgb(251, 251, 251);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    border:1px solid #ABABAB;\n"
"    background:rgb(220, 220, 220);\n"
"}")
        self.move_next_1.setText("")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/stacked-widget/assets/icons/stacked-widget/arrow-right.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.move_next_1.setIcon(icon10)
        self.move_next_1.setIconSize(QtCore.QSize(8, 8))
        self.move_next_1.setObjectName("move_next_1")
        self.horizontalLayout_30.addWidget(self.move_next_1)
        self.gridLayout.addWidget(self.navigation_buttons_frame, 0, 0, 1, 3)
        self.general_deck = QtWidgets.QFrame(self.decks)
        self.general_deck.setMinimumSize(QtCore.QSize(0, 124))
        self.general_deck.setMaximumSize(QtCore.QSize(16777215, 124))
        self.general_deck.setStyleSheet("QFrame#general_deck{border:1px solid #ABABAB;background:pink;}")
        self.general_deck.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.general_deck.setFrameShadow(QtWidgets.QFrame.Raised)
        self.general_deck.setObjectName("general_deck")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.general_deck)
        self.gridLayout_4.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_4.setSpacing(3)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.general_deck_play_or_pause = QtWidgets.QPushButton(self.general_deck)
        self.general_deck_play_or_pause.setMinimumSize(QtCore.QSize(25, 25))
        self.general_deck_play_or_pause.setMaximumSize(QtCore.QSize(16777215, 25))
        self.general_deck_play_or_pause.setText("")
        self.general_deck_play_or_pause.setIcon(icon7)
        self.general_deck_play_or_pause.setObjectName("general_deck_play_or_pause")
        self.gridLayout_4.addWidget(self.general_deck_play_or_pause, 0, 2, 1, 1)
        self.general_deck_play_previous = QtWidgets.QPushButton(self.general_deck)
        self.general_deck_play_previous.setMinimumSize(QtCore.QSize(25, 25))
        self.general_deck_play_previous.setMaximumSize(QtCore.QSize(16777215, 25))
        self.general_deck_play_previous.setText("")
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/previous-song.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.general_deck_play_previous.setIcon(icon11)
        self.general_deck_play_previous.setObjectName("general_deck_play_previous")
        self.gridLayout_4.addWidget(self.general_deck_play_previous, 0, 0, 1, 1)
        self.general_deck_application_volume = QtWidgets.QPushButton(self.general_deck)
        self.general_deck_application_volume.setMinimumSize(QtCore.QSize(25, 25))
        self.general_deck_application_volume.setMaximumSize(QtCore.QSize(16777215, 25))
        self.general_deck_application_volume.setText("")
        self.general_deck_application_volume.setIcon(icon3)
        self.general_deck_application_volume.setObjectName("general_deck_application_volume")
        self.gridLayout_4.addWidget(self.general_deck_application_volume, 1, 3, 1, 1)
        self.general_deck_normalize = QtWidgets.QPushButton(self.general_deck)
        self.general_deck_normalize.setMinimumSize(QtCore.QSize(25, 25))
        self.general_deck_normalize.setMaximumSize(QtCore.QSize(16777215, 25))
        self.general_deck_normalize.setText("")
        self.general_deck_normalize.setIcon(icon5)
        self.general_deck_normalize.setObjectName("general_deck_normalize")
        self.gridLayout_4.addWidget(self.general_deck_normalize, 2, 2, 1, 1)
        self.general_deck_filter = QtWidgets.QPushButton(self.general_deck)
        self.general_deck_filter.setMinimumSize(QtCore.QSize(25, 25))
        self.general_deck_filter.setMaximumSize(QtCore.QSize(16777215, 25))
        self.general_deck_filter.setText("")
        self.general_deck_filter.setIcon(icon6)
        self.general_deck_filter.setObjectName("general_deck_filter")
        self.gridLayout_4.addWidget(self.general_deck_filter, 2, 3, 1, 1)
        self.general_deck_pan = QtWidgets.QPushButton(self.general_deck)
        self.general_deck_pan.setMinimumSize(QtCore.QSize(25, 25))
        self.general_deck_pan.setMaximumSize(QtCore.QSize(16777215, 25))
        self.general_deck_pan.setText("")
        self.general_deck_pan.setIcon(icon4)
        self.general_deck_pan.setObjectName("general_deck_pan")
        self.gridLayout_4.addWidget(self.general_deck_pan, 2, 0, 1, 1)
        self.general_deck_play_next = QtWidgets.QPushButton(self.general_deck)
        self.general_deck_play_next.setMinimumSize(QtCore.QSize(25, 25))
        self.general_deck_play_next.setMaximumSize(QtCore.QSize(16777215, 25))
        self.general_deck_play_next.setText("")
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/next-song.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.general_deck_play_next.setIcon(icon12)
        self.general_deck_play_next.setObjectName("general_deck_play_next")
        self.gridLayout_4.addWidget(self.general_deck_play_next, 0, 3, 1, 1)
        self.general_deck_windows_volume = QtWidgets.QPushButton(self.general_deck)
        self.general_deck_windows_volume.setMinimumSize(QtCore.QSize(25, 25))
        self.general_deck_windows_volume.setMaximumSize(QtCore.QSize(16777215, 25))
        self.general_deck_windows_volume.setText("")
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/windows.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.general_deck_windows_volume.setIcon(icon13)
        self.general_deck_windows_volume.setObjectName("general_deck_windows_volume")
        self.gridLayout_4.addWidget(self.general_deck_windows_volume, 1, 0, 1, 1)
        self.general_deck_stop = QtWidgets.QPushButton(self.general_deck)
        self.general_deck_stop.setMinimumSize(QtCore.QSize(25, 25))
        self.general_deck_stop.setMaximumSize(QtCore.QSize(16777215, 25))
        self.general_deck_stop.setText("")
        self.general_deck_stop.setIcon(icon8)
        self.general_deck_stop.setObjectName("general_deck_stop")
        self.gridLayout_4.addWidget(self.general_deck_stop, 1, 2, 1, 1)
        self.gridLayout.addWidget(self.general_deck, 3, 1, 1, 1)
        self.gridLayout_3.addWidget(self.decks, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_1)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.page_2)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setSpacing(3)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.frame_page_2 = QtWidgets.QFrame(self.page_2)
        self.frame_page_2.setMinimumSize(QtCore.QSize(0, 0))
        self.frame_page_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.frame_page_2.setStyleSheet("QFrame#frame_page_2{border:none;}")
        self.frame_page_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_page_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_page_2.setObjectName("frame_page_2")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.frame_page_2)
        self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_9.setSpacing(3)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.navigation_buttons_frame_2 = QtWidgets.QFrame(self.frame_page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.navigation_buttons_frame_2.sizePolicy().hasHeightForWidth())
        self.navigation_buttons_frame_2.setSizePolicy(sizePolicy)
        self.navigation_buttons_frame_2.setStyleSheet("QFrame{border:none;}")
        self.navigation_buttons_frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.navigation_buttons_frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.navigation_buttons_frame_2.setObjectName("navigation_buttons_frame_2")
        self.horizontalLayout_31 = QtWidgets.QHBoxLayout(self.navigation_buttons_frame_2)
        self.horizontalLayout_31.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_31.setSpacing(0)
        self.horizontalLayout_31.setObjectName("horizontalLayout_31")
        spacerItem16 = QtWidgets.QSpacerItem(1439, 14, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_31.addItem(spacerItem16)
        self.move_previous_2 = QtWidgets.QPushButton(self.navigation_buttons_frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_previous_2.sizePolicy().hasHeightForWidth())
        self.move_previous_2.setSizePolicy(sizePolicy)
        self.move_previous_2.setMinimumSize(QtCore.QSize(14, 14))
        self.move_previous_2.setMaximumSize(QtCore.QSize(14, 14))
        self.move_previous_2.setStyleSheet("QPushButton{\n"
"    padding-right:2px;\n"
"    padding-top:2px;\n"
"}\n"
"\n"
"QPushButton:!hover{\n"
"    border:none;\n"
"    background:transparent;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    border:1px solid #ABABAB;\n"
"    background:rgb(251, 251, 251);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    border:1px solid #ABABAB;\n"
"    background:rgb(220, 220, 220);\n"
"}")
        self.move_previous_2.setText("")
        self.move_previous_2.setIcon(icon9)
        self.move_previous_2.setIconSize(QtCore.QSize(8, 8))
        self.move_previous_2.setObjectName("move_previous_2")
        self.horizontalLayout_31.addWidget(self.move_previous_2)
        spacerItem17 = QtWidgets.QSpacerItem(2, 14, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_31.addItem(spacerItem17)
        self.move_next_2 = QtWidgets.QPushButton(self.navigation_buttons_frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_next_2.sizePolicy().hasHeightForWidth())
        self.move_next_2.setSizePolicy(sizePolicy)
        self.move_next_2.setMinimumSize(QtCore.QSize(14, 14))
        self.move_next_2.setMaximumSize(QtCore.QSize(14, 14))
        self.move_next_2.setStyleSheet("QPushButton{\n"
"    padding-right:4px;\n"
"    padding-top:2px;\n"
"}\n"
"\n"
"QPushButton:!hover{\n"
"    border:none;\n"
"    background:transparent;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    border:1px solid #ABABAB;\n"
"    background:rgb(251, 251, 251);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    border:1px solid #ABABAB;\n"
"    background:rgb(220, 220, 220);\n"
"}")
        self.move_next_2.setText("")
        self.move_next_2.setIcon(icon10)
        self.move_next_2.setIconSize(QtCore.QSize(8, 8))
        self.move_next_2.setObjectName("move_next_2")
        self.horizontalLayout_31.addWidget(self.move_next_2)
        self.verticalLayout_9.addWidget(self.navigation_buttons_frame_2)
        self.music_clip_deck = QtWidgets.QFrame(self.frame_page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_deck.sizePolicy().hasHeightForWidth())
        self.music_clip_deck.setSizePolicy(sizePolicy)
        self.music_clip_deck.setMinimumSize(QtCore.QSize(0, 287))
        self.music_clip_deck.setMaximumSize(QtCore.QSize(16777215, 287))
        self.music_clip_deck.setStyleSheet("QFrame#music_clip_deck{\n"
"    border:1px solid #ABABAB;\n"
"    background-color:yellow;\n"
"}")
        self.music_clip_deck.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.music_clip_deck.setFrameShadow(QtWidgets.QFrame.Raised)
        self.music_clip_deck.setObjectName("music_clip_deck")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.music_clip_deck)
        self.gridLayout_6.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_6.setSpacing(3)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.music_clip_deck_main = QtWidgets.QFrame(self.music_clip_deck)
        self.music_clip_deck_main.setStyleSheet("QFrame{border:none;}")
        self.music_clip_deck_main.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.music_clip_deck_main.setFrameShadow(QtWidgets.QFrame.Raised)
        self.music_clip_deck_main.setObjectName("music_clip_deck_main")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.music_clip_deck_main)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setSpacing(0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.music_clip_deck_labels_frame = QtWidgets.QFrame(self.music_clip_deck_main)
        self.music_clip_deck_labels_frame.setStyleSheet("QFrame{border:none;}")
        self.music_clip_deck_labels_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.music_clip_deck_labels_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.music_clip_deck_labels_frame.setObjectName("music_clip_deck_labels_frame")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.music_clip_deck_labels_frame)
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.music_clip_deck_label_name = QtWidgets.QLabel(self.music_clip_deck_labels_frame)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.music_clip_deck_label_name.setFont(font)
        self.music_clip_deck_label_name.setStyleSheet("QLabel{border:none;}")
        self.music_clip_deck_label_name.setObjectName("music_clip_deck_label_name")
        self.horizontalLayout_6.addWidget(self.music_clip_deck_label_name)
        self.music_clip_deck_title = QtWidgets.QLabel(self.music_clip_deck_labels_frame)
        self.music_clip_deck_title.setStyleSheet("QLabel{border:none;}")
        self.music_clip_deck_title.setObjectName("music_clip_deck_title")
        self.horizontalLayout_6.addWidget(self.music_clip_deck_title)
        spacerItem18 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem18)
        self.verticalLayout_5.addWidget(self.music_clip_deck_labels_frame)
        self.music_clip_deck_timeline_container_frame = QtWidgets.QFrame(self.music_clip_deck_main)
        self.music_clip_deck_timeline_container_frame.setMinimumSize(QtCore.QSize(0, 5))
        self.music_clip_deck_timeline_container_frame.setMaximumSize(QtCore.QSize(16777215, 5))
        self.music_clip_deck_timeline_container_frame.setStyleSheet("QFrame{border:1px solid #ABABAB;}")
        self.music_clip_deck_timeline_container_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.music_clip_deck_timeline_container_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.music_clip_deck_timeline_container_frame.setObjectName("music_clip_deck_timeline_container_frame")
        self.music_clip_deck_timeline_pick_frame = QtWidgets.QFrame(self.music_clip_deck_timeline_container_frame)
        self.music_clip_deck_timeline_pick_frame.setGeometry(QtCore.QRect(1, 1, 0, 4))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_deck_timeline_pick_frame.sizePolicy().hasHeightForWidth())
        self.music_clip_deck_timeline_pick_frame.setSizePolicy(sizePolicy)
        self.music_clip_deck_timeline_pick_frame.setMinimumSize(QtCore.QSize(0, 4))
        self.music_clip_deck_timeline_pick_frame.setMaximumSize(QtCore.QSize(16777215, 4))
        self.music_clip_deck_timeline_pick_frame.setStyleSheet("QFrame{\n"
"    background-color:blue;\n"
"}")
        self.music_clip_deck_timeline_pick_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.music_clip_deck_timeline_pick_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.music_clip_deck_timeline_pick_frame.setObjectName("music_clip_deck_timeline_pick_frame")
        self.verticalLayout_5.addWidget(self.music_clip_deck_timeline_container_frame)
        self.music_clip_deck_control_buttons_frame = QtWidgets.QFrame(self.music_clip_deck_main)
        self.music_clip_deck_control_buttons_frame.setStyleSheet("QFrame{border:none;}")
        self.music_clip_deck_control_buttons_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.music_clip_deck_control_buttons_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.music_clip_deck_control_buttons_frame.setObjectName("music_clip_deck_control_buttons_frame")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.music_clip_deck_control_buttons_frame)
        self.horizontalLayout_7.setContentsMargins(0, -1, 0, -1)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.music_clip_deck_play_or_pause = QtWidgets.QPushButton(self.music_clip_deck_control_buttons_frame)
        self.music_clip_deck_play_or_pause.setMinimumSize(QtCore.QSize(25, 25))
        self.music_clip_deck_play_or_pause.setMaximumSize(QtCore.QSize(25, 25))
        self.music_clip_deck_play_or_pause.setText("")
        self.music_clip_deck_play_or_pause.setIcon(icon7)
        self.music_clip_deck_play_or_pause.setIconSize(QtCore.QSize(20, 20))
        self.music_clip_deck_play_or_pause.setObjectName("music_clip_deck_play_or_pause")
        self.horizontalLayout_7.addWidget(self.music_clip_deck_play_or_pause)
        self.music_clip_deck_stop = QtWidgets.QPushButton(self.music_clip_deck_control_buttons_frame)
        self.music_clip_deck_stop.setMinimumSize(QtCore.QSize(25, 25))
        self.music_clip_deck_stop.setMaximumSize(QtCore.QSize(25, 25))
        self.music_clip_deck_stop.setText("")
        self.music_clip_deck_stop.setIcon(icon8)
        self.music_clip_deck_stop.setObjectName("music_clip_deck_stop")
        self.horizontalLayout_7.addWidget(self.music_clip_deck_stop)
        spacerItem19 = QtWidgets.QSpacerItem(589, 8, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem19)
        self.music_clip_deck_volume = QtWidgets.QPushButton(self.music_clip_deck_control_buttons_frame)
        self.music_clip_deck_volume.setMinimumSize(QtCore.QSize(0, 25))
        self.music_clip_deck_volume.setMaximumSize(QtCore.QSize(250, 25))
        self.music_clip_deck_volume.setText("")
        self.music_clip_deck_volume.setIcon(icon3)
        self.music_clip_deck_volume.setObjectName("music_clip_deck_volume")
        self.horizontalLayout_7.addWidget(self.music_clip_deck_volume)
        self.music_clip_deck_pan = QtWidgets.QPushButton(self.music_clip_deck_control_buttons_frame)
        self.music_clip_deck_pan.setMinimumSize(QtCore.QSize(0, 25))
        self.music_clip_deck_pan.setMaximumSize(QtCore.QSize(250, 25))
        self.music_clip_deck_pan.setText("")
        self.music_clip_deck_pan.setIcon(icon4)
        self.music_clip_deck_pan.setObjectName("music_clip_deck_pan")
        self.horizontalLayout_7.addWidget(self.music_clip_deck_pan)
        self.music_clip_deck_normalize = QtWidgets.QPushButton(self.music_clip_deck_control_buttons_frame)
        self.music_clip_deck_normalize.setMinimumSize(QtCore.QSize(0, 25))
        self.music_clip_deck_normalize.setMaximumSize(QtCore.QSize(250, 25))
        self.music_clip_deck_normalize.setText("")
        self.music_clip_deck_normalize.setIcon(icon5)
        self.music_clip_deck_normalize.setObjectName("music_clip_deck_normalize")
        self.horizontalLayout_7.addWidget(self.music_clip_deck_normalize)
        self.music_clip_deck_filter = QtWidgets.QPushButton(self.music_clip_deck_control_buttons_frame)
        self.music_clip_deck_filter.setMinimumSize(QtCore.QSize(0, 25))
        self.music_clip_deck_filter.setMaximumSize(QtCore.QSize(250, 25))
        self.music_clip_deck_filter.setText("")
        self.music_clip_deck_filter.setIcon(icon6)
        self.music_clip_deck_filter.setObjectName("music_clip_deck_filter")
        self.horizontalLayout_7.addWidget(self.music_clip_deck_filter)
        self.verticalLayout_5.addWidget(self.music_clip_deck_control_buttons_frame)
        self.music_clip_deck_timeline_frame = QtWidgets.QFrame(self.music_clip_deck_main)
        self.music_clip_deck_timeline_frame.setStyleSheet("QFrame{border:none;}")
        self.music_clip_deck_timeline_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.music_clip_deck_timeline_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.music_clip_deck_timeline_frame.setObjectName("music_clip_deck_timeline_frame")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.music_clip_deck_timeline_frame)
        self.horizontalLayout_8.setContentsMargins(0, -1, 0, -1)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.music_clip_deck_timeslider = QtWidgets.QSlider(self.music_clip_deck_timeline_frame)
        self.music_clip_deck_timeslider.setOrientation(QtCore.Qt.Horizontal)
        self.music_clip_deck_timeslider.setObjectName("music_clip_deck_timeslider")
        self.horizontalLayout_8.addWidget(self.music_clip_deck_timeslider)
        self.music_clip_deck_duration = QtWidgets.QLabel(self.music_clip_deck_timeline_frame)
        self.music_clip_deck_duration.setObjectName("music_clip_deck_duration")
        self.horizontalLayout_8.addWidget(self.music_clip_deck_duration)
        self.verticalLayout_5.addWidget(self.music_clip_deck_timeline_frame)
        self.gridLayout_6.addWidget(self.music_clip_deck_main, 0, 0, 1, 1)
        self.music_clip_deck_buttons_frame = QtWidgets.QFrame(self.music_clip_deck)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_deck_buttons_frame.sizePolicy().hasHeightForWidth())
        self.music_clip_deck_buttons_frame.setSizePolicy(sizePolicy)
        self.music_clip_deck_buttons_frame.setMinimumSize(QtCore.QSize(0, 0))
        self.music_clip_deck_buttons_frame.setStyleSheet("QFrame{\n"
"    border:none;\n"
"}")
        self.music_clip_deck_buttons_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.music_clip_deck_buttons_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.music_clip_deck_buttons_frame.setObjectName("music_clip_deck_buttons_frame")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.music_clip_deck_buttons_frame)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.music_clip_1 = QtWidgets.QPushButton(self.music_clip_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_1.sizePolicy().hasHeightForWidth())
        self.music_clip_1.setSizePolicy(sizePolicy)
        self.music_clip_1.setObjectName("music_clip_1")
        self.gridLayout_13.addWidget(self.music_clip_1, 0, 0, 1, 1)
        self.music_clip_2 = QtWidgets.QPushButton(self.music_clip_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_2.sizePolicy().hasHeightForWidth())
        self.music_clip_2.setSizePolicy(sizePolicy)
        self.music_clip_2.setObjectName("music_clip_2")
        self.gridLayout_13.addWidget(self.music_clip_2, 0, 1, 1, 1)
        self.music_clip_3 = QtWidgets.QPushButton(self.music_clip_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_3.sizePolicy().hasHeightForWidth())
        self.music_clip_3.setSizePolicy(sizePolicy)
        self.music_clip_3.setObjectName("music_clip_3")
        self.gridLayout_13.addWidget(self.music_clip_3, 0, 2, 1, 1)
        self.music_clip_4 = QtWidgets.QPushButton(self.music_clip_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_4.sizePolicy().hasHeightForWidth())
        self.music_clip_4.setSizePolicy(sizePolicy)
        self.music_clip_4.setObjectName("music_clip_4")
        self.gridLayout_13.addWidget(self.music_clip_4, 0, 3, 1, 1)
        self.music_clip_5 = QtWidgets.QPushButton(self.music_clip_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_5.sizePolicy().hasHeightForWidth())
        self.music_clip_5.setSizePolicy(sizePolicy)
        self.music_clip_5.setObjectName("music_clip_5")
        self.gridLayout_13.addWidget(self.music_clip_5, 1, 0, 1, 1)
        self.music_clip_6 = QtWidgets.QPushButton(self.music_clip_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_6.sizePolicy().hasHeightForWidth())
        self.music_clip_6.setSizePolicy(sizePolicy)
        self.music_clip_6.setObjectName("music_clip_6")
        self.gridLayout_13.addWidget(self.music_clip_6, 1, 1, 1, 1)
        self.music_clip_7 = QtWidgets.QPushButton(self.music_clip_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_7.sizePolicy().hasHeightForWidth())
        self.music_clip_7.setSizePolicy(sizePolicy)
        self.music_clip_7.setObjectName("music_clip_7")
        self.gridLayout_13.addWidget(self.music_clip_7, 1, 2, 1, 1)
        self.music_clip_8 = QtWidgets.QPushButton(self.music_clip_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_8.sizePolicy().hasHeightForWidth())
        self.music_clip_8.setSizePolicy(sizePolicy)
        self.music_clip_8.setObjectName("music_clip_8")
        self.gridLayout_13.addWidget(self.music_clip_8, 1, 3, 1, 1)
        self.music_clip_9 = QtWidgets.QPushButton(self.music_clip_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_9.sizePolicy().hasHeightForWidth())
        self.music_clip_9.setSizePolicy(sizePolicy)
        self.music_clip_9.setObjectName("music_clip_9")
        self.gridLayout_13.addWidget(self.music_clip_9, 2, 0, 1, 1)
        self.music_clip_10 = QtWidgets.QPushButton(self.music_clip_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_10.sizePolicy().hasHeightForWidth())
        self.music_clip_10.setSizePolicy(sizePolicy)
        self.music_clip_10.setObjectName("music_clip_10")
        self.gridLayout_13.addWidget(self.music_clip_10, 2, 1, 1, 1)
        self.music_clip_11 = QtWidgets.QPushButton(self.music_clip_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_11.sizePolicy().hasHeightForWidth())
        self.music_clip_11.setSizePolicy(sizePolicy)
        self.music_clip_11.setObjectName("music_clip_11")
        self.gridLayout_13.addWidget(self.music_clip_11, 2, 2, 1, 1)
        self.music_clip_12 = QtWidgets.QPushButton(self.music_clip_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_12.sizePolicy().hasHeightForWidth())
        self.music_clip_12.setSizePolicy(sizePolicy)
        self.music_clip_12.setObjectName("music_clip_12")
        self.gridLayout_13.addWidget(self.music_clip_12, 2, 3, 1, 1)
        self.music_clip_13 = QtWidgets.QPushButton(self.music_clip_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_13.sizePolicy().hasHeightForWidth())
        self.music_clip_13.setSizePolicy(sizePolicy)
        self.music_clip_13.setObjectName("music_clip_13")
        self.gridLayout_13.addWidget(self.music_clip_13, 3, 0, 1, 1)
        self.music_clip_14 = QtWidgets.QPushButton(self.music_clip_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_14.sizePolicy().hasHeightForWidth())
        self.music_clip_14.setSizePolicy(sizePolicy)
        self.music_clip_14.setObjectName("music_clip_14")
        self.gridLayout_13.addWidget(self.music_clip_14, 3, 1, 1, 1)
        self.music_clip_15 = QtWidgets.QPushButton(self.music_clip_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_15.sizePolicy().hasHeightForWidth())
        self.music_clip_15.setSizePolicy(sizePolicy)
        self.music_clip_15.setObjectName("music_clip_15")
        self.gridLayout_13.addWidget(self.music_clip_15, 3, 2, 1, 1)
        self.music_clip_16 = QtWidgets.QPushButton(self.music_clip_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_16.sizePolicy().hasHeightForWidth())
        self.music_clip_16.setSizePolicy(sizePolicy)
        self.music_clip_16.setObjectName("music_clip_16")
        self.gridLayout_13.addWidget(self.music_clip_16, 3, 3, 1, 1)
        self.music_clip_17 = QtWidgets.QPushButton(self.music_clip_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_17.sizePolicy().hasHeightForWidth())
        self.music_clip_17.setSizePolicy(sizePolicy)
        self.music_clip_17.setObjectName("music_clip_17")
        self.gridLayout_13.addWidget(self.music_clip_17, 4, 0, 1, 1)
        self.music_clip_18 = QtWidgets.QPushButton(self.music_clip_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_18.sizePolicy().hasHeightForWidth())
        self.music_clip_18.setSizePolicy(sizePolicy)
        self.music_clip_18.setObjectName("music_clip_18")
        self.gridLayout_13.addWidget(self.music_clip_18, 4, 1, 1, 1)
        self.music_clip_19 = QtWidgets.QPushButton(self.music_clip_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_19.sizePolicy().hasHeightForWidth())
        self.music_clip_19.setSizePolicy(sizePolicy)
        self.music_clip_19.setObjectName("music_clip_19")
        self.gridLayout_13.addWidget(self.music_clip_19, 4, 2, 1, 1)
        self.music_clip_20 = QtWidgets.QPushButton(self.music_clip_deck_buttons_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.music_clip_20.sizePolicy().hasHeightForWidth())
        self.music_clip_20.setSizePolicy(sizePolicy)
        self.music_clip_20.setObjectName("music_clip_20")
        self.gridLayout_13.addWidget(self.music_clip_20, 4, 3, 1, 1)
        self.gridLayout_6.addWidget(self.music_clip_deck_buttons_frame, 1, 0, 1, 1)
        self.verticalLayout_9.addWidget(self.music_clip_deck)
        self.record_deck = QtWidgets.QFrame(self.frame_page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.record_deck.sizePolicy().hasHeightForWidth())
        self.record_deck.setSizePolicy(sizePolicy)
        self.record_deck.setMinimumSize(QtCore.QSize(0, 70))
        self.record_deck.setMaximumSize(QtCore.QSize(16777215, 70))
        self.record_deck.setStyleSheet("QFrame#record_deck{\n"
"    border:1px solid #ABABAB;\n"
"    background:rgb(255, 202, 225);\n"
"}")
        self.record_deck.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.record_deck.setFrameShadow(QtWidgets.QFrame.Raised)
        self.record_deck.setObjectName("record_deck")
        self.gridLayout_116 = QtWidgets.QGridLayout(self.record_deck)
        self.gridLayout_116.setObjectName("gridLayout_116")
        self.record_deck_label_name = QtWidgets.QLabel(self.record_deck)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.record_deck_label_name.sizePolicy().hasHeightForWidth())
        self.record_deck_label_name.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.record_deck_label_name.setFont(font)
        self.record_deck_label_name.setStyleSheet("QLabel{border:none;}")
        self.record_deck_label_name.setObjectName("record_deck_label_name")
        self.gridLayout_116.addWidget(self.record_deck_label_name, 0, 0, 1, 1)
        self.record_deck_filename_lineEdit = QtWidgets.QLineEdit(self.record_deck)
        self.record_deck_filename_lineEdit.setMinimumSize(QtCore.QSize(0, 22))
        self.record_deck_filename_lineEdit.setMaximumSize(QtCore.QSize(16777215, 22))
        self.record_deck_filename_lineEdit.setStyleSheet("height:24px;border:1px solid #ABABAB;")
        self.record_deck_filename_lineEdit.setObjectName("record_deck_filename_lineEdit")
        self.gridLayout_116.addWidget(self.record_deck_filename_lineEdit, 0, 1, 1, 1)
        self.frame = QtWidgets.QFrame(self.record_deck)
        self.frame.setStyleSheet("#frame{border:none;}")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout_74 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_74.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_74.setObjectName("gridLayout_74")
        self.record_deck_start = QtWidgets.QPushButton(self.frame)
        self.record_deck_start.setMinimumSize(QtCore.QSize(0, 22))
        self.record_deck_start.setMaximumSize(QtCore.QSize(16777215, 22))
        self.record_deck_start.setStyleSheet("height:24px;")
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-3/start-recording.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.record_deck_start.setIcon(icon14)
        self.record_deck_start.setObjectName("record_deck_start")
        self.gridLayout_74.addWidget(self.record_deck_start, 0, 0, 1, 1)
        self.record_deck_pause = QtWidgets.QPushButton(self.frame)
        self.record_deck_pause.setEnabled(False)
        self.record_deck_pause.setMinimumSize(QtCore.QSize(0, 22))
        self.record_deck_pause.setMaximumSize(QtCore.QSize(16777215, 22))
        self.record_deck_pause.setStyleSheet("height:24px;")
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-3/record-pause.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.record_deck_pause.setIcon(icon15)
        self.record_deck_pause.setObjectName("record_deck_pause")
        self.gridLayout_74.addWidget(self.record_deck_pause, 0, 1, 1, 1)
        self.record_deck_stop = QtWidgets.QPushButton(self.frame)
        self.record_deck_stop.setEnabled(False)
        self.record_deck_stop.setMinimumSize(QtCore.QSize(0, 22))
        self.record_deck_stop.setMaximumSize(QtCore.QSize(16777215, 22))
        self.record_deck_stop.setStyleSheet("height:24px;")
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-3/record-stop.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.record_deck_stop.setIcon(icon16)
        self.record_deck_stop.setObjectName("record_deck_stop")
        self.gridLayout_74.addWidget(self.record_deck_stop, 0, 2, 1, 1)
        self.gridLayout_116.addWidget(self.frame, 1, 0, 1, 3)
        self.verticalLayout_9.addWidget(self.record_deck)
        spacerItem20 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_9.addItem(spacerItem20)
        self.verticalLayout_7.addWidget(self.frame_page_2)
        self.stackedWidget.addWidget(self.page_2)
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setObjectName("page_3")
        self.gridLayout_76 = QtWidgets.QGridLayout(self.page_3)
        self.gridLayout_76.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_76.setSpacing(3)
        self.gridLayout_76.setObjectName("gridLayout_76")
        self.frame_page_4 = QtWidgets.QFrame(self.page_3)
        self.frame_page_4.setMinimumSize(QtCore.QSize(0, 0))
        self.frame_page_4.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.frame_page_4.setStyleSheet("QFrame#frame_page_4{border:none;}")
        self.frame_page_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_page_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_page_4.setObjectName("frame_page_4")
        self.gridLayout_83 = QtWidgets.QGridLayout(self.frame_page_4)
        self.gridLayout_83.setContentsMargins(0, 0, 0, -1)
        self.gridLayout_83.setSpacing(3)
        self.gridLayout_83.setObjectName("gridLayout_83")
        self.ip_calls_frame = QtWidgets.QFrame(self.frame_page_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_calls_frame.sizePolicy().hasHeightForWidth())
        self.ip_calls_frame.setSizePolicy(sizePolicy)
        self.ip_calls_frame.setMinimumSize(QtCore.QSize(0, 386))
        self.ip_calls_frame.setMaximumSize(QtCore.QSize(16777215, 386))
        self.ip_calls_frame.setStyleSheet("QFrame#ip_calls_frame{\n"
"    background-color:rgb(105, 0, 157);\n"
"    border:1px solid #ABABAB;\n"
"}")
        self.ip_calls_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ip_calls_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ip_calls_frame.setObjectName("ip_calls_frame")
        self.gridLayout_66 = QtWidgets.QGridLayout(self.ip_calls_frame)
        self.gridLayout_66.setObjectName("gridLayout_66")
        spacerItem21 = QtWidgets.QSpacerItem(6, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_66.addItem(spacerItem21, 1, 0, 1, 1)
        self.local_video_frame = QtWidgets.QFrame(self.ip_calls_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.local_video_frame.sizePolicy().hasHeightForWidth())
        self.local_video_frame.setSizePolicy(sizePolicy)
        self.local_video_frame.setMinimumSize(QtCore.QSize(230, 0))
        self.local_video_frame.setMaximumSize(QtCore.QSize(230, 16777215))
        self.local_video_frame.setStyleSheet("QFrame#local_video_frame{\n"
"    border:none;\n"
"    border-right:1px solid #ABABAB;\n"
"    border-left:1px solid #ABABAB;\n"
"}")
        self.local_video_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.local_video_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.local_video_frame.setObjectName("local_video_frame")
        self.gridLayout_84 = QtWidgets.QGridLayout(self.local_video_frame)
        self.gridLayout_84.setObjectName("gridLayout_84")
        self.local_video_information_frame = QtWidgets.QFrame(self.local_video_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.local_video_information_frame.sizePolicy().hasHeightForWidth())
        self.local_video_information_frame.setSizePolicy(sizePolicy)
        self.local_video_information_frame.setStyleSheet("QFrame{\n"
"    border:none;\n"
"}")
        self.local_video_information_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.local_video_information_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.local_video_information_frame.setObjectName("local_video_information_frame")
        self.horizontalLayout_48 = QtWidgets.QHBoxLayout(self.local_video_information_frame)
        self.horizontalLayout_48.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_48.setObjectName("horizontalLayout_48")
        self.local_video_title_label = QtWidgets.QLabel(self.local_video_information_frame)
        self.local_video_title_label.setStyleSheet("QLabel{\n"
"    border:none;\n"
"    color:white;\n"
"}")
        self.local_video_title_label.setObjectName("local_video_title_label")
        self.horizontalLayout_48.addWidget(self.local_video_title_label)
        spacerItem22 = QtWidgets.QSpacerItem(1067, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_48.addItem(spacerItem22)
        self.local_video_time_label = QtWidgets.QLabel(self.local_video_information_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.local_video_time_label.sizePolicy().hasHeightForWidth())
        self.local_video_time_label.setSizePolicy(sizePolicy)
        self.local_video_time_label.setStyleSheet("color:white;")
        self.local_video_time_label.setObjectName("local_video_time_label")
        self.horizontalLayout_48.addWidget(self.local_video_time_label)
        self.gridLayout_84.addWidget(self.local_video_information_frame, 0, 0, 1, 3)
        self.local_video_call_timeline_container_frame = QtWidgets.QFrame(self.local_video_frame)
        self.local_video_call_timeline_container_frame.setMinimumSize(QtCore.QSize(0, 5))
        self.local_video_call_timeline_container_frame.setMaximumSize(QtCore.QSize(16777215, 5))
        self.local_video_call_timeline_container_frame.setStyleSheet("QFrame{border:1px solid #ABABAB;}")
        self.local_video_call_timeline_container_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.local_video_call_timeline_container_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.local_video_call_timeline_container_frame.setObjectName("local_video_call_timeline_container_frame")
        self.local_video_call_timeline_pick_frame = QtWidgets.QFrame(self.local_video_call_timeline_container_frame)
        self.local_video_call_timeline_pick_frame.setGeometry(QtCore.QRect(1, 1, 0, 4))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.local_video_call_timeline_pick_frame.sizePolicy().hasHeightForWidth())
        self.local_video_call_timeline_pick_frame.setSizePolicy(sizePolicy)
        self.local_video_call_timeline_pick_frame.setMinimumSize(QtCore.QSize(0, 4))
        self.local_video_call_timeline_pick_frame.setMaximumSize(QtCore.QSize(16777215, 4))
        self.local_video_call_timeline_pick_frame.setStyleSheet("QFrame{\n"
"    background-color:blue;\n"
"}")
        self.local_video_call_timeline_pick_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.local_video_call_timeline_pick_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.local_video_call_timeline_pick_frame.setObjectName("local_video_call_timeline_pick_frame")
        self.gridLayout_84.addWidget(self.local_video_call_timeline_container_frame, 1, 0, 1, 3)
        spacerItem23 = QtWidgets.QSpacerItem(7, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_84.addItem(spacerItem23, 2, 0, 1, 1)
        self.local_video_label = QtWidgets.QLabel(self.local_video_frame)
        self.local_video_label.setMinimumSize(QtCore.QSize(160, 120))
        self.local_video_label.setMaximumSize(QtCore.QSize(160, 120))
        self.local_video_label.setStyleSheet("QLabel{\n"
"    border:1px solid #ABABAB;\n"
"    padding:5px;\n"
"}")
        self.local_video_label.setText("")
        self.local_video_label.setPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/camera.png"))
        self.local_video_label.setScaledContents(True)
        self.local_video_label.setObjectName("local_video_label")
        self.gridLayout_84.addWidget(self.local_video_label, 2, 1, 1, 1)
        spacerItem24 = QtWidgets.QSpacerItem(7, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_84.addItem(spacerItem24, 2, 2, 1, 1)
        self.frame_22 = QtWidgets.QFrame(self.local_video_frame)
        self.frame_22.setEnabled(True)
        self.frame_22.setStyleSheet("QFrame{border:none;}")
        self.frame_22.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_22.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_22.setObjectName("frame_22")
        self.gridLayout_73 = QtWidgets.QGridLayout(self.frame_22)
        self.gridLayout_73.setObjectName("gridLayout_73")
        self.local_video_pan = QtWidgets.QPushButton(self.frame_22)
        self.local_video_pan.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.local_video_pan.sizePolicy().hasHeightForWidth())
        self.local_video_pan.setSizePolicy(sizePolicy)
        self.local_video_pan.setMinimumSize(QtCore.QSize(0, 29))
        self.local_video_pan.setText("")
        self.local_video_pan.setIcon(icon4)
        self.local_video_pan.setObjectName("local_video_pan")
        self.gridLayout_73.addWidget(self.local_video_pan, 0, 1, 1, 1)
        self.local_video_volume = QtWidgets.QPushButton(self.frame_22)
        self.local_video_volume.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.local_video_volume.sizePolicy().hasHeightForWidth())
        self.local_video_volume.setSizePolicy(sizePolicy)
        self.local_video_volume.setMinimumSize(QtCore.QSize(0, 29))
        self.local_video_volume.setText("")
        self.local_video_volume.setIcon(icon3)
        self.local_video_volume.setObjectName("local_video_volume")
        self.gridLayout_73.addWidget(self.local_video_volume, 0, 0, 1, 1)
        self.local_video_filter = QtWidgets.QPushButton(self.frame_22)
        self.local_video_filter.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.local_video_filter.sizePolicy().hasHeightForWidth())
        self.local_video_filter.setSizePolicy(sizePolicy)
        self.local_video_filter.setMinimumSize(QtCore.QSize(0, 29))
        self.local_video_filter.setText("")
        self.local_video_filter.setIcon(icon6)
        self.local_video_filter.setObjectName("local_video_filter")
        self.gridLayout_73.addWidget(self.local_video_filter, 1, 1, 1, 1)
        self.local_video_normalize = QtWidgets.QPushButton(self.frame_22)
        self.local_video_normalize.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.local_video_normalize.sizePolicy().hasHeightForWidth())
        self.local_video_normalize.setSizePolicy(sizePolicy)
        self.local_video_normalize.setMinimumSize(QtCore.QSize(0, 29))
        self.local_video_normalize.setText("")
        self.local_video_normalize.setIcon(icon5)
        self.local_video_normalize.setObjectName("local_video_normalize")
        self.gridLayout_73.addWidget(self.local_video_normalize, 1, 0, 1, 1)
        self.gridLayout_84.addWidget(self.frame_22, 3, 1, 1, 1)
        self.gridLayout_66.addWidget(self.local_video_frame, 1, 1, 1, 1)
        self.ip_call_1_frame = QtWidgets.QFrame(self.ip_calls_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_1_frame.sizePolicy().hasHeightForWidth())
        self.ip_call_1_frame.setSizePolicy(sizePolicy)
        self.ip_call_1_frame.setMinimumSize(QtCore.QSize(230, 0))
        self.ip_call_1_frame.setMaximumSize(QtCore.QSize(230, 16777215))
        self.ip_call_1_frame.setStyleSheet("QFrame#ip_call_1_frame{\n"
"    border:none;\n"
"    border-right:1px solid #ABABAB;\n"
"}")
        self.ip_call_1_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ip_call_1_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ip_call_1_frame.setObjectName("ip_call_1_frame")
        self.gridLayout_80 = QtWidgets.QGridLayout(self.ip_call_1_frame)
        self.gridLayout_80.setObjectName("gridLayout_80")
        self.ip_call_1_information_frame_7 = QtWidgets.QFrame(self.ip_call_1_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_1_information_frame_7.sizePolicy().hasHeightForWidth())
        self.ip_call_1_information_frame_7.setSizePolicy(sizePolicy)
        self.ip_call_1_information_frame_7.setStyleSheet("QFrame{\n"
"    border:none;\n"
"}")
        self.ip_call_1_information_frame_7.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ip_call_1_information_frame_7.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ip_call_1_information_frame_7.setObjectName("ip_call_1_information_frame_7")
        self.horizontalLayout_45 = QtWidgets.QHBoxLayout(self.ip_call_1_information_frame_7)
        self.horizontalLayout_45.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_45.setObjectName("horizontalLayout_45")
        self.ip_call_1_title_label = QtWidgets.QLabel(self.ip_call_1_information_frame_7)
        self.ip_call_1_title_label.setStyleSheet("QLabel{\n"
"    border:none;\n"
"    color:white;\n"
"}")
        self.ip_call_1_title_label.setObjectName("ip_call_1_title_label")
        self.horizontalLayout_45.addWidget(self.ip_call_1_title_label)
        spacerItem25 = QtWidgets.QSpacerItem(1067, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_45.addItem(spacerItem25)
        self.ip_call_1_time_label = QtWidgets.QLabel(self.ip_call_1_information_frame_7)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_1_time_label.sizePolicy().hasHeightForWidth())
        self.ip_call_1_time_label.setSizePolicy(sizePolicy)
        self.ip_call_1_time_label.setStyleSheet("color:white;")
        self.ip_call_1_time_label.setObjectName("ip_call_1_time_label")
        self.horizontalLayout_45.addWidget(self.ip_call_1_time_label)
        self.gridLayout_80.addWidget(self.ip_call_1_information_frame_7, 0, 0, 1, 3)
        spacerItem26 = QtWidgets.QSpacerItem(7, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_80.addItem(spacerItem26, 2, 2, 1, 1)
        spacerItem27 = QtWidgets.QSpacerItem(7, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_80.addItem(spacerItem27, 2, 0, 1, 1)
        self.ip_call_1_video_label = QtWidgets.QLabel(self.ip_call_1_frame)
        self.ip_call_1_video_label.setMinimumSize(QtCore.QSize(160, 120))
        self.ip_call_1_video_label.setMaximumSize(QtCore.QSize(160, 120))
        self.ip_call_1_video_label.setStyleSheet("QLabel{\n"
"    border:1px solid #ABABAB;\n"
"    padding:5px;\n"
"}")
        self.ip_call_1_video_label.setText("")
        self.ip_call_1_video_label.setPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/camera.png"))
        self.ip_call_1_video_label.setScaledContents(True)
        self.ip_call_1_video_label.setObjectName("ip_call_1_video_label")
        self.gridLayout_80.addWidget(self.ip_call_1_video_label, 2, 1, 1, 1)
        self.ip_call_1_timeline_container_frame = QtWidgets.QFrame(self.ip_call_1_frame)
        self.ip_call_1_timeline_container_frame.setMinimumSize(QtCore.QSize(0, 5))
        self.ip_call_1_timeline_container_frame.setMaximumSize(QtCore.QSize(16777215, 5))
        self.ip_call_1_timeline_container_frame.setStyleSheet("QFrame{border:1px solid #ABABAB;}")
        self.ip_call_1_timeline_container_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ip_call_1_timeline_container_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ip_call_1_timeline_container_frame.setObjectName("ip_call_1_timeline_container_frame")
        self.ip_call_1_timeline_pick_frame = QtWidgets.QFrame(self.ip_call_1_timeline_container_frame)
        self.ip_call_1_timeline_pick_frame.setGeometry(QtCore.QRect(1, 1, 0, 4))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_1_timeline_pick_frame.sizePolicy().hasHeightForWidth())
        self.ip_call_1_timeline_pick_frame.setSizePolicy(sizePolicy)
        self.ip_call_1_timeline_pick_frame.setMinimumSize(QtCore.QSize(0, 4))
        self.ip_call_1_timeline_pick_frame.setMaximumSize(QtCore.QSize(16777215, 4))
        self.ip_call_1_timeline_pick_frame.setStyleSheet("QFrame{\n"
"    background-color:blue;\n"
"}")
        self.ip_call_1_timeline_pick_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ip_call_1_timeline_pick_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ip_call_1_timeline_pick_frame.setObjectName("ip_call_1_timeline_pick_frame")
        self.gridLayout_80.addWidget(self.ip_call_1_timeline_container_frame, 1, 0, 1, 3)
        self.frame_19 = QtWidgets.QFrame(self.ip_call_1_frame)
        self.frame_19.setStyleSheet("QFrame{border:none;}")
        self.frame_19.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_19.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_19.setObjectName("frame_19")
        self.gridLayout_70 = QtWidgets.QGridLayout(self.frame_19)
        self.gridLayout_70.setObjectName("gridLayout_70")
        self.ip_call_1_volume = QtWidgets.QPushButton(self.frame_19)
        self.ip_call_1_volume.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_1_volume.sizePolicy().hasHeightForWidth())
        self.ip_call_1_volume.setSizePolicy(sizePolicy)
        self.ip_call_1_volume.setMinimumSize(QtCore.QSize(0, 29))
        self.ip_call_1_volume.setText("")
        self.ip_call_1_volume.setIcon(icon3)
        self.ip_call_1_volume.setObjectName("ip_call_1_volume")
        self.gridLayout_70.addWidget(self.ip_call_1_volume, 0, 0, 1, 1)
        self.ip_call_1_forward_call = QtWidgets.QPushButton(self.frame_19)
        self.ip_call_1_forward_call.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_1_forward_call.sizePolicy().hasHeightForWidth())
        self.ip_call_1_forward_call.setSizePolicy(sizePolicy)
        self.ip_call_1_forward_call.setMinimumSize(QtCore.QSize(0, 29))
        self.ip_call_1_forward_call.setText("")
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/answer-phone.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ip_call_1_forward_call.setIcon(icon17)
        self.ip_call_1_forward_call.setObjectName("ip_call_1_forward_call")
        self.gridLayout_70.addWidget(self.ip_call_1_forward_call, 2, 0, 1, 1)
        self.ip_call_1_normalize = QtWidgets.QPushButton(self.frame_19)
        self.ip_call_1_normalize.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_1_normalize.sizePolicy().hasHeightForWidth())
        self.ip_call_1_normalize.setSizePolicy(sizePolicy)
        self.ip_call_1_normalize.setMinimumSize(QtCore.QSize(0, 29))
        self.ip_call_1_normalize.setText("")
        self.ip_call_1_normalize.setIcon(icon5)
        self.ip_call_1_normalize.setObjectName("ip_call_1_normalize")
        self.gridLayout_70.addWidget(self.ip_call_1_normalize, 1, 0, 1, 1)
        self.ip_call_1_filter = QtWidgets.QPushButton(self.frame_19)
        self.ip_call_1_filter.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_1_filter.sizePolicy().hasHeightForWidth())
        self.ip_call_1_filter.setSizePolicy(sizePolicy)
        self.ip_call_1_filter.setMinimumSize(QtCore.QSize(0, 29))
        self.ip_call_1_filter.setText("")
        self.ip_call_1_filter.setIcon(icon6)
        self.ip_call_1_filter.setObjectName("ip_call_1_filter")
        self.gridLayout_70.addWidget(self.ip_call_1_filter, 1, 2, 1, 1)
        self.ip_call_1_pan = QtWidgets.QPushButton(self.frame_19)
        self.ip_call_1_pan.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_1_pan.sizePolicy().hasHeightForWidth())
        self.ip_call_1_pan.setSizePolicy(sizePolicy)
        self.ip_call_1_pan.setMinimumSize(QtCore.QSize(0, 29))
        self.ip_call_1_pan.setText("")
        self.ip_call_1_pan.setIcon(icon4)
        self.ip_call_1_pan.setObjectName("ip_call_1_pan")
        self.gridLayout_70.addWidget(self.ip_call_1_pan, 0, 2, 1, 1)
        self.ip_call_1_dismiss = QtWidgets.QPushButton(self.frame_19)
        self.ip_call_1_dismiss.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_1_dismiss.sizePolicy().hasHeightForWidth())
        self.ip_call_1_dismiss.setSizePolicy(sizePolicy)
        self.ip_call_1_dismiss.setMinimumSize(QtCore.QSize(0, 29))
        self.ip_call_1_dismiss.setText("")
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/missed-call.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ip_call_1_dismiss.setIcon(icon18)
        self.ip_call_1_dismiss.setObjectName("ip_call_1_dismiss")
        self.gridLayout_70.addWidget(self.ip_call_1_dismiss, 2, 2, 1, 1)
        self.gridLayout_80.addWidget(self.frame_19, 3, 0, 1, 3)
        self.gridLayout_66.addWidget(self.ip_call_1_frame, 1, 2, 1, 1)
        self.ip_call_2_frame = QtWidgets.QFrame(self.ip_calls_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_2_frame.sizePolicy().hasHeightForWidth())
        self.ip_call_2_frame.setSizePolicy(sizePolicy)
        self.ip_call_2_frame.setMinimumSize(QtCore.QSize(230, 0))
        self.ip_call_2_frame.setMaximumSize(QtCore.QSize(230, 16777215))
        self.ip_call_2_frame.setStyleSheet("QFrame#ip_call_2_frame{\n"
"    border:none;\n"
"    border-right:1px solid #ABABAB;\n"
"}")
        self.ip_call_2_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ip_call_2_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ip_call_2_frame.setObjectName("ip_call_2_frame")
        self.gridLayout_81 = QtWidgets.QGridLayout(self.ip_call_2_frame)
        self.gridLayout_81.setObjectName("gridLayout_81")
        self.ip_call_2_timeline_container_frame = QtWidgets.QFrame(self.ip_call_2_frame)
        self.ip_call_2_timeline_container_frame.setMinimumSize(QtCore.QSize(0, 5))
        self.ip_call_2_timeline_container_frame.setMaximumSize(QtCore.QSize(16777215, 5))
        self.ip_call_2_timeline_container_frame.setStyleSheet("QFrame{border:1px solid #ABABAB;}")
        self.ip_call_2_timeline_container_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ip_call_2_timeline_container_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ip_call_2_timeline_container_frame.setObjectName("ip_call_2_timeline_container_frame")
        self.ip_call_2_timeline_pick_frame = QtWidgets.QFrame(self.ip_call_2_timeline_container_frame)
        self.ip_call_2_timeline_pick_frame.setGeometry(QtCore.QRect(1, 1, 0, 4))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_2_timeline_pick_frame.sizePolicy().hasHeightForWidth())
        self.ip_call_2_timeline_pick_frame.setSizePolicy(sizePolicy)
        self.ip_call_2_timeline_pick_frame.setMinimumSize(QtCore.QSize(0, 4))
        self.ip_call_2_timeline_pick_frame.setMaximumSize(QtCore.QSize(16777215, 4))
        self.ip_call_2_timeline_pick_frame.setStyleSheet("QFrame{\n"
"    background-color:blue;\n"
"}")
        self.ip_call_2_timeline_pick_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ip_call_2_timeline_pick_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ip_call_2_timeline_pick_frame.setObjectName("ip_call_2_timeline_pick_frame")
        self.gridLayout_81.addWidget(self.ip_call_2_timeline_container_frame, 1, 0, 1, 3)
        self.ip_call_1_information_frame_8 = QtWidgets.QFrame(self.ip_call_2_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_1_information_frame_8.sizePolicy().hasHeightForWidth())
        self.ip_call_1_information_frame_8.setSizePolicy(sizePolicy)
        self.ip_call_1_information_frame_8.setStyleSheet("QFrame{\n"
"    border:none;\n"
"}")
        self.ip_call_1_information_frame_8.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ip_call_1_information_frame_8.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ip_call_1_information_frame_8.setObjectName("ip_call_1_information_frame_8")
        self.horizontalLayout_46 = QtWidgets.QHBoxLayout(self.ip_call_1_information_frame_8)
        self.horizontalLayout_46.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_46.setObjectName("horizontalLayout_46")
        self.ip_call_2_title_label = QtWidgets.QLabel(self.ip_call_1_information_frame_8)
        self.ip_call_2_title_label.setStyleSheet("QLabel{\n"
"    border:none;\n"
"    color:white;\n"
"}")
        self.ip_call_2_title_label.setObjectName("ip_call_2_title_label")
        self.horizontalLayout_46.addWidget(self.ip_call_2_title_label)
        spacerItem28 = QtWidgets.QSpacerItem(1067, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_46.addItem(spacerItem28)
        self.ip_call_2_time_label = QtWidgets.QLabel(self.ip_call_1_information_frame_8)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_2_time_label.sizePolicy().hasHeightForWidth())
        self.ip_call_2_time_label.setSizePolicy(sizePolicy)
        self.ip_call_2_time_label.setStyleSheet("color:white;")
        self.ip_call_2_time_label.setObjectName("ip_call_2_time_label")
        self.horizontalLayout_46.addWidget(self.ip_call_2_time_label)
        self.gridLayout_81.addWidget(self.ip_call_1_information_frame_8, 0, 0, 1, 3)
        self.ip_call_2_video_label = QtWidgets.QLabel(self.ip_call_2_frame)
        self.ip_call_2_video_label.setMinimumSize(QtCore.QSize(160, 120))
        self.ip_call_2_video_label.setMaximumSize(QtCore.QSize(160, 120))
        self.ip_call_2_video_label.setStyleSheet("QLabel{\n"
"    border:1px solid #ABABAB;\n"
"    padding:5px;\n"
"}")
        self.ip_call_2_video_label.setText("")
        self.ip_call_2_video_label.setPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/camera.png"))
        self.ip_call_2_video_label.setScaledContents(True)
        self.ip_call_2_video_label.setObjectName("ip_call_2_video_label")
        self.gridLayout_81.addWidget(self.ip_call_2_video_label, 2, 1, 1, 1)
        self.frame_20 = QtWidgets.QFrame(self.ip_call_2_frame)
        self.frame_20.setStyleSheet("QFrame{border:none;}")
        self.frame_20.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_20.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_20.setObjectName("frame_20")
        self.gridLayout_71 = QtWidgets.QGridLayout(self.frame_20)
        self.gridLayout_71.setObjectName("gridLayout_71")
        self.ip_call_2_volume = QtWidgets.QPushButton(self.frame_20)
        self.ip_call_2_volume.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_2_volume.sizePolicy().hasHeightForWidth())
        self.ip_call_2_volume.setSizePolicy(sizePolicy)
        self.ip_call_2_volume.setMinimumSize(QtCore.QSize(0, 29))
        self.ip_call_2_volume.setText("")
        self.ip_call_2_volume.setIcon(icon3)
        self.ip_call_2_volume.setObjectName("ip_call_2_volume")
        self.gridLayout_71.addWidget(self.ip_call_2_volume, 0, 0, 1, 1)
        self.ip_call_2_forward_call = QtWidgets.QPushButton(self.frame_20)
        self.ip_call_2_forward_call.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_2_forward_call.sizePolicy().hasHeightForWidth())
        self.ip_call_2_forward_call.setSizePolicy(sizePolicy)
        self.ip_call_2_forward_call.setMinimumSize(QtCore.QSize(0, 29))
        self.ip_call_2_forward_call.setText("")
        self.ip_call_2_forward_call.setIcon(icon17)
        self.ip_call_2_forward_call.setObjectName("ip_call_2_forward_call")
        self.gridLayout_71.addWidget(self.ip_call_2_forward_call, 2, 0, 1, 1)
        self.ip_call_2_normalize = QtWidgets.QPushButton(self.frame_20)
        self.ip_call_2_normalize.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_2_normalize.sizePolicy().hasHeightForWidth())
        self.ip_call_2_normalize.setSizePolicy(sizePolicy)
        self.ip_call_2_normalize.setMinimumSize(QtCore.QSize(0, 29))
        self.ip_call_2_normalize.setText("")
        self.ip_call_2_normalize.setIcon(icon5)
        self.ip_call_2_normalize.setObjectName("ip_call_2_normalize")
        self.gridLayout_71.addWidget(self.ip_call_2_normalize, 1, 0, 1, 1)
        self.ip_call_2_pan = QtWidgets.QPushButton(self.frame_20)
        self.ip_call_2_pan.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_2_pan.sizePolicy().hasHeightForWidth())
        self.ip_call_2_pan.setSizePolicy(sizePolicy)
        self.ip_call_2_pan.setMinimumSize(QtCore.QSize(0, 29))
        self.ip_call_2_pan.setText("")
        self.ip_call_2_pan.setIcon(icon4)
        self.ip_call_2_pan.setObjectName("ip_call_2_pan")
        self.gridLayout_71.addWidget(self.ip_call_2_pan, 0, 2, 1, 1)
        self.ip_call_2_filter = QtWidgets.QPushButton(self.frame_20)
        self.ip_call_2_filter.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_2_filter.sizePolicy().hasHeightForWidth())
        self.ip_call_2_filter.setSizePolicy(sizePolicy)
        self.ip_call_2_filter.setMinimumSize(QtCore.QSize(0, 29))
        self.ip_call_2_filter.setText("")
        self.ip_call_2_filter.setIcon(icon6)
        self.ip_call_2_filter.setObjectName("ip_call_2_filter")
        self.gridLayout_71.addWidget(self.ip_call_2_filter, 1, 2, 1, 1)
        self.ip_call_2_dismiss = QtWidgets.QPushButton(self.frame_20)
        self.ip_call_2_dismiss.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_2_dismiss.sizePolicy().hasHeightForWidth())
        self.ip_call_2_dismiss.setSizePolicy(sizePolicy)
        self.ip_call_2_dismiss.setMinimumSize(QtCore.QSize(0, 29))
        self.ip_call_2_dismiss.setText("")
        self.ip_call_2_dismiss.setIcon(icon18)
        self.ip_call_2_dismiss.setObjectName("ip_call_2_dismiss")
        self.gridLayout_71.addWidget(self.ip_call_2_dismiss, 2, 2, 1, 1)
        self.gridLayout_81.addWidget(self.frame_20, 3, 0, 1, 3)
        spacerItem29 = QtWidgets.QSpacerItem(7, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_81.addItem(spacerItem29, 2, 2, 1, 1)
        spacerItem30 = QtWidgets.QSpacerItem(7, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_81.addItem(spacerItem30, 2, 0, 1, 1)
        self.gridLayout_66.addWidget(self.ip_call_2_frame, 1, 3, 1, 1)
        self.ip_call_3_frame = QtWidgets.QFrame(self.ip_calls_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_3_frame.sizePolicy().hasHeightForWidth())
        self.ip_call_3_frame.setSizePolicy(sizePolicy)
        self.ip_call_3_frame.setMinimumSize(QtCore.QSize(230, 0))
        self.ip_call_3_frame.setMaximumSize(QtCore.QSize(230, 16777215))
        self.ip_call_3_frame.setStyleSheet("QFrame#ip_call_3_frame{\n"
"    border:none;\n"
"    border-right:1px solid #ABABAB;\n"
"}")
        self.ip_call_3_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ip_call_3_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ip_call_3_frame.setObjectName("ip_call_3_frame")
        self.gridLayout_82 = QtWidgets.QGridLayout(self.ip_call_3_frame)
        self.gridLayout_82.setObjectName("gridLayout_82")
        self.ip_call_3_timeline_container_frame = QtWidgets.QFrame(self.ip_call_3_frame)
        self.ip_call_3_timeline_container_frame.setMinimumSize(QtCore.QSize(0, 5))
        self.ip_call_3_timeline_container_frame.setMaximumSize(QtCore.QSize(16777215, 5))
        self.ip_call_3_timeline_container_frame.setStyleSheet("QFrame{border:1px solid #ABABAB;}")
        self.ip_call_3_timeline_container_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ip_call_3_timeline_container_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ip_call_3_timeline_container_frame.setObjectName("ip_call_3_timeline_container_frame")
        self.ip_call_3_timeline_pick_frame = QtWidgets.QFrame(self.ip_call_3_timeline_container_frame)
        self.ip_call_3_timeline_pick_frame.setGeometry(QtCore.QRect(1, 1, 0, 4))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_3_timeline_pick_frame.sizePolicy().hasHeightForWidth())
        self.ip_call_3_timeline_pick_frame.setSizePolicy(sizePolicy)
        self.ip_call_3_timeline_pick_frame.setMinimumSize(QtCore.QSize(0, 4))
        self.ip_call_3_timeline_pick_frame.setMaximumSize(QtCore.QSize(16777215, 4))
        self.ip_call_3_timeline_pick_frame.setStyleSheet("QFrame{\n"
"    background-color:blue;\n"
"}")
        self.ip_call_3_timeline_pick_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ip_call_3_timeline_pick_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ip_call_3_timeline_pick_frame.setObjectName("ip_call_3_timeline_pick_frame")
        self.gridLayout_82.addWidget(self.ip_call_3_timeline_container_frame, 1, 0, 1, 3)
        self.ip_call_1_information_frame_9 = QtWidgets.QFrame(self.ip_call_3_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_1_information_frame_9.sizePolicy().hasHeightForWidth())
        self.ip_call_1_information_frame_9.setSizePolicy(sizePolicy)
        self.ip_call_1_information_frame_9.setStyleSheet("QFrame{\n"
"    border:none;\n"
"}")
        self.ip_call_1_information_frame_9.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ip_call_1_information_frame_9.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ip_call_1_information_frame_9.setObjectName("ip_call_1_information_frame_9")
        self.horizontalLayout_47 = QtWidgets.QHBoxLayout(self.ip_call_1_information_frame_9)
        self.horizontalLayout_47.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_47.setObjectName("horizontalLayout_47")
        self.ip_call_3_title_label = QtWidgets.QLabel(self.ip_call_1_information_frame_9)
        self.ip_call_3_title_label.setStyleSheet("QLabel{\n"
"    border:none;\n"
"    color:white;\n"
"}")
        self.ip_call_3_title_label.setObjectName("ip_call_3_title_label")
        self.horizontalLayout_47.addWidget(self.ip_call_3_title_label)
        spacerItem31 = QtWidgets.QSpacerItem(1067, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_47.addItem(spacerItem31)
        self.ip_call_3_time_label = QtWidgets.QLabel(self.ip_call_1_information_frame_9)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_3_time_label.sizePolicy().hasHeightForWidth())
        self.ip_call_3_time_label.setSizePolicy(sizePolicy)
        self.ip_call_3_time_label.setStyleSheet("color:white;")
        self.ip_call_3_time_label.setObjectName("ip_call_3_time_label")
        self.horizontalLayout_47.addWidget(self.ip_call_3_time_label)
        self.gridLayout_82.addWidget(self.ip_call_1_information_frame_9, 0, 0, 1, 3)
        self.ip_call_3_video_label = QtWidgets.QLabel(self.ip_call_3_frame)
        self.ip_call_3_video_label.setMinimumSize(QtCore.QSize(160, 120))
        self.ip_call_3_video_label.setMaximumSize(QtCore.QSize(160, 120))
        self.ip_call_3_video_label.setStyleSheet("QLabel{\n"
"    border:1px solid #ABABAB;\n"
"    padding:5px;\n"
"}")
        self.ip_call_3_video_label.setText("")
        self.ip_call_3_video_label.setPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/camera.png"))
        self.ip_call_3_video_label.setScaledContents(True)
        self.ip_call_3_video_label.setObjectName("ip_call_3_video_label")
        self.gridLayout_82.addWidget(self.ip_call_3_video_label, 2, 1, 1, 1)
        self.frame_21 = QtWidgets.QFrame(self.ip_call_3_frame)
        self.frame_21.setStyleSheet("QFrame{border:none;}")
        self.frame_21.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_21.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_21.setObjectName("frame_21")
        self.gridLayout_72 = QtWidgets.QGridLayout(self.frame_21)
        self.gridLayout_72.setObjectName("gridLayout_72")
        self.ip_call_3_filter = QtWidgets.QPushButton(self.frame_21)
        self.ip_call_3_filter.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_3_filter.sizePolicy().hasHeightForWidth())
        self.ip_call_3_filter.setSizePolicy(sizePolicy)
        self.ip_call_3_filter.setMinimumSize(QtCore.QSize(0, 29))
        self.ip_call_3_filter.setText("")
        self.ip_call_3_filter.setIcon(icon6)
        self.ip_call_3_filter.setObjectName("ip_call_3_filter")
        self.gridLayout_72.addWidget(self.ip_call_3_filter, 1, 2, 1, 1)
        self.ip_call_3_volume = QtWidgets.QPushButton(self.frame_21)
        self.ip_call_3_volume.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_3_volume.sizePolicy().hasHeightForWidth())
        self.ip_call_3_volume.setSizePolicy(sizePolicy)
        self.ip_call_3_volume.setMinimumSize(QtCore.QSize(0, 29))
        self.ip_call_3_volume.setText("")
        self.ip_call_3_volume.setIcon(icon3)
        self.ip_call_3_volume.setObjectName("ip_call_3_volume")
        self.gridLayout_72.addWidget(self.ip_call_3_volume, 0, 0, 1, 1)
        self.ip_call_3_pan = QtWidgets.QPushButton(self.frame_21)
        self.ip_call_3_pan.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_3_pan.sizePolicy().hasHeightForWidth())
        self.ip_call_3_pan.setSizePolicy(sizePolicy)
        self.ip_call_3_pan.setMinimumSize(QtCore.QSize(0, 29))
        self.ip_call_3_pan.setText("")
        self.ip_call_3_pan.setIcon(icon4)
        self.ip_call_3_pan.setObjectName("ip_call_3_pan")
        self.gridLayout_72.addWidget(self.ip_call_3_pan, 0, 2, 1, 1)
        self.ip_call_3_forward_call = QtWidgets.QPushButton(self.frame_21)
        self.ip_call_3_forward_call.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_3_forward_call.sizePolicy().hasHeightForWidth())
        self.ip_call_3_forward_call.setSizePolicy(sizePolicy)
        self.ip_call_3_forward_call.setMinimumSize(QtCore.QSize(0, 29))
        self.ip_call_3_forward_call.setText("")
        self.ip_call_3_forward_call.setIcon(icon17)
        self.ip_call_3_forward_call.setObjectName("ip_call_3_forward_call")
        self.gridLayout_72.addWidget(self.ip_call_3_forward_call, 2, 0, 1, 1)
        self.ip_call_3_normalize = QtWidgets.QPushButton(self.frame_21)
        self.ip_call_3_normalize.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_3_normalize.sizePolicy().hasHeightForWidth())
        self.ip_call_3_normalize.setSizePolicy(sizePolicy)
        self.ip_call_3_normalize.setMinimumSize(QtCore.QSize(0, 29))
        self.ip_call_3_normalize.setText("")
        self.ip_call_3_normalize.setIcon(icon5)
        self.ip_call_3_normalize.setObjectName("ip_call_3_normalize")
        self.gridLayout_72.addWidget(self.ip_call_3_normalize, 1, 0, 1, 1)
        self.ip_call_3_dismiss = QtWidgets.QPushButton(self.frame_21)
        self.ip_call_3_dismiss.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ip_call_3_dismiss.sizePolicy().hasHeightForWidth())
        self.ip_call_3_dismiss.setSizePolicy(sizePolicy)
        self.ip_call_3_dismiss.setMinimumSize(QtCore.QSize(0, 29))
        self.ip_call_3_dismiss.setText("")
        self.ip_call_3_dismiss.setIcon(icon18)
        self.ip_call_3_dismiss.setObjectName("ip_call_3_dismiss")
        self.gridLayout_72.addWidget(self.ip_call_3_dismiss, 2, 2, 1, 1)
        self.gridLayout_82.addWidget(self.frame_21, 3, 0, 1, 3)
        spacerItem32 = QtWidgets.QSpacerItem(7, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_82.addItem(spacerItem32, 2, 2, 1, 1)
        spacerItem33 = QtWidgets.QSpacerItem(7, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_82.addItem(spacerItem33, 2, 0, 1, 1)
        self.gridLayout_66.addWidget(self.ip_call_3_frame, 1, 4, 1, 1)
        spacerItem34 = QtWidgets.QSpacerItem(6, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_66.addItem(spacerItem34, 1, 5, 1, 1)
        spacerItem35 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_66.addItem(spacerItem35, 2, 1, 1, 1)
        self.label_10 = QtWidgets.QLabel(self.ip_calls_frame)
        self.label_10.setStyleSheet("QLabel{\n"
"    font-weight:bold;\n"
"    color:white;\n"
"}")
        self.label_10.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_10.setObjectName("label_10")
        self.gridLayout_66.addWidget(self.label_10, 0, 0, 1, 5)
        self.gridLayout_83.addWidget(self.ip_calls_frame, 2, 0, 1, 1)
        self.navigation_buttons_frame_5 = QtWidgets.QFrame(self.frame_page_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.navigation_buttons_frame_5.sizePolicy().hasHeightForWidth())
        self.navigation_buttons_frame_5.setSizePolicy(sizePolicy)
        self.navigation_buttons_frame_5.setStyleSheet("QFrame{border:none;}")
        self.navigation_buttons_frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.navigation_buttons_frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.navigation_buttons_frame_5.setObjectName("navigation_buttons_frame_5")
        self.horizontalLayout_42 = QtWidgets.QHBoxLayout(self.navigation_buttons_frame_5)
        self.horizontalLayout_42.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_42.setSpacing(0)
        self.horizontalLayout_42.setObjectName("horizontalLayout_42")
        spacerItem36 = QtWidgets.QSpacerItem(1439, 14, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_42.addItem(spacerItem36)
        self.move_previous_3 = QtWidgets.QPushButton(self.navigation_buttons_frame_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_previous_3.sizePolicy().hasHeightForWidth())
        self.move_previous_3.setSizePolicy(sizePolicy)
        self.move_previous_3.setMinimumSize(QtCore.QSize(14, 14))
        self.move_previous_3.setMaximumSize(QtCore.QSize(14, 14))
        self.move_previous_3.setStyleSheet("QPushButton{\n"
"    padding-right:2px;\n"
"    padding-top:2px;\n"
"}\n"
"\n"
"QPushButton:!hover{\n"
"    border:none;\n"
"    background:transparent;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    border:1px solid #ABABAB;\n"
"    background:rgb(251, 251, 251);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    border:1px solid #ABABAB;\n"
"    background:rgb(220, 220, 220);\n"
"}")
        self.move_previous_3.setText("")
        self.move_previous_3.setIcon(icon9)
        self.move_previous_3.setIconSize(QtCore.QSize(8, 8))
        self.move_previous_3.setObjectName("move_previous_3")
        self.horizontalLayout_42.addWidget(self.move_previous_3)
        spacerItem37 = QtWidgets.QSpacerItem(2, 14, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_42.addItem(spacerItem37)
        self.move_next_3 = QtWidgets.QPushButton(self.navigation_buttons_frame_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_next_3.sizePolicy().hasHeightForWidth())
        self.move_next_3.setSizePolicy(sizePolicy)
        self.move_next_3.setMinimumSize(QtCore.QSize(14, 14))
        self.move_next_3.setMaximumSize(QtCore.QSize(14, 14))
        self.move_next_3.setStyleSheet("QPushButton{\n"
"    padding-right:4px;\n"
"    padding-top:2px;\n"
"}\n"
"\n"
"QPushButton:!hover{\n"
"    border:none;\n"
"    background:transparent;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    border:1px solid #ABABAB;\n"
"    background:rgb(251, 251, 251);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    border:1px solid #ABABAB;\n"
"    background:rgb(220, 220, 220);\n"
"}")
        self.move_next_3.setText("")
        self.move_next_3.setIcon(icon10)
        self.move_next_3.setIconSize(QtCore.QSize(8, 8))
        self.move_next_3.setObjectName("move_next_3")
        self.horizontalLayout_42.addWidget(self.move_next_3)
        self.gridLayout_83.addWidget(self.navigation_buttons_frame_5, 0, 0, 1, 1)
        spacerItem38 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_83.addItem(spacerItem38, 3, 0, 1, 1)
        spacerItem39 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_83.addItem(spacerItem39, 1, 0, 1, 1)
        self.gridLayout_76.addWidget(self.frame_page_4, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_3)
        self.page_4 = QtWidgets.QWidget()
        self.page_4.setObjectName("page_4")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.page_4)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setSpacing(3)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.frame_4 = QtWidgets.QFrame(self.page_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_4.sizePolicy().hasHeightForWidth())
        self.frame_4.setSizePolicy(sizePolicy)
        self.frame_4.setStyleSheet("QFrame#frame_4{border:none;}")
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.frame_4)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setSpacing(3)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.frame_5 = QtWidgets.QFrame(self.frame_4)
        self.frame_5.setStyleSheet("QFrame#frame_5{border:none;}")
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.horizontalLayout_16 = QtWidgets.QHBoxLayout(self.frame_5)
        self.horizontalLayout_16.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_16.setSpacing(2)
        self.horizontalLayout_16.setObjectName("horizontalLayout_16")
        self.navigate_previous = QtWidgets.QPushButton(self.frame_5)
        self.navigate_previous.setEnabled(False)
        self.navigate_previous.setMinimumSize(QtCore.QSize(25, 25))
        self.navigate_previous.setMaximumSize(QtCore.QSize(25, 25))
        self.navigate_previous.setText("")
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/previous.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.navigate_previous.setIcon(icon19)
        self.navigate_previous.setObjectName("navigate_previous")
        self.horizontalLayout_16.addWidget(self.navigate_previous)
        self.navigate_next = QtWidgets.QPushButton(self.frame_5)
        self.navigate_next.setEnabled(False)
        self.navigate_next.setMinimumSize(QtCore.QSize(25, 25))
        self.navigate_next.setMaximumSize(QtCore.QSize(25, 25))
        self.navigate_next.setText("")
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/next.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.navigate_next.setIcon(icon20)
        self.navigate_next.setObjectName("navigate_next")
        self.horizontalLayout_16.addWidget(self.navigate_next)
        self.navigate_history = QtWidgets.QPushButton(self.frame_5)
        self.navigate_history.setEnabled(False)
        self.navigate_history.setMinimumSize(QtCore.QSize(25, 25))
        self.navigate_history.setMaximumSize(QtCore.QSize(25, 25))
        self.navigate_history.setText("")
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/history-arrow.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.navigate_history.setIcon(icon21)
        self.navigate_history.setIconSize(QtCore.QSize(10, 10))
        self.navigate_history.setObjectName("navigate_history")
        self.horizontalLayout_16.addWidget(self.navigate_history)
        self.navigate_home = QtWidgets.QPushButton(self.frame_5)
        self.navigate_home.setEnabled(True)
        self.navigate_home.setMinimumSize(QtCore.QSize(25, 25))
        self.navigate_home.setMaximumSize(QtCore.QSize(25, 25))
        self.navigate_home.setText("")
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/home.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.navigate_home.setIcon(icon22)
        self.navigate_home.setObjectName("navigate_home")
        self.horizontalLayout_16.addWidget(self.navigate_home)
        self.navigation_lineedit = QtWidgets.QLineEdit(self.frame_5)
        self.navigation_lineedit.setMinimumSize(QtCore.QSize(0, 25))
        self.navigation_lineedit.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.navigation_lineedit.setFont(font)
        self.navigation_lineedit.setStyleSheet("QLineEdit#navigation_lineedit{border:1px solid #ABABAB;}")
        self.navigation_lineedit.setReadOnly(True)
        self.navigation_lineedit.setObjectName("navigation_lineedit")
        self.horizontalLayout_16.addWidget(self.navigation_lineedit)
        self.frame_6 = QtWidgets.QFrame(self.frame_5)
        self.frame_6.setStyleSheet("QFrame#frame_6{border:none;}")
        self.frame_6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_6.setObjectName("frame_6")
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout(self.frame_6)
        self.horizontalLayout_15.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_15.setSpacing(0)
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.navigation_search = QtWidgets.QLineEdit(self.frame_6)
        self.navigation_search.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.navigation_search.sizePolicy().hasHeightForWidth())
        self.navigation_search.setSizePolicy(sizePolicy)
        self.navigation_search.setMinimumSize(QtCore.QSize(215, 25))
        self.navigation_search.setMaximumSize(QtCore.QSize(16777215, 25))
        self.navigation_search.setStyleSheet("QLineEdit#navigation_history{\n"
"    border:1px solid #ABABAB;\n"
"}")
        self.navigation_search.setObjectName("navigation_search")
        self.horizontalLayout_15.addWidget(self.navigation_search)
        self.horizontalLayout_16.addWidget(self.frame_6)
        self.gridLayout_2.addWidget(self.frame_5, 1, 1, 1, 1)
        self.page_3_stackedWidget = QtWidgets.QStackedWidget(self.frame_4)
        self.page_3_stackedWidget.setStyleSheet("QStackedWidget{\n"
"    border:1px solid #ABABAB;\n"
"}\n"
"\n"
"QStackedWidget > QWidget::previous-button {\n"
"     width:0px;\n"
"     height:0px;\n"
" }\n"
"\n"
"QStackedWidget > QWidget{\n"
"background: white;\n"
"}")
        self.page_3_stackedWidget.setObjectName("page_3_stackedWidget")
        self.blank_page = QtWidgets.QWidget()
        self.blank_page.setObjectName("blank_page")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.blank_page)
        self.gridLayout_9.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_9.setSpacing(3)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.page_3_blank_page = QtWidgets.QFrame(self.blank_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_3_blank_page.sizePolicy().hasHeightForWidth())
        self.page_3_blank_page.setSizePolicy(sizePolicy)
        self.page_3_blank_page.setStyleSheet("QFrame#page_3_blank_page{background:rgb(200, 200, 200);border:none;}")
        self.page_3_blank_page.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.page_3_blank_page.setFrameShadow(QtWidgets.QFrame.Raised)
        self.page_3_blank_page.setObjectName("page_3_blank_page")
        self.gridLayout_9.addWidget(self.page_3_blank_page, 0, 0, 1, 1)
        self.page_3_stackedWidget.addWidget(self.blank_page)
        self.player_list_tree_page = QtWidgets.QWidget()
        self.player_list_tree_page.setStyleSheet("#page_3_2{border:none;}")
        self.player_list_tree_page.setObjectName("player_list_tree_page")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.player_list_tree_page)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.player_list_delete_all = QtWidgets.QPushButton(self.player_list_tree_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.player_list_delete_all.sizePolicy().hasHeightForWidth())
        self.player_list_delete_all.setSizePolicy(sizePolicy)
        self.player_list_delete_all.setMinimumSize(QtCore.QSize(0, 29))
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/delete.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.player_list_delete_all.setIcon(icon23)
        self.player_list_delete_all.setObjectName("player_list_delete_all")
        self.gridLayout_7.addWidget(self.player_list_delete_all, 0, 0, 1, 1)
        self.player_list_auto_dj_checkbox = QtWidgets.QCheckBox(self.player_list_tree_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.player_list_auto_dj_checkbox.sizePolicy().hasHeightForWidth())
        self.player_list_auto_dj_checkbox.setSizePolicy(sizePolicy)
        self.player_list_auto_dj_checkbox.setObjectName("player_list_auto_dj_checkbox")
        self.gridLayout_7.addWidget(self.player_list_auto_dj_checkbox, 0, 1, 1, 1)
        self.player_list_fade_out = QtWidgets.QCheckBox(self.player_list_tree_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.player_list_fade_out.sizePolicy().hasHeightForWidth())
        self.player_list_fade_out.setSizePolicy(sizePolicy)
        self.player_list_fade_out.setObjectName("player_list_fade_out")
        self.gridLayout_7.addWidget(self.player_list_fade_out, 0, 2, 1, 1)
        self.player_list_fade_in = QtWidgets.QCheckBox(self.player_list_tree_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.player_list_fade_in.sizePolicy().hasHeightForWidth())
        self.player_list_fade_in.setSizePolicy(sizePolicy)
        self.player_list_fade_in.setObjectName("player_list_fade_in")
        self.gridLayout_7.addWidget(self.player_list_fade_in, 0, 3, 1, 1)
        self.player_list_repeat_checkbox = QtWidgets.QCheckBox(self.player_list_tree_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.player_list_repeat_checkbox.sizePolicy().hasHeightForWidth())
        self.player_list_repeat_checkbox.setSizePolicy(sizePolicy)
        self.player_list_repeat_checkbox.setObjectName("player_list_repeat_checkbox")
        self.gridLayout_7.addWidget(self.player_list_repeat_checkbox, 0, 4, 1, 1)
        self.is_live_checkbox = QtWidgets.QCheckBox(self.player_list_tree_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.is_live_checkbox.sizePolicy().hasHeightForWidth())
        self.is_live_checkbox.setSizePolicy(sizePolicy)
        self.is_live_checkbox.setObjectName("is_live_checkbox")
        self.gridLayout_7.addWidget(self.is_live_checkbox, 0, 5, 1, 1)
        self.player_list_fade_now = QtWidgets.QPushButton(self.player_list_tree_page)
        self.player_list_fade_now.setMinimumSize(QtCore.QSize(0, 29))
        self.player_list_fade_now.setMaximumSize(QtCore.QSize(16777215, 29))
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/auto_dj_fade_now.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.player_list_fade_now.setIcon(icon24)
        self.player_list_fade_now.setObjectName("player_list_fade_now")
        self.gridLayout_7.addWidget(self.player_list_fade_now, 0, 6, 1, 1)
        self.auto_dj_skip_next = QtWidgets.QPushButton(self.player_list_tree_page)
        self.auto_dj_skip_next.setMinimumSize(QtCore.QSize(0, 29))
        self.auto_dj_skip_next.setMaximumSize(QtCore.QSize(16777215, 29))
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/auto_dj_skip_next.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.auto_dj_skip_next.setIcon(icon25)
        self.auto_dj_skip_next.setObjectName("auto_dj_skip_next")
        self.gridLayout_7.addWidget(self.auto_dj_skip_next, 0, 7, 1, 1)
        self.main_player_list_treeWidget = QtWidgets.QTreeWidget(self.player_list_tree_page)
        self.main_player_list_treeWidget.setFocusPolicy(QtCore.Qt.NoFocus)
        self.main_player_list_treeWidget.setAcceptDrops(True)
        self.main_player_list_treeWidget.setStyleSheet("")
        self.main_player_list_treeWidget.setDragEnabled(True)
        self.main_player_list_treeWidget.setDragDropOverwriteMode(False)
        self.main_player_list_treeWidget.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.main_player_list_treeWidget.setDefaultDropAction(QtCore.Qt.MoveAction)
        self.main_player_list_treeWidget.setAlternatingRowColors(False)
        self.main_player_list_treeWidget.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.main_player_list_treeWidget.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.main_player_list_treeWidget.setAnimated(True)
        self.main_player_list_treeWidget.setExpandsOnDoubleClick(False)
        self.main_player_list_treeWidget.setObjectName("main_player_list_treeWidget")
        self.main_player_list_treeWidget.header().setCascadingSectionResizes(False)
        self.gridLayout_7.addWidget(self.main_player_list_treeWidget, 1, 0, 1, 8)
        self.page_3_stackedWidget.addWidget(self.player_list_tree_page)
        self.sound_file_page = QtWidgets.QWidget()
        self.sound_file_page.setObjectName("sound_file_page")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.sound_file_page)
        self.gridLayout_11.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_11.setSpacing(3)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.sound_file_import_from_video = QtWidgets.QPushButton(self.sound_file_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sound_file_import_from_video.sizePolicy().hasHeightForWidth())
        self.sound_file_import_from_video.setSizePolicy(sizePolicy)
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/video.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.sound_file_import_from_video.setIcon(icon26)
        self.sound_file_import_from_video.setObjectName("sound_file_import_from_video")
        self.gridLayout_11.addWidget(self.sound_file_import_from_video, 0, 1, 1, 1)
        self.sound_file_import_from_sound_file = QtWidgets.QPushButton(self.sound_file_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sound_file_import_from_sound_file.sizePolicy().hasHeightForWidth())
        self.sound_file_import_from_sound_file.setSizePolicy(sizePolicy)
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/sound-file.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.sound_file_import_from_sound_file.setIcon(icon27)
        self.sound_file_import_from_sound_file.setObjectName("sound_file_import_from_sound_file")
        self.gridLayout_11.addWidget(self.sound_file_import_from_sound_file, 0, 0, 1, 1)
        self.sound_file_table = QtWidgets.QTableWidget(self.sound_file_page)
        self.sound_file_table.setFocusPolicy(QtCore.Qt.NoFocus)
        self.sound_file_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.sound_file_table.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.sound_file_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.sound_file_table.setShowGrid(False)
        self.sound_file_table.setGridStyle(QtCore.Qt.SolidLine)
        self.sound_file_table.setCornerButtonEnabled(False)
        self.sound_file_table.setObjectName("sound_file_table")
        self.sound_file_table.setColumnCount(3)
        self.sound_file_table.setRowCount(10)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(2, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(3, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(4, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(4, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(5, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(5, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(6, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(6, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(6, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(7, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(7, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(7, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(8, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(8, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(8, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(9, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(9, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_file_table.setItem(9, 2, item)
        self.sound_file_table.horizontalHeader().setHighlightSections(False)
        self.sound_file_table.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_11.addWidget(self.sound_file_table, 1, 0, 1, 2)
        self.page_3_stackedWidget.addWidget(self.sound_file_page)
        self.playlist_page = QtWidgets.QWidget()
        self.playlist_page.setObjectName("playlist_page")
        self.gridLayout_18 = QtWidgets.QGridLayout(self.playlist_page)
        self.gridLayout_18.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_18.setSpacing(3)
        self.gridLayout_18.setObjectName("gridLayout_18")
        self.playlist_insert = QtWidgets.QPushButton(self.playlist_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.playlist_insert.sizePolicy().hasHeightForWidth())
        self.playlist_insert.setSizePolicy(sizePolicy)
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/import.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.playlist_insert.setIcon(icon28)
        self.playlist_insert.setObjectName("playlist_insert")
        self.gridLayout_18.addWidget(self.playlist_insert, 0, 0, 1, 1)
        self.playlist_create = QtWidgets.QPushButton(self.playlist_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.playlist_create.sizePolicy().hasHeightForWidth())
        self.playlist_create.setSizePolicy(sizePolicy)
        icon29 = QtGui.QIcon()
        icon29.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/create.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.playlist_create.setIcon(icon29)
        self.playlist_create.setObjectName("playlist_create")
        self.gridLayout_18.addWidget(self.playlist_create, 0, 1, 1, 1)
        self.playlist_treeWidget = QtWidgets.QTreeWidget(self.playlist_page)
        self.playlist_treeWidget.setFocusPolicy(QtCore.Qt.NoFocus)
        self.playlist_treeWidget.setAlternatingRowColors(False)
        self.playlist_treeWidget.setObjectName("playlist_treeWidget")
        item_0 = QtWidgets.QTreeWidgetItem(self.playlist_treeWidget)
        icon30 = QtGui.QIcon()
        icon30.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/playlist.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_0.setIcon(1, icon30)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setIcon(1, icon27)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        icon31 = QtGui.QIcon()
        icon31.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/retransmition.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(1, icon31)
        item_0 = QtWidgets.QTreeWidgetItem(self.playlist_treeWidget)
        item_0.setIcon(1, icon30)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setIcon(1, icon27)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setIcon(1, icon31)
        self.playlist_treeWidget.header().setCascadingSectionResizes(False)
        self.gridLayout_18.addWidget(self.playlist_treeWidget, 1, 0, 1, 2)
        self.page_3_stackedWidget.addWidget(self.playlist_page)
        self.sound_clip_page = QtWidgets.QWidget()
        self.sound_clip_page.setObjectName("sound_clip_page")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.sound_clip_page)
        self.gridLayout_10.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_10.setSpacing(3)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.sound_clip_import = QtWidgets.QPushButton(self.sound_clip_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sound_clip_import.sizePolicy().hasHeightForWidth())
        self.sound_clip_import.setSizePolicy(sizePolicy)
        self.sound_clip_import.setIcon(icon28)
        self.sound_clip_import.setObjectName("sound_clip_import")
        self.gridLayout_10.addWidget(self.sound_clip_import, 0, 0, 1, 1)
        self.sound_clip_classification = QtWidgets.QPushButton(self.sound_clip_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sound_clip_classification.sizePolicy().hasHeightForWidth())
        self.sound_clip_classification.setSizePolicy(sizePolicy)
        self.sound_clip_classification.setIcon(icon29)
        self.sound_clip_classification.setObjectName("sound_clip_classification")
        self.gridLayout_10.addWidget(self.sound_clip_classification, 0, 1, 1, 1)
        self.sound_clip_table = QtWidgets.QTableWidget(self.sound_clip_page)
        self.sound_clip_table.setFocusPolicy(QtCore.Qt.NoFocus)
        self.sound_clip_table.setStyleSheet("")
        self.sound_clip_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.sound_clip_table.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.sound_clip_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.sound_clip_table.setCornerButtonEnabled(False)
        self.sound_clip_table.setObjectName("sound_clip_table")
        self.sound_clip_table.setColumnCount(2)
        self.sound_clip_table.setRowCount(10)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setItem(4, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setItem(5, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setItem(6, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setItem(6, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setItem(7, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setItem(7, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setItem(8, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setItem(8, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setItem(9, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sound_clip_table.setItem(9, 1, item)
        self.sound_clip_table.horizontalHeader().setHighlightSections(False)
        self.sound_clip_table.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_10.addWidget(self.sound_clip_table, 1, 0, 1, 2)
        self.page_3_stackedWidget.addWidget(self.sound_clip_page)
        self.retransmition_page = QtWidgets.QWidget()
        self.retransmition_page.setObjectName("retransmition_page")
        self.gridLayout_20 = QtWidgets.QGridLayout(self.retransmition_page)
        self.gridLayout_20.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_20.setSpacing(3)
        self.gridLayout_20.setObjectName("gridLayout_20")
        self.retransmition_import = QtWidgets.QPushButton(self.retransmition_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.retransmition_import.sizePolicy().hasHeightForWidth())
        self.retransmition_import.setSizePolicy(sizePolicy)
        self.retransmition_import.setIcon(icon28)
        self.retransmition_import.setObjectName("retransmition_import")
        self.gridLayout_20.addWidget(self.retransmition_import, 0, 0, 1, 1)
        self.retransmition_table = QtWidgets.QTableWidget(self.retransmition_page)
        self.retransmition_table.setFocusPolicy(QtCore.Qt.NoFocus)
        self.retransmition_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.retransmition_table.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.retransmition_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.retransmition_table.setCornerButtonEnabled(False)
        self.retransmition_table.setObjectName("retransmition_table")
        self.retransmition_table.setColumnCount(2)
        self.retransmition_table.setRowCount(10)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setItem(4, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setItem(5, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setItem(6, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setItem(6, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setItem(7, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setItem(7, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setItem(8, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setItem(8, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setItem(9, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.retransmition_table.setItem(9, 1, item)
        self.retransmition_table.horizontalHeader().setHighlightSections(False)
        self.retransmition_table.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_20.addWidget(self.retransmition_table, 1, 0, 1, 1)
        self.page_3_stackedWidget.addWidget(self.retransmition_page)
        self.station_logo_page = QtWidgets.QWidget()
        self.station_logo_page.setObjectName("station_logo_page")
        self.gridLayout_22 = QtWidgets.QGridLayout(self.station_logo_page)
        self.gridLayout_22.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_22.setSpacing(3)
        self.gridLayout_22.setObjectName("gridLayout_22")
        self.station_logo_import = QtWidgets.QPushButton(self.station_logo_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.station_logo_import.sizePolicy().hasHeightForWidth())
        self.station_logo_import.setSizePolicy(sizePolicy)
        self.station_logo_import.setIcon(icon28)
        self.station_logo_import.setObjectName("station_logo_import")
        self.gridLayout_22.addWidget(self.station_logo_import, 0, 0, 1, 1)
        self.station_logo_table = QtWidgets.QTableWidget(self.station_logo_page)
        self.station_logo_table.setFocusPolicy(QtCore.Qt.NoFocus)
        self.station_logo_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.station_logo_table.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.station_logo_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.station_logo_table.setCornerButtonEnabled(False)
        self.station_logo_table.setObjectName("station_logo_table")
        self.station_logo_table.setColumnCount(3)
        self.station_logo_table.setRowCount(10)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(2, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(3, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(4, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(4, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(5, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(5, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(6, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(6, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(6, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(7, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(7, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(7, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(8, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(8, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(8, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(9, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(9, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.station_logo_table.setItem(9, 2, item)
        self.station_logo_table.horizontalHeader().setHighlightSections(False)
        self.station_logo_table.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_22.addWidget(self.station_logo_table, 1, 0, 1, 2)
        self.page_3_stackedWidget.addWidget(self.station_logo_page)
        self.time_collection_page = QtWidgets.QWidget()
        self.time_collection_page.setObjectName("time_collection_page")
        self.gridLayout_24 = QtWidgets.QGridLayout(self.time_collection_page)
        self.gridLayout_24.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_24.setSpacing(3)
        self.gridLayout_24.setObjectName("gridLayout_24")
        self.time_collection_treeWidget = QtWidgets.QTreeWidget(self.time_collection_page)
        self.time_collection_treeWidget.setFocusPolicy(QtCore.Qt.NoFocus)
        self.time_collection_treeWidget.setAlternatingRowColors(False)
        self.time_collection_treeWidget.setObjectName("time_collection_treeWidget")
        item_0 = QtWidgets.QTreeWidgetItem(self.time_collection_treeWidget)
        icon32 = QtGui.QIcon()
        icon32.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/clock.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_0.setIcon(1, icon32)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        icon33 = QtGui.QIcon()
        icon33.addPixmap(QtGui.QPixmap(":/clock-icons/assets/icons/clock-icons/clock-01.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(1, icon33)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        icon34 = QtGui.QIcon()
        icon34.addPixmap(QtGui.QPixmap(":/clock-icons/assets/icons/clock-icons/clock-02.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(1, icon34)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        icon35 = QtGui.QIcon()
        icon35.addPixmap(QtGui.QPixmap(":/clock-icons/assets/icons/clock-icons/clock-03.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(1, icon35)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        icon36 = QtGui.QIcon()
        icon36.addPixmap(QtGui.QPixmap(":/clock-icons/assets/icons/clock-icons/clock-04.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(1, icon36)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        icon37 = QtGui.QIcon()
        icon37.addPixmap(QtGui.QPixmap(":/clock-icons/assets/icons/clock-icons/clock-05.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(1, icon37)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        icon38 = QtGui.QIcon()
        icon38.addPixmap(QtGui.QPixmap(":/clock-icons/assets/icons/clock-icons/clock-06.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(1, icon38)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        icon39 = QtGui.QIcon()
        icon39.addPixmap(QtGui.QPixmap(":/clock-icons/assets/icons/clock-icons/clock-07.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(1, icon39)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        icon40 = QtGui.QIcon()
        icon40.addPixmap(QtGui.QPixmap(":/clock-icons/assets/icons/clock-icons/clock-08.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(1, icon40)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        icon41 = QtGui.QIcon()
        icon41.addPixmap(QtGui.QPixmap(":/clock-icons/assets/icons/clock-icons/clock-09.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(1, icon41)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        icon42 = QtGui.QIcon()
        icon42.addPixmap(QtGui.QPixmap(":/clock-icons/assets/icons/clock-icons/clock-10.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(1, icon42)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        icon43 = QtGui.QIcon()
        icon43.addPixmap(QtGui.QPixmap(":/clock-icons/assets/icons/clock-icons/clock-11.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(1, icon43)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        icon44 = QtGui.QIcon()
        icon44.addPixmap(QtGui.QPixmap(":/clock-icons/assets/icons/clock-icons/clock-12.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(1, icon44)
        self.time_collection_treeWidget.header().setCascadingSectionResizes(False)
        self.gridLayout_24.addWidget(self.time_collection_treeWidget, 1, 0, 1, 2)
        self.time_collection_import = QtWidgets.QPushButton(self.time_collection_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.time_collection_import.sizePolicy().hasHeightForWidth())
        self.time_collection_import.setSizePolicy(sizePolicy)
        self.time_collection_import.setIcon(icon28)
        self.time_collection_import.setObjectName("time_collection_import")
        self.gridLayout_24.addWidget(self.time_collection_import, 0, 0, 1, 1)
        self.page_3_stackedWidget.addWidget(self.time_collection_page)
        self.church_news_page = QtWidgets.QWidget()
        self.church_news_page.setObjectName("church_news_page")
        self.gridLayout_25 = QtWidgets.QGridLayout(self.church_news_page)
        self.gridLayout_25.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_25.setSpacing(3)
        self.gridLayout_25.setObjectName("gridLayout_25")
        self.church_news_import = QtWidgets.QPushButton(self.church_news_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.church_news_import.sizePolicy().hasHeightForWidth())
        self.church_news_import.setSizePolicy(sizePolicy)
        self.church_news_import.setIcon(icon28)
        self.church_news_import.setObjectName("church_news_import")
        self.gridLayout_25.addWidget(self.church_news_import, 0, 0, 1, 1)
        self.church_news_table = QtWidgets.QTableWidget(self.church_news_page)
        self.church_news_table.setFocusPolicy(QtCore.Qt.NoFocus)
        self.church_news_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.church_news_table.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.church_news_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.church_news_table.setCornerButtonEnabled(False)
        self.church_news_table.setObjectName("church_news_table")
        self.church_news_table.setColumnCount(4)
        self.church_news_table.setRowCount(10)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(2, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(2, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(3, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(3, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(4, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(4, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(4, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(5, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(5, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(5, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(6, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(6, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(6, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(6, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(7, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(7, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(7, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(7, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(8, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(8, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(8, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(8, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(9, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(9, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(9, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.church_news_table.setItem(9, 3, item)
        self.church_news_table.horizontalHeader().setHighlightSections(False)
        self.church_news_table.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_25.addWidget(self.church_news_table, 1, 0, 1, 1)
        self.page_3_stackedWidget.addWidget(self.church_news_page)
        self.news_page = QtWidgets.QWidget()
        self.news_page.setObjectName("news_page")
        self.gridLayout_54 = QtWidgets.QGridLayout(self.news_page)
        self.gridLayout_54.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_54.setSpacing(3)
        self.gridLayout_54.setObjectName("gridLayout_54")
        self.new_import = QtWidgets.QPushButton(self.news_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.new_import.sizePolicy().hasHeightForWidth())
        self.new_import.setSizePolicy(sizePolicy)
        self.new_import.setIcon(icon28)
        self.new_import.setObjectName("new_import")
        self.gridLayout_54.addWidget(self.new_import, 0, 0, 1, 1)
        self.news_table = QtWidgets.QTableWidget(self.news_page)
        self.news_table.setFocusPolicy(QtCore.Qt.NoFocus)
        self.news_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.news_table.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.news_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.news_table.setCornerButtonEnabled(False)
        self.news_table.setObjectName("news_table")
        self.news_table.setColumnCount(4)
        self.news_table.setRowCount(10)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(2, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(2, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(3, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(3, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(4, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(4, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(4, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(5, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(5, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(5, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(6, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(6, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(6, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(6, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(7, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(7, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(7, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(7, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(8, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(8, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(8, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(8, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(9, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(9, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(9, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.news_table.setItem(9, 3, item)
        self.news_table.horizontalHeader().setHighlightSections(False)
        self.news_table.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_54.addWidget(self.news_table, 1, 0, 1, 1)
        self.page_3_stackedWidget.addWidget(self.news_page)
        self.weather_news_page = QtWidgets.QWidget()
        self.weather_news_page.setObjectName("weather_news_page")
        self.gridLayout_59 = QtWidgets.QGridLayout(self.weather_news_page)
        self.gridLayout_59.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_59.setSpacing(3)
        self.gridLayout_59.setObjectName("gridLayout_59")
        self.weather_new_import = QtWidgets.QPushButton(self.weather_news_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.weather_new_import.sizePolicy().hasHeightForWidth())
        self.weather_new_import.setSizePolicy(sizePolicy)
        self.weather_new_import.setIcon(icon28)
        self.weather_new_import.setObjectName("weather_new_import")
        self.gridLayout_59.addWidget(self.weather_new_import, 0, 0, 1, 1)
        self.weather_news_table = QtWidgets.QTableWidget(self.weather_news_page)
        self.weather_news_table.setFocusPolicy(QtCore.Qt.NoFocus)
        self.weather_news_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.weather_news_table.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.weather_news_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.weather_news_table.setCornerButtonEnabled(False)
        self.weather_news_table.setObjectName("weather_news_table")
        self.weather_news_table.setColumnCount(4)
        self.weather_news_table.setRowCount(10)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(2, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(2, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(3, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(3, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(4, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(4, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(4, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(5, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(5, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(5, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(6, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(6, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(6, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(6, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(7, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(7, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(7, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(7, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(8, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(8, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(8, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(8, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(9, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(9, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(9, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.weather_news_table.setItem(9, 3, item)
        self.weather_news_table.horizontalHeader().setHighlightSections(False)
        self.weather_news_table.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_59.addWidget(self.weather_news_table, 1, 0, 1, 1)
        self.page_3_stackedWidget.addWidget(self.weather_news_page)
        self.sport_news_page = QtWidgets.QWidget()
        self.sport_news_page.setObjectName("sport_news_page")
        self.gridLayout_75 = QtWidgets.QGridLayout(self.sport_news_page)
        self.gridLayout_75.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_75.setSpacing(3)
        self.gridLayout_75.setObjectName("gridLayout_75")
        self.sport_new_import = QtWidgets.QPushButton(self.sport_news_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sport_new_import.sizePolicy().hasHeightForWidth())
        self.sport_new_import.setSizePolicy(sizePolicy)
        self.sport_new_import.setIcon(icon28)
        self.sport_new_import.setObjectName("sport_new_import")
        self.gridLayout_75.addWidget(self.sport_new_import, 0, 0, 1, 1)
        self.sport_news_table = QtWidgets.QTableWidget(self.sport_news_page)
        self.sport_news_table.setFocusPolicy(QtCore.Qt.NoFocus)
        self.sport_news_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.sport_news_table.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.sport_news_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.sport_news_table.setCornerButtonEnabled(False)
        self.sport_news_table.setObjectName("sport_news_table")
        self.sport_news_table.setColumnCount(4)
        self.sport_news_table.setRowCount(10)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(2, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(2, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(3, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(3, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(4, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(4, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(4, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(5, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(5, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(5, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(6, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(6, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(6, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(6, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(7, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(7, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(7, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(7, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(8, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(8, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(8, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(8, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(9, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(9, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(9, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.sport_news_table.setItem(9, 3, item)
        self.sport_news_table.horizontalHeader().setHighlightSections(False)
        self.sport_news_table.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_75.addWidget(self.sport_news_table, 1, 0, 1, 1)
        self.page_3_stackedWidget.addWidget(self.sport_news_page)
        self.like_today_page = QtWidgets.QWidget()
        self.like_today_page.setObjectName("like_today_page")
        self.verticalLayout_22 = QtWidgets.QVBoxLayout(self.like_today_page)
        self.verticalLayout_22.setContentsMargins(6, 6, 6, 6)
        self.verticalLayout_22.setSpacing(3)
        self.verticalLayout_22.setObjectName("verticalLayout_22")
        self.like_today_import = QtWidgets.QPushButton(self.like_today_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.like_today_import.sizePolicy().hasHeightForWidth())
        self.like_today_import.setSizePolicy(sizePolicy)
        self.like_today_import.setIcon(icon28)
        self.like_today_import.setObjectName("like_today_import")
        self.verticalLayout_22.addWidget(self.like_today_import)
        self.like_today_table = QtWidgets.QTableWidget(self.like_today_page)
        self.like_today_table.setFocusPolicy(QtCore.Qt.NoFocus)
        self.like_today_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.like_today_table.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.like_today_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.like_today_table.setCornerButtonEnabled(False)
        self.like_today_table.setObjectName("like_today_table")
        self.like_today_table.setColumnCount(4)
        self.like_today_table.setRowCount(10)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(2, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(2, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(3, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(3, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(4, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(4, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(4, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(5, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(5, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(5, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(6, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(6, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(6, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(6, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(7, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(7, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(7, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(7, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(8, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(8, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(8, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(8, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(9, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(9, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(9, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.like_today_table.setItem(9, 3, item)
        self.like_today_table.horizontalHeader().setHighlightSections(False)
        self.like_today_table.horizontalHeader().setStretchLastSection(True)
        self.verticalLayout_22.addWidget(self.like_today_table)
        self.page_3_stackedWidget.addWidget(self.like_today_page)
        self.record_ip_calls_page = QtWidgets.QWidget()
        self.record_ip_calls_page.setObjectName("record_ip_calls_page")
        self.gridLayout_60 = QtWidgets.QGridLayout(self.record_ip_calls_page)
        self.gridLayout_60.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_60.setSpacing(3)
        self.gridLayout_60.setObjectName("gridLayout_60")
        self.record_files_table = QtWidgets.QTableWidget(self.record_ip_calls_page)
        self.record_files_table.setFocusPolicy(QtCore.Qt.NoFocus)
        self.record_files_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.record_files_table.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.record_files_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.record_files_table.setCornerButtonEnabled(False)
        self.record_files_table.setObjectName("record_files_table")
        self.record_files_table.setColumnCount(5)
        self.record_files_table.setRowCount(10)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(0, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(1, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(2, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(2, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(2, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(3, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(3, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(3, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(4, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(4, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(4, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(4, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(5, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(5, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(5, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(5, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(6, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(6, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(6, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(6, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(6, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(7, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(7, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(7, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(7, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(7, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(8, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(8, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(8, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(8, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(8, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(9, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(9, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(9, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(9, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_files_table.setItem(9, 4, item)
        self.record_files_table.horizontalHeader().setHighlightSections(False)
        self.record_files_table.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_60.addWidget(self.record_files_table, 0, 0, 1, 1)
        self.page_3_stackedWidget.addWidget(self.record_ip_calls_page)
        self.history_page = QtWidgets.QWidget()
        self.history_page.setObjectName("history_page")
        self.gridLayout_79 = QtWidgets.QGridLayout(self.history_page)
        self.gridLayout_79.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_79.setSpacing(3)
        self.gridLayout_79.setObjectName("gridLayout_79")
        self.history_import = QtWidgets.QPushButton(self.history_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.history_import.sizePolicy().hasHeightForWidth())
        self.history_import.setSizePolicy(sizePolicy)
        self.history_import.setIcon(icon28)
        self.history_import.setObjectName("history_import")
        self.gridLayout_79.addWidget(self.history_import, 0, 0, 1, 1)
        self.history_table = QtWidgets.QTableWidget(self.history_page)
        self.history_table.setFocusPolicy(QtCore.Qt.NoFocus)
        self.history_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.history_table.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.history_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.history_table.setCornerButtonEnabled(False)
        self.history_table.setObjectName("history_table")
        self.history_table.setColumnCount(2)
        self.history_table.setRowCount(10)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setItem(4, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setItem(5, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setItem(6, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setItem(6, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setItem(7, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setItem(7, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setItem(8, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setItem(8, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setItem(9, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setItem(9, 1, item)
        self.history_table.horizontalHeader().setHighlightSections(False)
        self.history_table.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_79.addWidget(self.history_table, 1, 0, 1, 1)
        self.page_3_stackedWidget.addWidget(self.history_page)
        self.documentary_page = QtWidgets.QWidget()
        self.documentary_page.setObjectName("documentary_page")
        self.gridLayout_90 = QtWidgets.QGridLayout(self.documentary_page)
        self.gridLayout_90.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_90.setSpacing(3)
        self.gridLayout_90.setObjectName("gridLayout_90")
        self.documentary_import = QtWidgets.QPushButton(self.documentary_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.documentary_import.sizePolicy().hasHeightForWidth())
        self.documentary_import.setSizePolicy(sizePolicy)
        self.documentary_import.setIcon(icon28)
        self.documentary_import.setObjectName("documentary_import")
        self.gridLayout_90.addWidget(self.documentary_import, 0, 0, 1, 1)
        self.documentary_table = QtWidgets.QTableWidget(self.documentary_page)
        self.documentary_table.setFocusPolicy(QtCore.Qt.NoFocus)
        self.documentary_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.documentary_table.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.documentary_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.documentary_table.setCornerButtonEnabled(False)
        self.documentary_table.setObjectName("documentary_table")
        self.documentary_table.setColumnCount(2)
        self.documentary_table.setRowCount(10)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setItem(4, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setItem(5, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setItem(6, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setItem(6, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setItem(7, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setItem(7, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setItem(8, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setItem(8, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setItem(9, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.documentary_table.setItem(9, 1, item)
        self.documentary_table.horizontalHeader().setHighlightSections(False)
        self.documentary_table.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_90.addWidget(self.documentary_table, 1, 0, 1, 1)
        self.page_3_stackedWidget.addWidget(self.documentary_page)
        self.greek_lessons_page = QtWidgets.QWidget()
        self.greek_lessons_page.setObjectName("greek_lessons_page")
        self.gridLayout_96 = QtWidgets.QGridLayout(self.greek_lessons_page)
        self.gridLayout_96.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_96.setSpacing(3)
        self.gridLayout_96.setObjectName("gridLayout_96")
        self.greek_lessons_import = QtWidgets.QPushButton(self.greek_lessons_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.greek_lessons_import.sizePolicy().hasHeightForWidth())
        self.greek_lessons_import.setSizePolicy(sizePolicy)
        self.greek_lessons_import.setIcon(icon28)
        self.greek_lessons_import.setObjectName("greek_lessons_import")
        self.gridLayout_96.addWidget(self.greek_lessons_import, 0, 0, 1, 1)
        self.greek_lessons_table = QtWidgets.QTableWidget(self.greek_lessons_page)
        self.greek_lessons_table.setFocusPolicy(QtCore.Qt.NoFocus)
        self.greek_lessons_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.greek_lessons_table.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.greek_lessons_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.greek_lessons_table.setCornerButtonEnabled(False)
        self.greek_lessons_table.setObjectName("greek_lessons_table")
        self.greek_lessons_table.setColumnCount(3)
        self.greek_lessons_table.setRowCount(10)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(2, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(3, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(4, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(4, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(5, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(5, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(6, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(6, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(6, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(7, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(7, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(7, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(8, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(8, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(8, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(9, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(9, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.greek_lessons_table.setItem(9, 2, item)
        self.greek_lessons_table.horizontalHeader().setHighlightSections(False)
        self.greek_lessons_table.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_96.addWidget(self.greek_lessons_table, 1, 0, 1, 1)
        self.page_3_stackedWidget.addWidget(self.greek_lessons_page)
        self.record_file_page = QtWidgets.QWidget()
        self.record_file_page.setObjectName("record_file_page")
        self.gridLayout_65 = QtWidgets.QGridLayout(self.record_file_page)
        self.gridLayout_65.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_65.setSpacing(3)
        self.gridLayout_65.setObjectName("gridLayout_65")
        self.record_file_table = QtWidgets.QTableWidget(self.record_file_page)
        self.record_file_table.setFocusPolicy(QtCore.Qt.NoFocus)
        self.record_file_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.record_file_table.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.record_file_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.record_file_table.setCornerButtonEnabled(False)
        self.record_file_table.setObjectName("record_file_table")
        self.record_file_table.setColumnCount(2)
        self.record_file_table.setRowCount(10)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setItem(4, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setItem(5, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setItem(6, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setItem(6, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setItem(7, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setItem(7, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setItem(8, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setItem(8, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setItem(9, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.record_file_table.setItem(9, 1, item)
        self.record_file_table.horizontalHeader().setHighlightSections(False)
        self.record_file_table.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_65.addWidget(self.record_file_table, 1, 0, 1, 1)
        self.record_file_import = QtWidgets.QPushButton(self.record_file_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.record_file_import.sizePolicy().hasHeightForWidth())
        self.record_file_import.setSizePolicy(sizePolicy)
        icon45 = QtGui.QIcon()
        icon45.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-3/file-record.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.record_file_import.setIcon(icon45)
        self.record_file_import.setObjectName("record_file_import")
        self.gridLayout_65.addWidget(self.record_file_import, 0, 0, 1, 1)
        self.page_3_stackedWidget.addWidget(self.record_file_page)
        self.gridLayout_2.addWidget(self.page_3_stackedWidget, 2, 1, 1, 1)
        self.navigation_buttons_frame_3 = QtWidgets.QFrame(self.frame_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.navigation_buttons_frame_3.sizePolicy().hasHeightForWidth())
        self.navigation_buttons_frame_3.setSizePolicy(sizePolicy)
        self.navigation_buttons_frame_3.setStyleSheet("QFrame{border:none;}")
        self.navigation_buttons_frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.navigation_buttons_frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.navigation_buttons_frame_3.setObjectName("navigation_buttons_frame_3")
        self.horizontalLayout_32 = QtWidgets.QHBoxLayout(self.navigation_buttons_frame_3)
        self.horizontalLayout_32.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_32.setSpacing(0)
        self.horizontalLayout_32.setObjectName("horizontalLayout_32")
        spacerItem40 = QtWidgets.QSpacerItem(1439, 14, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_32.addItem(spacerItem40)
        self.move_previous_4 = QtWidgets.QPushButton(self.navigation_buttons_frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_previous_4.sizePolicy().hasHeightForWidth())
        self.move_previous_4.setSizePolicy(sizePolicy)
        self.move_previous_4.setMinimumSize(QtCore.QSize(14, 14))
        self.move_previous_4.setMaximumSize(QtCore.QSize(14, 14))
        self.move_previous_4.setStyleSheet("QPushButton{\n"
"    padding-right:2px;\n"
"    padding-top:2px;\n"
"}\n"
"\n"
"QPushButton:!hover{\n"
"    border:none;\n"
"    background:transparent;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    border:1px solid #ABABAB;\n"
"    background:rgb(251, 251, 251);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    border:1px solid #ABABAB;\n"
"    background:rgb(220, 220, 220);\n"
"}")
        self.move_previous_4.setText("")
        self.move_previous_4.setIcon(icon9)
        self.move_previous_4.setIconSize(QtCore.QSize(8, 8))
        self.move_previous_4.setObjectName("move_previous_4")
        self.horizontalLayout_32.addWidget(self.move_previous_4)
        spacerItem41 = QtWidgets.QSpacerItem(2, 14, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_32.addItem(spacerItem41)
        self.move_next_4 = QtWidgets.QPushButton(self.navigation_buttons_frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_next_4.sizePolicy().hasHeightForWidth())
        self.move_next_4.setSizePolicy(sizePolicy)
        self.move_next_4.setMinimumSize(QtCore.QSize(14, 14))
        self.move_next_4.setMaximumSize(QtCore.QSize(14, 14))
        self.move_next_4.setStyleSheet("QPushButton{\n"
"    padding-right:4px;\n"
"    padding-top:2px;\n"
"}\n"
"\n"
"QPushButton:!hover{\n"
"    border:none;\n"
"    background:transparent;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    border:1px solid #ABABAB;\n"
"    background:rgb(251, 251, 251);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    border:1px solid #ABABAB;\n"
"    background:rgb(220, 220, 220);\n"
"}")
        self.move_next_4.setText("")
        self.move_next_4.setIcon(icon10)
        self.move_next_4.setIconSize(QtCore.QSize(8, 8))
        self.move_next_4.setObjectName("move_next_4")
        self.horizontalLayout_32.addWidget(self.move_next_4)
        self.gridLayout_2.addWidget(self.navigation_buttons_frame_3, 0, 0, 1, 2)
        self.page_3_main_list_widget = QtWidgets.QListWidget(self.frame_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_3_main_list_widget.sizePolicy().hasHeightForWidth())
        self.page_3_main_list_widget.setSizePolicy(sizePolicy)
        self.page_3_main_list_widget.setFocusPolicy(QtCore.Qt.NoFocus)
        self.page_3_main_list_widget.setStyleSheet("QListWidget{border:1px solid #ABABAB;}\n"
"\n"
"QListWidget::item{\n"
"    background-color: white;\n"
"}\n"
"\n"
"QListWidget::item:selected{\n"
"    background-color: rgb(17, 130, 220);\n"
"}")
        self.page_3_main_list_widget.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.page_3_main_list_widget.setObjectName("page_3_main_list_widget")
        item = QtWidgets.QListWidgetItem()
        icon46 = QtGui.QIcon()
        icon46.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/main-player-list.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon46)
        self.page_3_main_list_widget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setIcon(icon27)
        self.page_3_main_list_widget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setIcon(icon30)
        self.page_3_main_list_widget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon47 = QtGui.QIcon()
        icon47.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/sound-clip.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon47)
        self.page_3_main_list_widget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setIcon(icon31)
        self.page_3_main_list_widget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon48 = QtGui.QIcon()
        icon48.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/station-logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon48)
        self.page_3_main_list_widget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setIcon(icon32)
        self.page_3_main_list_widget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon49 = QtGui.QIcon()
        icon49.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/church-news.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon49)
        self.page_3_main_list_widget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon50 = QtGui.QIcon()
        icon50.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/newspaper.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon50)
        self.page_3_main_list_widget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon51 = QtGui.QIcon()
        icon51.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/weather-news.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon51)
        self.page_3_main_list_widget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon52 = QtGui.QIcon()
        icon52.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/football.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon52)
        self.page_3_main_list_widget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon53 = QtGui.QIcon()
        icon53.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/today.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon53)
        self.page_3_main_list_widget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon54 = QtGui.QIcon()
        icon54.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/call.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon54)
        self.page_3_main_list_widget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon55 = QtGui.QIcon()
        icon55.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/history.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon55)
        self.page_3_main_list_widget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon56 = QtGui.QIcon()
        icon56.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/best-documentary.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon56)
        self.page_3_main_list_widget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon57 = QtGui.QIcon()
        icon57.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/teaching.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon57)
        self.page_3_main_list_widget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setIcon(icon45)
        self.page_3_main_list_widget.addItem(item)
        self.gridLayout_2.addWidget(self.page_3_main_list_widget, 1, 0, 2, 1)
        self.verticalLayout_6.addWidget(self.frame_4)
        self.stackedWidget.addWidget(self.page_4)
        self.verticalLayout_29.addWidget(self.stackedWidget)
        spacerItem42 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_29.addItem(spacerItem42)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1251, 32))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.menubar.sizePolicy().hasHeightForWidth())
        self.menubar.setSizePolicy(sizePolicy)
        self.menubar.setStyleSheet("QMenuBar{\n"
"    padding:5px 0px;\n"
"    background:#fefefe;\n"
"}\n"
"\n"
"QMenuBar::item:selected{\n"
"    border:none;\n"
"}")
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menu_7 = QtWidgets.QMenu(self.menu)
        self.menu_7.setWhatsThis("")
        self.menu_7.setIcon(icon27)
        self.menu_7.setObjectName("menu_7")
        self.menu_9 = QtWidgets.QMenu(self.menu_7)
        icon58 = QtGui.QIcon()
        icon58.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/add.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_9.setIcon(icon58)
        self.menu_9.setObjectName("menu_9")
        self.menu_8 = QtWidgets.QMenu(self.menu_7)
        icon59 = QtGui.QIcon()
        icon59.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/play.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_8.setIcon(icon59)
        self.menu_8.setObjectName("menu_8")
        self.menu_34 = QtWidgets.QMenu(self.menu_7)
        self.menu_34.setIcon(icon28)
        self.menu_34.setObjectName("menu_34")
        self.menu_35 = QtWidgets.QMenu(self.menu_7)
        icon60 = QtGui.QIcon()
        icon60.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/checklist.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_35.setIcon(icon60)
        self.menu_35.setObjectName("menu_35")
        self.menu_10 = QtWidgets.QMenu(self.menu)
        self.menu_10.setIcon(icon30)
        self.menu_10.setObjectName("menu_10")
        self.menu_11 = QtWidgets.QMenu(self.menu_10)
        self.menu_11.setIcon(icon58)
        self.menu_11.setObjectName("menu_11")
        self.menu_12 = QtWidgets.QMenu(self.menu_10)
        icon61 = QtGui.QIcon()
        icon61.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/export.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_12.setIcon(icon61)
        self.menu_12.setObjectName("menu_12")
        self.menu_32 = QtWidgets.QMenu(self.menu_10)
        self.menu_32.setIcon(icon59)
        self.menu_32.setObjectName("menu_32")
        self.menu_clips = QtWidgets.QMenu(self.menu)
        self.menu_clips.setIcon(icon47)
        self.menu_clips.setObjectName("menu_clips")
        self.menu_13 = QtWidgets.QMenu(self.menu_clips)
        self.menu_13.setIcon(icon58)
        self.menu_13.setObjectName("menu_13")
        self.menu_33 = QtWidgets.QMenu(self.menu_clips)
        self.menu_33.setIcon(icon59)
        self.menu_33.setObjectName("menu_33")
        self.menu_14 = QtWidgets.QMenu(self.menu)
        icon62 = QtGui.QIcon()
        icon62.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/devices.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_14.setIcon(icon62)
        self.menu_14.setObjectName("menu_14")
        self.menu_15 = QtWidgets.QMenu(self.menu)
        self.menu_15.setIcon(icon31)
        self.menu_15.setObjectName("menu_15")
        self.menu_16 = QtWidgets.QMenu(self.menu_15)
        self.menu_16.setIcon(icon59)
        self.menu_16.setObjectName("menu_16")
        self.menu_17 = QtWidgets.QMenu(self.menu_15)
        self.menu_17.setIcon(icon58)
        self.menu_17.setObjectName("menu_17")
        self.menu_36 = QtWidgets.QMenu(self.menu_15)
        self.menu_36.setIcon(icon60)
        self.menu_36.setObjectName("menu_36")
        self.menu_20 = QtWidgets.QMenu(self.menu)
        icon63 = QtGui.QIcon()
        icon63.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/usefull.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_20.setIcon(icon63)
        self.menu_20.setObjectName("menu_20")
        self.menu_21 = QtWidgets.QMenu(self.menu_20)
        self.menu_21.setIcon(icon48)
        self.menu_21.setObjectName("menu_21")
        self.menu_22 = QtWidgets.QMenu(self.menu_21)
        self.menu_22.setIcon(icon59)
        self.menu_22.setObjectName("menu_22")
        self.menu_23 = QtWidgets.QMenu(self.menu_21)
        self.menu_23.setIcon(icon58)
        self.menu_23.setObjectName("menu_23")
        self.menu_station_logo_35 = QtWidgets.QMenu(self.menu_21)
        self.menu_station_logo_35.setIcon(icon60)
        self.menu_station_logo_35.setObjectName("menu_station_logo_35")
        self.menu_24 = QtWidgets.QMenu(self.menu_20)
        self.menu_24.setIcon(icon32)
        self.menu_24.setObjectName("menu_24")
        self.menu_25 = QtWidgets.QMenu(self.menu_24)
        self.menu_25.setIcon(icon58)
        self.menu_25.setObjectName("menu_25")
        self.menu_26 = QtWidgets.QMenu(self.menu_20)
        self.menu_26.setIcon(icon49)
        self.menu_26.setObjectName("menu_26")
        self.menu_27 = QtWidgets.QMenu(self.menu_26)
        self.menu_27.setIcon(icon59)
        self.menu_27.setObjectName("menu_27")
        self.menu_28 = QtWidgets.QMenu(self.menu_26)
        self.menu_28.setIcon(icon58)
        self.menu_28.setObjectName("menu_28")
        self.menu_church_news_35 = QtWidgets.QMenu(self.menu_26)
        self.menu_church_news_35.setIcon(icon60)
        self.menu_church_news_35.setObjectName("menu_church_news_35")
        self.menu_29 = QtWidgets.QMenu(self.menu_20)
        self.menu_29.setIcon(icon51)
        self.menu_29.setObjectName("menu_29")
        self.menu_30 = QtWidgets.QMenu(self.menu_29)
        self.menu_30.setIcon(icon59)
        self.menu_30.setObjectName("menu_30")
        self.menu_31 = QtWidgets.QMenu(self.menu_29)
        self.menu_31.setIcon(icon58)
        self.menu_31.setObjectName("menu_31")
        self.menu_weather_news_35 = QtWidgets.QMenu(self.menu_29)
        self.menu_weather_news_35.setIcon(icon60)
        self.menu_weather_news_35.setObjectName("menu_weather_news_35")
        self.menu_like_today = QtWidgets.QMenu(self.menu_20)
        self.menu_like_today.setIcon(icon53)
        self.menu_like_today.setObjectName("menu_like_today")
        self.menu_30_1 = QtWidgets.QMenu(self.menu_like_today)
        self.menu_30_1.setIcon(icon59)
        self.menu_30_1.setObjectName("menu_30_1")
        self.menu_31_1 = QtWidgets.QMenu(self.menu_like_today)
        self.menu_31_1.setIcon(icon58)
        self.menu_31_1.setObjectName("menu_31_1")
        self.menu_like_today_35 = QtWidgets.QMenu(self.menu_like_today)
        self.menu_like_today_35.setIcon(icon60)
        self.menu_like_today_35.setObjectName("menu_like_today_35")
        self.menu_38 = QtWidgets.QMenu(self.menu_20)
        self.menu_38.setIcon(icon50)
        self.menu_38.setObjectName("menu_38")
        self.menu_news_27 = QtWidgets.QMenu(self.menu_38)
        self.menu_news_27.setIcon(icon59)
        self.menu_news_27.setObjectName("menu_news_27")
        self.menu_news_28 = QtWidgets.QMenu(self.menu_38)
        self.menu_news_28.setIcon(icon58)
        self.menu_news_28.setObjectName("menu_news_28")
        self.menu_news_35 = QtWidgets.QMenu(self.menu_38)
        self.menu_news_35.setIcon(icon60)
        self.menu_news_35.setObjectName("menu_news_35")
        self.menu_3 = QtWidgets.QMenu(self.menu_20)
        self.menu_3.setIcon(icon52)
        self.menu_3.setObjectName("menu_3")
        self.menu_5 = QtWidgets.QMenu(self.menu_3)
        self.menu_5.setIcon(icon59)
        self.menu_5.setObjectName("menu_5")
        self.menu_6 = QtWidgets.QMenu(self.menu_3)
        self.menu_6.setIcon(icon60)
        self.menu_6.setObjectName("menu_6")
        self.menu_45 = QtWidgets.QMenu(self.menu_3)
        self.menu_45.setIcon(icon58)
        self.menu_45.setObjectName("menu_45")
        self.menu_39 = QtWidgets.QMenu(self.menu)
        self.menu_39.setIcon(icon54)
        self.menu_39.setObjectName("menu_39")
        self.menu_40 = QtWidgets.QMenu(self.menu_39)
        self.menu_40.setIcon(icon59)
        self.menu_40.setObjectName("menu_40")
        self.menu_41 = QtWidgets.QMenu(self.menu_39)
        self.menu_41.setIcon(icon60)
        self.menu_41.setObjectName("menu_41")
        self.menu_42 = QtWidgets.QMenu(self.menu_39)
        self.menu_42.setIcon(icon58)
        self.menu_42.setObjectName("menu_42")
        self.menu_100 = QtWidgets.QMenu(self.menu)
        self.menu_100.setIcon(icon55)
        self.menu_100.setObjectName("menu_100")
        self.menu_47 = QtWidgets.QMenu(self.menu_100)
        self.menu_47.setIcon(icon59)
        self.menu_47.setObjectName("menu_47")
        self.menu_48 = QtWidgets.QMenu(self.menu_100)
        self.menu_48.setIcon(icon60)
        self.menu_48.setObjectName("menu_48")
        self.menu_49 = QtWidgets.QMenu(self.menu_100)
        self.menu_49.setIcon(icon58)
        self.menu_49.setObjectName("menu_49")
        self.menu_46 = QtWidgets.QMenu(self.menu)
        self.menu_46.setIcon(icon56)
        self.menu_46.setObjectName("menu_46")
        self.menu_50 = QtWidgets.QMenu(self.menu_46)
        self.menu_50.setIcon(icon59)
        self.menu_50.setObjectName("menu_50")
        self.menu_51 = QtWidgets.QMenu(self.menu_46)
        self.menu_51.setIcon(icon60)
        self.menu_51.setObjectName("menu_51")
        self.menu_52 = QtWidgets.QMenu(self.menu_46)
        self.menu_52.setIcon(icon58)
        self.menu_52.setObjectName("menu_52")
        self.menu_53 = QtWidgets.QMenu(self.menu)
        self.menu_53.setIcon(icon57)
        self.menu_53.setObjectName("menu_53")
        self.menu_54 = QtWidgets.QMenu(self.menu_53)
        self.menu_54.setIcon(icon59)
        self.menu_54.setObjectName("menu_54")
        self.menu_55 = QtWidgets.QMenu(self.menu_53)
        self.menu_55.setIcon(icon60)
        self.menu_55.setObjectName("menu_55")
        self.menu_56 = QtWidgets.QMenu(self.menu_53)
        self.menu_56.setIcon(icon58)
        self.menu_56.setObjectName("menu_56")
        self.menu_2 = QtWidgets.QMenu(self.menubar)
        self.menu_2.setObjectName("menu_2")
        self.menu_4 = QtWidgets.QMenu(self.menubar)
        self.menu_4.setObjectName("menu_4")
        self.menu_19 = QtWidgets.QMenu(self.menubar)
        self.menu_19.setObjectName("menu_19")
        self.menu_18 = QtWidgets.QMenu(self.menubar)
        self.menu_18.setStatusTip("")
        self.menu_18.setObjectName("menu_18")
        self.menu_37 = QtWidgets.QMenu(self.menu_18)
        self.menu_37.setIcon(icon45)
        self.menu_37.setObjectName("menu_37")
        self.menu_record_8 = QtWidgets.QMenu(self.menu_37)
        self.menu_record_8.setIcon(icon59)
        self.menu_record_8.setObjectName("menu_record_8")
        self.menu_record_35 = QtWidgets.QMenu(self.menu_37)
        self.menu_record_35.setIcon(icon60)
        self.menu_record_35.setObjectName("menu_record_35")
        self.menu_record_9 = QtWidgets.QMenu(self.menu_37)
        self.menu_record_9.setIcon(icon58)
        self.menu_record_9.setObjectName("menu_record_9")
        self.menu_43 = QtWidgets.QMenu(self.menubar)
        self.menu_43.setObjectName("menu_43")
        self.menu_44 = QtWidgets.QMenu(self.menubar)
        self.menu_44.setObjectName("menu_44")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setStyleSheet("QStatusBar{\n"
"    border-top:1px solid #ababab;\n"
"    background:#fefefe;\n"
"}")
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.toolBar.setStyleSheet("QToolBar{\n"
"    border:none;\n"
"    border-bottom:1px solid #ABABAB;\n"
"    background:#fefefe;\n"
"    border-top:1px solid #DCDCDC;\n"
"\n"
"}\n"
"\n"
"QToolButton{\n"
"    padding:5px 0px;\n"
"}")
        self.toolBar.setMovable(False)
        self.toolBar.setIconSize(QtCore.QSize(25, 25))
        self.toolBar.setFloatable(True)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.menu_manual = QtWidgets.QAction(MainWindow)
        icon64 = QtGui.QIcon()
        icon64.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-7/manual.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_manual.setIcon(icon64)
        self.menu_manual.setObjectName("menu_manual")
        self.menu_abstract_information = QtWidgets.QAction(MainWindow)
        icon65 = QtGui.QIcon()
        icon65.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-7/program-basic-information.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_abstract_information.setIcon(icon65)
        self.menu_abstract_information.setObjectName("menu_abstract_information")
        self.menu_contact = QtWidgets.QAction(MainWindow)
        icon66 = QtGui.QIcon()
        icon66.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-7/contact.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_contact.setIcon(icon66)
        self.menu_contact.setObjectName("menu_contact")
        self.menu_choose_theme = QtWidgets.QAction(MainWindow)
        icon67 = QtGui.QIcon()
        icon67.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-6/theme.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_choose_theme.setIcon(icon67)
        self.menu_choose_theme.setObjectName("menu_choose_theme")
        self.menu_select_player_list_fields = QtWidgets.QAction(MainWindow)
        icon68 = QtGui.QIcon()
        icon68.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-6/show-fields.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_select_player_list_fields.setIcon(icon68)
        self.menu_select_player_list_fields.setObjectName("menu_select_player_list_fields")
        self.menu_programm_components = QtWidgets.QAction(MainWindow)
        icon69 = QtGui.QIcon()
        icon69.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-6/program.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_programm_components.setIcon(icon69)
        self.menu_programm_components.setObjectName("menu_programm_components")
        self.menu_manage_tasks = QtWidgets.QAction(MainWindow)
        icon70 = QtGui.QIcon()
        icon70.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/manage-tasks.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_manage_tasks.setIcon(icon70)
        self.menu_manage_tasks.setObjectName("menu_manage_tasks")
        self.menu_save_and_exit = QtWidgets.QAction(MainWindow)
        icon71 = QtGui.QIcon()
        icon71.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/exit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_save_and_exit.setIcon(icon71)
        self.menu_save_and_exit.setObjectName("menu_save_and_exit")
        self.menu_sound_file_export = QtWidgets.QAction(MainWindow)
        self.menu_sound_file_export.setIcon(icon61)
        self.menu_sound_file_export.setObjectName("menu_sound_file_export")
        self.menu_sound_file_edit = QtWidgets.QAction(MainWindow)
        icon72 = QtGui.QIcon()
        icon72.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/edit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_sound_file_edit.setIcon(icon72)
        self.menu_sound_file_edit.setObjectName("menu_sound_file_edit")
        self.menu_sound_file_preview = QtWidgets.QAction(MainWindow)
        icon73 = QtGui.QIcon()
        icon73.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/preview.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_sound_file_preview.setIcon(icon73)
        self.menu_sound_file_preview.setObjectName("menu_sound_file_preview")
        self.menu_sound_file_delete = QtWidgets.QAction(MainWindow)
        self.menu_sound_file_delete.setIcon(icon23)
        self.menu_sound_file_delete.setObjectName("menu_sound_file_delete")
        self.menu_sound_file_play_now_deck_1 = QtWidgets.QAction(MainWindow)
        icon74 = QtGui.QIcon()
        icon74.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/circle-1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_sound_file_play_now_deck_1.setIcon(icon74)
        self.menu_sound_file_play_now_deck_1.setObjectName("menu_sound_file_play_now_deck_1")
        self.menu_sound_file_play_now_deck_2 = QtWidgets.QAction(MainWindow)
        icon75 = QtGui.QIcon()
        icon75.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/circle-2.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_sound_file_play_now_deck_2.setIcon(icon75)
        self.menu_sound_file_play_now_deck_2.setObjectName("menu_sound_file_play_now_deck_2")
        self.menu_sound_file_play_when_ready = QtWidgets.QAction(MainWindow)
        icon76 = QtGui.QIcon()
        icon76.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/circle-question.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_sound_file_play_when_ready.setIcon(icon76)
        self.menu_sound_file_play_when_ready.setObjectName("menu_sound_file_play_when_ready")
        self.menu_record_play_now_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_record_play_now_deck_1.setIcon(icon74)
        self.menu_record_play_now_deck_1.setObjectName("menu_record_play_now_deck_1")
        self.menu_record_play_now_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_record_play_now_deck_2.setIcon(icon75)
        self.menu_record_play_now_deck_2.setObjectName("menu_record_play_now_deck_2")
        self.menu_record_play_when_ready = QtWidgets.QAction(MainWindow)
        self.menu_record_play_when_ready.setIcon(icon76)
        self.menu_record_play_when_ready.setObjectName("menu_record_play_when_ready")
        self.menu_record_add_to_player_list_top = QtWidgets.QAction(MainWindow)
        icon77 = QtGui.QIcon()
        icon77.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/add-to-playlist-top.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_record_add_to_player_list_top.setIcon(icon77)
        self.menu_record_add_to_player_list_top.setObjectName("menu_record_add_to_player_list_top")
        self.menu_record_add_to_player_list_bottom = QtWidgets.QAction(MainWindow)
        icon78 = QtGui.QIcon()
        icon78.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/add-to-playlist-bottom.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_record_add_to_player_list_bottom.setIcon(icon78)
        self.menu_record_add_to_player_list_bottom.setObjectName("menu_record_add_to_player_list_bottom")
        self.menu_record_add_to_new_scheduled_transmition = QtWidgets.QAction(MainWindow)
        icon79 = QtGui.QIcon()
        icon79.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/add-to-new-schedule.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_record_add_to_new_scheduled_transmition.setIcon(icon79)
        self.menu_record_add_to_new_scheduled_transmition.setObjectName("menu_record_add_to_new_scheduled_transmition")
        self.menu_record_add_to_existed_scheduled_transmition = QtWidgets.QAction(MainWindow)
        icon80 = QtGui.QIcon()
        icon80.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/add-to-existing-schedule.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_record_add_to_existed_scheduled_transmition.setIcon(icon80)
        self.menu_record_add_to_existed_scheduled_transmition.setObjectName("menu_record_add_to_existed_scheduled_transmition")
        self.menu_sound_file_add_to_player_list_top = QtWidgets.QAction(MainWindow)
        self.menu_sound_file_add_to_player_list_top.setIcon(icon77)
        self.menu_sound_file_add_to_player_list_top.setObjectName("menu_sound_file_add_to_player_list_top")
        self.menu_sound_file_add_to_player_list_bottom = QtWidgets.QAction(MainWindow)
        self.menu_sound_file_add_to_player_list_bottom.setIcon(icon78)
        self.menu_sound_file_add_to_player_list_bottom.setObjectName("menu_sound_file_add_to_player_list_bottom")
        self.menu_sound_file_add_to_new_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_sound_file_add_to_new_scheduled_transmition.setIcon(icon79)
        self.menu_sound_file_add_to_new_scheduled_transmition.setObjectName("menu_sound_file_add_to_new_scheduled_transmition")
        self.menu_sound_file_add_to_existed_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_sound_file_add_to_existed_scheduled_transmition.setIcon(icon80)
        self.menu_sound_file_add_to_existed_scheduled_transmition.setObjectName("menu_sound_file_add_to_existed_scheduled_transmition")
        self.menu_playlist_import = QtWidgets.QAction(MainWindow)
        self.menu_playlist_import.setIcon(icon28)
        self.menu_playlist_import.setObjectName("menu_playlist_import")
        self.menu_playlist_create = QtWidgets.QAction(MainWindow)
        self.menu_playlist_create.setIcon(icon29)
        self.menu_playlist_create.setObjectName("menu_playlist_create")
        self.menu_playlist_edit = QtWidgets.QAction(MainWindow)
        self.menu_playlist_edit.setIcon(icon72)
        self.menu_playlist_edit.setObjectName("menu_playlist_edit")
        self.menu_playlist_preview = QtWidgets.QAction(MainWindow)
        self.menu_playlist_preview.setIcon(icon73)
        self.menu_playlist_preview.setObjectName("menu_playlist_preview")
        self.menu_playlist_delete = QtWidgets.QAction(MainWindow)
        self.menu_playlist_delete.setIcon(icon23)
        self.menu_playlist_delete.setObjectName("menu_playlist_delete")
        self.menu_playlist_add_to_playlist_top = QtWidgets.QAction(MainWindow)
        self.menu_playlist_add_to_playlist_top.setIcon(icon77)
        self.menu_playlist_add_to_playlist_top.setObjectName("menu_playlist_add_to_playlist_top")
        self.menu_playlist_add_to_playlist_bottom = QtWidgets.QAction(MainWindow)
        self.menu_playlist_add_to_playlist_bottom.setIcon(icon78)
        self.menu_playlist_add_to_playlist_bottom.setObjectName("menu_playlist_add_to_playlist_bottom")
        self.menu_playlist_add_to_new_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_playlist_add_to_new_scheduled_transmition.setIcon(icon79)
        self.menu_playlist_add_to_new_scheduled_transmition.setObjectName("menu_playlist_add_to_new_scheduled_transmition")
        self.menu_playlist_add_to_existed_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_playlist_add_to_existed_scheduled_transmition.setIcon(icon80)
        self.menu_playlist_add_to_existed_scheduled_transmition.setObjectName("menu_playlist_add_to_existed_scheduled_transmition")
        self.menu_playlist_export_as_playlist = QtWidgets.QAction(MainWindow)
        self.menu_playlist_export_as_playlist.setIcon(icon30)
        self.menu_playlist_export_as_playlist.setStatusTip("")
        self.menu_playlist_export_as_playlist.setObjectName("menu_playlist_export_as_playlist")
        self.menu_playlist_export_as_sound_files = QtWidgets.QAction(MainWindow)
        self.menu_playlist_export_as_sound_files.setIcon(icon27)
        self.menu_playlist_export_as_sound_files.setStatusTip("")
        self.menu_playlist_export_as_sound_files.setObjectName("menu_playlist_export_as_sound_files")
        self.menu_sound_clips_import = QtWidgets.QAction(MainWindow)
        self.menu_sound_clips_import.setIcon(icon28)
        self.menu_sound_clips_import.setObjectName("menu_sound_clips_import")
        self.menu_sound_clips_classification = QtWidgets.QAction(MainWindow)
        icon81 = QtGui.QIcon()
        icon81.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/data-classification.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_sound_clips_classification.setIcon(icon81)
        self.menu_sound_clips_classification.setObjectName("menu_sound_clips_classification")
        self.menu_sound_clips_export = QtWidgets.QAction(MainWindow)
        self.menu_sound_clips_export.setIcon(icon61)
        self.menu_sound_clips_export.setObjectName("menu_sound_clips_export")
        self.menu_sound_clips_edit = QtWidgets.QAction(MainWindow)
        self.menu_sound_clips_edit.setIcon(icon72)
        self.menu_sound_clips_edit.setObjectName("menu_sound_clips_edit")
        self.menu_sound_clips_preview = QtWidgets.QAction(MainWindow)
        self.menu_sound_clips_preview.setIcon(icon73)
        self.menu_sound_clips_preview.setObjectName("menu_sound_clips_preview")
        self.menu_sound_clips_delete = QtWidgets.QAction(MainWindow)
        self.menu_sound_clips_delete.setIcon(icon23)
        self.menu_sound_clips_delete.setObjectName("menu_sound_clips_delete")
        self.menu_sound_clips_add_to_playlist_top = QtWidgets.QAction(MainWindow)
        self.menu_sound_clips_add_to_playlist_top.setIcon(icon77)
        self.menu_sound_clips_add_to_playlist_top.setObjectName("menu_sound_clips_add_to_playlist_top")
        self.menu_sound_clips_add_to_playlist_bottom = QtWidgets.QAction(MainWindow)
        self.menu_sound_clips_add_to_playlist_bottom.setIcon(icon78)
        self.menu_sound_clips_add_to_playlist_bottom.setObjectName("menu_sound_clips_add_to_playlist_bottom")
        self.menu_sound_clips_add_to_new_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_sound_clips_add_to_new_scheduled_transmition.setIcon(icon79)
        self.menu_sound_clips_add_to_new_scheduled_transmition.setObjectName("menu_sound_clips_add_to_new_scheduled_transmition")
        self.menu_sound_clips_add_to_existed_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_sound_clips_add_to_existed_scheduled_transmition.setIcon(icon80)
        self.menu_sound_clips_add_to_existed_scheduled_transmition.setObjectName("menu_sound_clips_add_to_existed_scheduled_transmition")
        self.menu_manage_output_devices = QtWidgets.QAction(MainWindow)
        icon82 = QtGui.QIcon()
        icon82.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/sound-settings.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_manage_output_devices.setIcon(icon82)
        self.menu_manage_output_devices.setObjectName("menu_manage_output_devices")
        self.menu_manage_input_device = QtWidgets.QAction(MainWindow)
        self.menu_manage_input_device.setIcon(icon2)
        self.menu_manage_input_device.setObjectName("menu_manage_input_device")
        self.menu_retransmitions_import = QtWidgets.QAction(MainWindow)
        self.menu_retransmitions_import.setIcon(icon28)
        self.menu_retransmitions_import.setObjectName("menu_retransmitions_import")
        self.menu_retransmitions_edit = QtWidgets.QAction(MainWindow)
        self.menu_retransmitions_edit.setIcon(icon72)
        self.menu_retransmitions_edit.setObjectName("menu_retransmitions_edit")
        self.menu_retransmitions_preview = QtWidgets.QAction(MainWindow)
        self.menu_retransmitions_preview.setIcon(icon73)
        self.menu_retransmitions_preview.setObjectName("menu_retransmitions_preview")
        self.menu_retransmitions_export = QtWidgets.QAction(MainWindow)
        self.menu_retransmitions_export.setIcon(icon61)
        self.menu_retransmitions_export.setObjectName("menu_retransmitions_export")
        self.menu_retransmitions_delete = QtWidgets.QAction(MainWindow)
        self.menu_retransmitions_delete.setIcon(icon23)
        self.menu_retransmitions_delete.setObjectName("menu_retransmitions_delete")
        self.menu_retransmitions_play_now_on_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_retransmitions_play_now_on_deck_1.setIcon(icon74)
        self.menu_retransmitions_play_now_on_deck_1.setObjectName("menu_retransmitions_play_now_on_deck_1")
        self.menu_retransmitions_play_now_on_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_retransmitions_play_now_on_deck_2.setIcon(icon75)
        self.menu_retransmitions_play_now_on_deck_2.setObjectName("menu_retransmitions_play_now_on_deck_2")
        self.menu_retransmitions_play_when_ready = QtWidgets.QAction(MainWindow)
        self.menu_retransmitions_play_when_ready.setIcon(icon76)
        self.menu_retransmitions_play_when_ready.setObjectName("menu_retransmitions_play_when_ready")
        self.menu_retransmitions_add_to_player_list_top = QtWidgets.QAction(MainWindow)
        self.menu_retransmitions_add_to_player_list_top.setIcon(icon77)
        self.menu_retransmitions_add_to_player_list_top.setObjectName("menu_retransmitions_add_to_player_list_top")
        self.menu_retransmitions_add_to_player_list_bottom = QtWidgets.QAction(MainWindow)
        self.menu_retransmitions_add_to_player_list_bottom.setIcon(icon78)
        self.menu_retransmitions_add_to_player_list_bottom.setObjectName("menu_retransmitions_add_to_player_list_bottom")
        self.menu_retransmitions_add_to_new_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_retransmitions_add_to_new_scheduled_transmition.setIcon(icon79)
        self.menu_retransmitions_add_to_new_scheduled_transmition.setObjectName("menu_retransmitions_add_to_new_scheduled_transmition")
        self.menu_retransmitions_add_to_existed_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_retransmitions_add_to_existed_scheduled_transmition.setIcon(icon80)
        self.menu_retransmitions_add_to_existed_scheduled_transmition.setObjectName("menu_retransmitions_add_to_existed_scheduled_transmition")
        self.menu_record_start = QtWidgets.QAction(MainWindow)
        self.menu_record_start.setIcon(icon14)
        self.menu_record_start.setObjectName("menu_record_start")
        self.menu_record_pause = QtWidgets.QAction(MainWindow)
        self.menu_record_pause.setEnabled(False)
        self.menu_record_pause.setIcon(icon15)
        self.menu_record_pause.setObjectName("menu_record_pause")
        self.menu_record_stop = QtWidgets.QAction(MainWindow)
        self.menu_record_stop.setEnabled(False)
        self.menu_record_stop.setIcon(icon16)
        self.menu_record_stop.setObjectName("menu_record_stop")
        self.menu_report_scheduled_transmition = QtWidgets.QAction(MainWindow)
        icon83 = QtGui.QIcon()
        icon83.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-5/scheduled-transmitions-report.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_report_scheduled_transmition.setIcon(icon83)
        self.menu_report_scheduled_transmition.setObjectName("menu_report_scheduled_transmition")
        self.menu_report_week_programm = QtWidgets.QAction(MainWindow)
        icon84 = QtGui.QIcon()
        icon84.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-5/report-schedule.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_report_week_programm.setIcon(icon84)
        self.menu_report_week_programm.setObjectName("menu_report_week_programm")
        self.menu_report_general_deck_history = QtWidgets.QAction(MainWindow)
        icon85 = QtGui.QIcon()
        icon85.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-5/report-history.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_report_general_deck_history.setIcon(icon85)
        self.menu_report_general_deck_history.setObjectName("menu_report_general_deck_history")
        self.menu_report_listeners_statistics = QtWidgets.QAction(MainWindow)
        icon86 = QtGui.QIcon()
        icon86.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-5/listener-statistics.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_report_listeners_statistics.setIcon(icon86)
        self.menu_report_listeners_statistics.setObjectName("menu_report_listeners_statistics")
        self.menu_station_logos_import = QtWidgets.QAction(MainWindow)
        self.menu_station_logos_import.setIcon(icon28)
        self.menu_station_logos_import.setObjectName("menu_station_logos_import")
        self.menu_station_logos_default = QtWidgets.QAction(MainWindow)
        icon87 = QtGui.QIcon()
        icon87.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/select-default.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_station_logos_default.setIcon(icon87)
        self.menu_station_logos_default.setObjectName("menu_station_logos_default")
        self.menu_station_logos_export = QtWidgets.QAction(MainWindow)
        self.menu_station_logos_export.setIcon(icon61)
        self.menu_station_logos_export.setObjectName("menu_station_logos_export")
        self.menu_station_logos_edit = QtWidgets.QAction(MainWindow)
        self.menu_station_logos_edit.setIcon(icon72)
        self.menu_station_logos_edit.setObjectName("menu_station_logos_edit")
        self.menu_station_logos_preview = QtWidgets.QAction(MainWindow)
        self.menu_station_logos_preview.setIcon(icon73)
        self.menu_station_logos_preview.setObjectName("menu_station_logos_preview")
        self.menu_station_logos_delete = QtWidgets.QAction(MainWindow)
        self.menu_station_logos_delete.setIcon(icon23)
        self.menu_station_logos_delete.setObjectName("menu_station_logos_delete")
        self.menu_station_logos_play_now_on_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_station_logos_play_now_on_deck_1.setIcon(icon74)
        self.menu_station_logos_play_now_on_deck_1.setObjectName("menu_station_logos_play_now_on_deck_1")
        self.menu_station_logos_play_now_on_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_station_logos_play_now_on_deck_2.setIcon(icon75)
        self.menu_station_logos_play_now_on_deck_2.setObjectName("menu_station_logos_play_now_on_deck_2")
        self.menu_station_logos_play_when_ready = QtWidgets.QAction(MainWindow)
        self.menu_station_logos_play_when_ready.setIcon(icon76)
        self.menu_station_logos_play_when_ready.setObjectName("menu_station_logos_play_when_ready")
        self.menu_station_logos_add_to_playlist_top = QtWidgets.QAction(MainWindow)
        self.menu_station_logos_add_to_playlist_top.setIcon(icon77)
        self.menu_station_logos_add_to_playlist_top.setObjectName("menu_station_logos_add_to_playlist_top")
        self.menu_station_logos_add_to_playlist_bottom = QtWidgets.QAction(MainWindow)
        self.menu_station_logos_add_to_playlist_bottom.setIcon(icon78)
        self.menu_station_logos_add_to_playlist_bottom.setObjectName("menu_station_logos_add_to_playlist_bottom")
        self.menu_station_logos_add_to_new_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_station_logos_add_to_new_scheduled_transmition.setIcon(icon79)
        self.menu_station_logos_add_to_new_scheduled_transmition.setObjectName("menu_station_logos_add_to_new_scheduled_transmition")
        self.menu_station_logos_add_to_existed_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_station_logos_add_to_existed_scheduled_transmition.setIcon(icon80)
        self.menu_station_logos_add_to_existed_scheduled_transmition.setObjectName("menu_station_logos_add_to_existed_scheduled_transmition")
        self.menu_greek_time_import = QtWidgets.QAction(MainWindow)
        self.menu_greek_time_import.setIcon(icon28)
        self.menu_greek_time_import.setObjectName("menu_greek_time_import")
        self.menu_greek_time_default = QtWidgets.QAction(MainWindow)
        self.menu_greek_time_default.setIcon(icon87)
        self.menu_greek_time_default.setObjectName("menu_greek_time_default")
        self.menu_greek_time_add_to_playlist = QtWidgets.QAction(MainWindow)
        self.menu_greek_time_add_to_playlist.setIcon(icon77)
        self.menu_greek_time_add_to_playlist.setObjectName("menu_greek_time_add_to_playlist")
        self.menu_greek_time_add_to_new_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_greek_time_add_to_new_scheduled_transmition.setIcon(icon79)
        self.menu_greek_time_add_to_new_scheduled_transmition.setObjectName("menu_greek_time_add_to_new_scheduled_transmition")
        self.menu_greek_time_add_to_existed_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_greek_time_add_to_existed_scheduled_transmition.setIcon(icon80)
        self.menu_greek_time_add_to_existed_scheduled_transmition.setObjectName("menu_greek_time_add_to_existed_scheduled_transmition")
        self.menu_greek_time_export = QtWidgets.QAction(MainWindow)
        self.menu_greek_time_export.setIcon(icon61)
        self.menu_greek_time_export.setObjectName("menu_greek_time_export")
        self.menu_greek_time_edit = QtWidgets.QAction(MainWindow)
        self.menu_greek_time_edit.setIcon(icon72)
        self.menu_greek_time_edit.setObjectName("menu_greek_time_edit")
        self.menu_greek_time_preview = QtWidgets.QAction(MainWindow)
        self.menu_greek_time_preview.setIcon(icon73)
        self.menu_greek_time_preview.setObjectName("menu_greek_time_preview")
        self.menu_greek_time_delete = QtWidgets.QAction(MainWindow)
        self.menu_greek_time_delete.setIcon(icon23)
        self.menu_greek_time_delete.setObjectName("menu_greek_time_delete")
        self.menu_church_news_import = QtWidgets.QAction(MainWindow)
        self.menu_church_news_import.setIcon(icon28)
        self.menu_church_news_import.setObjectName("menu_church_news_import")
        self.menu_church_news_export = QtWidgets.QAction(MainWindow)
        self.menu_church_news_export.setIcon(icon61)
        self.menu_church_news_export.setObjectName("menu_church_news_export")
        self.menu_church_news_edit = QtWidgets.QAction(MainWindow)
        self.menu_church_news_edit.setIcon(icon72)
        self.menu_church_news_edit.setObjectName("menu_church_news_edit")
        self.menu_church_news_preview = QtWidgets.QAction(MainWindow)
        self.menu_church_news_preview.setIcon(icon73)
        self.menu_church_news_preview.setObjectName("menu_church_news_preview")
        self.menu_church_news_delete = QtWidgets.QAction(MainWindow)
        self.menu_church_news_delete.setIcon(icon23)
        self.menu_church_news_delete.setObjectName("menu_church_news_delete")
        self.menu_church_news_play_now_on_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_church_news_play_now_on_deck_1.setIcon(icon74)
        self.menu_church_news_play_now_on_deck_1.setObjectName("menu_church_news_play_now_on_deck_1")
        self.menu_church_news_play_now_on_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_church_news_play_now_on_deck_2.setIcon(icon75)
        self.menu_church_news_play_now_on_deck_2.setObjectName("menu_church_news_play_now_on_deck_2")
        self.menu_church_news_play_when_ready = QtWidgets.QAction(MainWindow)
        self.menu_church_news_play_when_ready.setIcon(icon76)
        self.menu_church_news_play_when_ready.setObjectName("menu_church_news_play_when_ready")
        self.menu_news_play_now_on_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_news_play_now_on_deck_2.setIcon(icon75)
        self.menu_news_play_now_on_deck_2.setObjectName("menu_news_play_now_on_deck_2")
        self.menu_news_play_when_ready = QtWidgets.QAction(MainWindow)
        self.menu_news_play_when_ready.setIcon(icon76)
        self.menu_news_play_when_ready.setObjectName("menu_news_play_when_ready")
        self.menu_church_news_default = QtWidgets.QAction(MainWindow)
        self.menu_church_news_default.setIcon(icon87)
        self.menu_church_news_default.setObjectName("menu_church_news_default")
        self.menu_church_news_add_to_playlist_top = QtWidgets.QAction(MainWindow)
        self.menu_church_news_add_to_playlist_top.setIcon(icon77)
        self.menu_church_news_add_to_playlist_top.setObjectName("menu_church_news_add_to_playlist_top")
        self.menu_news_add_to_playlist_top = QtWidgets.QAction(MainWindow)
        self.menu_news_add_to_playlist_top.setIcon(icon77)
        self.menu_news_add_to_playlist_top.setObjectName("menu_news_add_to_playlist_top")
        self.menu_news_add_to_playlist_bottom = QtWidgets.QAction(MainWindow)
        self.menu_news_add_to_playlist_bottom.setIcon(icon78)
        self.menu_news_add_to_playlist_bottom.setObjectName("menu_news_add_to_playlist_bottom")
        self.menu_church_news_add_to_playlist_bottom = QtWidgets.QAction(MainWindow)
        self.menu_church_news_add_to_playlist_bottom.setIcon(icon78)
        self.menu_church_news_add_to_playlist_bottom.setObjectName("menu_church_news_add_to_playlist_bottom")
        self.menu_news_add_to_new_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_news_add_to_new_scheduled_transmition.setIcon(icon79)
        self.menu_news_add_to_new_scheduled_transmition.setObjectName("menu_news_add_to_new_scheduled_transmition")
        self.menu_news_add_to_existed_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_news_add_to_existed_scheduled_transmition.setIcon(icon80)
        self.menu_news_add_to_existed_scheduled_transmition.setObjectName("menu_news_add_to_existed_scheduled_transmition")
        self.menu_church_news_add_to_new_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_church_news_add_to_new_scheduled_transmition.setIcon(icon79)
        self.menu_church_news_add_to_new_scheduled_transmition.setObjectName("menu_church_news_add_to_new_scheduled_transmition")
        self.menu_church_news_add_to_existed_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_church_news_add_to_existed_scheduled_transmition.setIcon(icon80)
        self.menu_church_news_add_to_existed_scheduled_transmition.setObjectName("menu_church_news_add_to_existed_scheduled_transmition")
        self.menu_weather_news_import = QtWidgets.QAction(MainWindow)
        self.menu_weather_news_import.setIcon(icon28)
        self.menu_weather_news_import.setObjectName("menu_weather_news_import")
        self.menu_like_today_import = QtWidgets.QAction(MainWindow)
        self.menu_like_today_import.setIcon(icon28)
        self.menu_like_today_import.setObjectName("menu_like_today_import")
        self.menu_weather_news_default = QtWidgets.QAction(MainWindow)
        self.menu_weather_news_default.setIcon(icon87)
        self.menu_weather_news_default.setObjectName("menu_weather_news_default")
        self.menu_like_today_default = QtWidgets.QAction(MainWindow)
        self.menu_like_today_default.setIcon(icon87)
        self.menu_like_today_default.setObjectName("menu_like_today_default")
        self.menu_weather_news_export = QtWidgets.QAction(MainWindow)
        self.menu_weather_news_export.setIcon(icon61)
        self.menu_weather_news_export.setObjectName("menu_weather_news_export")
        self.menu_like_today_export = QtWidgets.QAction(MainWindow)
        self.menu_like_today_export.setIcon(icon61)
        self.menu_like_today_export.setObjectName("menu_like_today_export")
        self.menu_weather_news_edit = QtWidgets.QAction(MainWindow)
        self.menu_weather_news_edit.setIcon(icon72)
        self.menu_weather_news_edit.setObjectName("menu_weather_news_edit")
        self.menu_like_today_edit = QtWidgets.QAction(MainWindow)
        self.menu_like_today_edit.setIcon(icon72)
        self.menu_like_today_edit.setObjectName("menu_like_today_edit")
        self.menu_weather_news_preview = QtWidgets.QAction(MainWindow)
        self.menu_weather_news_preview.setIcon(icon73)
        self.menu_weather_news_preview.setObjectName("menu_weather_news_preview")
        self.menu_like_today_preview = QtWidgets.QAction(MainWindow)
        self.menu_like_today_preview.setIcon(icon73)
        self.menu_like_today_preview.setObjectName("menu_like_today_preview")
        self.menu_weather_news_delete = QtWidgets.QAction(MainWindow)
        self.menu_weather_news_delete.setIcon(icon23)
        self.menu_weather_news_delete.setObjectName("menu_weather_news_delete")
        self.menu_like_today_delete = QtWidgets.QAction(MainWindow)
        self.menu_like_today_delete.setIcon(icon23)
        self.menu_like_today_delete.setObjectName("menu_like_today_delete")
        self.menu_weather_news_play_now_on_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_weather_news_play_now_on_deck_1.setIcon(icon74)
        self.menu_weather_news_play_now_on_deck_1.setObjectName("menu_weather_news_play_now_on_deck_1")
        self.menu_like_today_play_now_on_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_like_today_play_now_on_deck_1.setIcon(icon74)
        self.menu_like_today_play_now_on_deck_1.setObjectName("menu_like_today_play_now_on_deck_1")
        self.menu_weather_news_play_now_on_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_weather_news_play_now_on_deck_2.setIcon(icon75)
        self.menu_weather_news_play_now_on_deck_2.setObjectName("menu_weather_news_play_now_on_deck_2")
        self.menu_like_today_play_now_on_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_like_today_play_now_on_deck_2.setIcon(icon75)
        self.menu_like_today_play_now_on_deck_2.setObjectName("menu_like_today_play_now_on_deck_2")
        self.menu_weather_news_play_when_ready = QtWidgets.QAction(MainWindow)
        self.menu_weather_news_play_when_ready.setIcon(icon76)
        self.menu_weather_news_play_when_ready.setObjectName("menu_weather_news_play_when_ready")
        self.menu_like_today_play_when_ready = QtWidgets.QAction(MainWindow)
        self.menu_like_today_play_when_ready.setIcon(icon76)
        self.menu_like_today_play_when_ready.setObjectName("menu_like_today_play_when_ready")
        self.menu_weather_news_add_to_player_list_top = QtWidgets.QAction(MainWindow)
        self.menu_weather_news_add_to_player_list_top.setIcon(icon77)
        self.menu_weather_news_add_to_player_list_top.setObjectName("menu_weather_news_add_to_player_list_top")
        self.menu_like_today_add_to_player_list_top = QtWidgets.QAction(MainWindow)
        self.menu_like_today_add_to_player_list_top.setIcon(icon77)
        self.menu_like_today_add_to_player_list_top.setObjectName("menu_like_today_add_to_player_list_top")
        self.menu_weather_news_add_to_player_list_bottom = QtWidgets.QAction(MainWindow)
        self.menu_weather_news_add_to_player_list_bottom.setIcon(icon78)
        self.menu_weather_news_add_to_player_list_bottom.setObjectName("menu_weather_news_add_to_player_list_bottom")
        self.menu_like_today_add_to_player_list_bottom = QtWidgets.QAction(MainWindow)
        self.menu_like_today_add_to_player_list_bottom.setIcon(icon78)
        self.menu_like_today_add_to_player_list_bottom.setObjectName("menu_like_today_add_to_player_list_bottom")
        self.menu_weather_news_add_to_new_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_weather_news_add_to_new_scheduled_transmition.setIcon(icon79)
        self.menu_weather_news_add_to_new_scheduled_transmition.setObjectName("menu_weather_news_add_to_new_scheduled_transmition")
        self.menu_like_today_add_to_new_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_like_today_add_to_new_scheduled_transmition.setIcon(icon79)
        self.menu_like_today_add_to_new_scheduled_transmition.setObjectName("menu_like_today_add_to_new_scheduled_transmition")
        self.menu_weather_news_add_to_existed_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_weather_news_add_to_existed_scheduled_transmition.setIcon(icon80)
        self.menu_weather_news_add_to_existed_scheduled_transmition.setObjectName("menu_weather_news_add_to_existed_scheduled_transmition")
        self.menu_like_today_add_to_existed_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_like_today_add_to_existed_scheduled_transmition.setIcon(icon80)
        self.menu_like_today_add_to_existed_scheduled_transmition.setObjectName("menu_like_today_add_to_existed_scheduled_transmition")
        self.menu_playlist_play_now = QtWidgets.QAction(MainWindow)
        icon88 = QtGui.QIcon()
        icon88.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/play-now.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_playlist_play_now.setIcon(icon88)
        self.menu_playlist_play_now.setObjectName("menu_playlist_play_now")
        self.menu_playlist_play_when_ready = QtWidgets.QAction(MainWindow)
        self.menu_playlist_play_when_ready.setIcon(icon76)
        self.menu_playlist_play_when_ready.setObjectName("menu_playlist_play_when_ready")
        self.menu_sound_clips_play_now = QtWidgets.QAction(MainWindow)
        self.menu_sound_clips_play_now.setIcon(icon88)
        self.menu_sound_clips_play_now.setObjectName("menu_sound_clips_play_now")
        self.menu_sound_clips_play_when_ready = QtWidgets.QAction(MainWindow)
        self.menu_sound_clips_play_when_ready.setIcon(icon76)
        self.menu_sound_clips_play_when_ready.setObjectName("menu_sound_clips_play_when_ready")
        self.menu_import_sound_file_from_sound_file = QtWidgets.QAction(MainWindow)
        self.menu_import_sound_file_from_sound_file.setIcon(icon27)
        self.menu_import_sound_file_from_sound_file.setObjectName("menu_import_sound_file_from_sound_file")
        self.menu_sound_file_load_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_sound_file_load_deck_1.setIcon(icon74)
        self.menu_sound_file_load_deck_1.setObjectName("menu_sound_file_load_deck_1")
        self.menu_sound_file_load_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_sound_file_load_deck_2.setIcon(icon75)
        self.menu_sound_file_load_deck_2.setObjectName("menu_sound_file_load_deck_2")
        self.menu_sound_file_load_available_deck = QtWidgets.QAction(MainWindow)
        self.menu_sound_file_load_available_deck.setIcon(icon76)
        self.menu_sound_file_load_available_deck.setObjectName("menu_sound_file_load_available_deck")
        self.menu_station_logo_load_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_station_logo_load_deck_1.setIcon(icon74)
        self.menu_station_logo_load_deck_1.setObjectName("menu_station_logo_load_deck_1")
        self.menu_station_logo_load_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_station_logo_load_deck_2.setIcon(icon75)
        self.menu_station_logo_load_deck_2.setObjectName("menu_station_logo_load_deck_2")
        self.menu_station_logo_load_available_deck = QtWidgets.QAction(MainWindow)
        self.menu_station_logo_load_available_deck.setIcon(icon76)
        self.menu_station_logo_load_available_deck.setObjectName("menu_station_logo_load_available_deck")
        self.menu_church_news_load_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_church_news_load_deck_1.setIcon(icon74)
        self.menu_church_news_load_deck_1.setObjectName("menu_church_news_load_deck_1")
        self.menu_church_news_load_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_church_news_load_deck_2.setIcon(icon75)
        self.menu_church_news_load_deck_2.setObjectName("menu_church_news_load_deck_2")
        self.menu_church_news_load_available_deck = QtWidgets.QAction(MainWindow)
        self.menu_church_news_load_available_deck.setIcon(icon76)
        self.menu_church_news_load_available_deck.setObjectName("menu_church_news_load_available_deck")
        self.menu_weather_news_load_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_weather_news_load_deck_1.setIcon(icon74)
        self.menu_weather_news_load_deck_1.setObjectName("menu_weather_news_load_deck_1")
        self.menu_like_today_load_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_like_today_load_deck_1.setIcon(icon74)
        self.menu_like_today_load_deck_1.setObjectName("menu_like_today_load_deck_1")
        self.menu_weather_news_load_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_weather_news_load_deck_2.setIcon(icon75)
        self.menu_weather_news_load_deck_2.setObjectName("menu_weather_news_load_deck_2")
        self.menu_like_today_load_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_like_today_load_deck_2.setIcon(icon75)
        self.menu_like_today_load_deck_2.setObjectName("menu_like_today_load_deck_2")
        self.menu_weather_news_load_available_deck = QtWidgets.QAction(MainWindow)
        self.menu_weather_news_load_available_deck.setIcon(icon76)
        self.menu_weather_news_load_available_deck.setObjectName("menu_weather_news_load_available_deck")
        self.menu_like_today_load_available_deck = QtWidgets.QAction(MainWindow)
        self.menu_like_today_load_available_deck.setIcon(icon76)
        self.menu_like_today_load_available_deck.setObjectName("menu_like_today_load_available_deck")
        self.menu_news_load_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_news_load_deck_1.setIcon(icon74)
        self.menu_news_load_deck_1.setObjectName("menu_news_load_deck_1")
        self.menu_news_load_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_news_load_deck_2.setIcon(icon75)
        self.menu_news_load_deck_2.setObjectName("menu_news_load_deck_2")
        self.menu_news_load_available_deck = QtWidgets.QAction(MainWindow)
        self.menu_news_load_available_deck.setIcon(icon76)
        self.menu_news_load_available_deck.setObjectName("menu_news_load_available_deck")
        self.menu_record_load_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_record_load_deck_1.setIcon(icon74)
        self.menu_record_load_deck_1.setObjectName("menu_record_load_deck_1")
        self.menu_record_load_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_record_load_deck_2.setIcon(icon75)
        self.menu_record_load_deck_2.setObjectName("menu_record_load_deck_2")
        self.menu_record_load_available_deck = QtWidgets.QAction(MainWindow)
        self.menu_record_load_available_deck.setIcon(icon76)
        self.menu_record_load_available_deck.setObjectName("menu_record_load_available_deck")
        self.menu_sound_clips_prepare = QtWidgets.QAction(MainWindow)
        self.menu_sound_clips_prepare.setIcon(icon60)
        self.menu_sound_clips_prepare.setObjectName("menu_sound_clips_prepare")
        self.menu_retransmitions_load_to_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_retransmitions_load_to_deck_1.setIcon(icon74)
        self.menu_retransmitions_load_to_deck_1.setObjectName("menu_retransmitions_load_to_deck_1")
        self.menu_retransmitions_load_to_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_retransmitions_load_to_deck_2.setIcon(icon75)
        self.menu_retransmitions_load_to_deck_2.setObjectName("menu_retransmitions_load_to_deck_2")
        self.menu_retransmitions_load_to_available_deck = QtWidgets.QAction(MainWindow)
        self.menu_retransmitions_load_to_available_deck.setIcon(icon76)
        self.menu_retransmitions_load_to_available_deck.setObjectName("menu_retransmitions_load_to_available_deck")
        self.menu_news_import = QtWidgets.QAction(MainWindow)
        self.menu_news_import.setIcon(icon28)
        self.menu_news_import.setObjectName("menu_news_import")
        self.menu_news_default = QtWidgets.QAction(MainWindow)
        self.menu_news_default.setIcon(icon87)
        self.menu_news_default.setObjectName("menu_news_default")
        self.menu_news_export = QtWidgets.QAction(MainWindow)
        self.menu_news_export.setIcon(icon61)
        self.menu_news_export.setObjectName("menu_news_export")
        self.menu_news_edit = QtWidgets.QAction(MainWindow)
        self.menu_news_edit.setIcon(icon72)
        self.menu_news_edit.setObjectName("menu_news_edit")
        self.menu_news_preview = QtWidgets.QAction(MainWindow)
        self.menu_news_preview.setIcon(icon73)
        self.menu_news_preview.setObjectName("menu_news_preview")
        self.menu_news_delete = QtWidgets.QAction(MainWindow)
        self.menu_news_delete.setIcon(icon23)
        self.menu_news_delete.setObjectName("menu_news_delete")
        self.menu_record_folder = QtWidgets.QAction(MainWindow)
        icon89 = QtGui.QIcon()
        icon89.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-3/folder.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_record_folder.setIcon(icon89)
        self.menu_record_folder.setObjectName("menu_record_folder")
        self.menu_record_export = QtWidgets.QAction(MainWindow)
        self.menu_record_export.setIcon(icon61)
        self.menu_record_export.setObjectName("menu_record_export")
        self.menu_record_edit = QtWidgets.QAction(MainWindow)
        self.menu_record_edit.setIcon(icon72)
        self.menu_record_edit.setObjectName("menu_record_edit")
        self.menu_record_preview = QtWidgets.QAction(MainWindow)
        self.menu_record_preview.setIcon(icon73)
        self.menu_record_preview.setObjectName("menu_record_preview")
        self.menu_record_delete = QtWidgets.QAction(MainWindow)
        self.menu_record_delete.setIcon(icon23)
        self.menu_record_delete.setObjectName("menu_record_delete")
        self.menu_ip_calls_active = QtWidgets.QAction(MainWindow)
        self.menu_ip_calls_active.setCheckable(True)
        self.menu_ip_calls_active.setChecked(True)
        self.menu_ip_calls_active.setObjectName("menu_ip_calls_active")
        self.menu_ip_calls_export = QtWidgets.QAction(MainWindow)
        self.menu_ip_calls_export.setIcon(icon61)
        self.menu_ip_calls_export.setObjectName("menu_ip_calls_export")
        self.menu_ip_calls_preview = QtWidgets.QAction(MainWindow)
        self.menu_ip_calls_preview.setIcon(icon73)
        self.menu_ip_calls_preview.setObjectName("menu_ip_calls_preview")
        self.menu_ip_calls_delete = QtWidgets.QAction(MainWindow)
        self.menu_ip_calls_delete.setIcon(icon23)
        self.menu_ip_calls_delete.setObjectName("menu_ip_calls_delete")
        self.menu_ip_calls_play_now_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_ip_calls_play_now_deck_1.setIcon(icon74)
        self.menu_ip_calls_play_now_deck_1.setObjectName("menu_ip_calls_play_now_deck_1")
        self.menu_ip_calls_play_now_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_ip_calls_play_now_deck_2.setIcon(icon75)
        self.menu_ip_calls_play_now_deck_2.setObjectName("menu_ip_calls_play_now_deck_2")
        self.menu_ip_calls_play_when_ready = QtWidgets.QAction(MainWindow)
        self.menu_ip_calls_play_when_ready.setIcon(icon76)
        self.menu_ip_calls_play_when_ready.setObjectName("menu_ip_calls_play_when_ready")
        self.menu_ip_calls_load_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_ip_calls_load_deck_1.setIcon(icon74)
        self.menu_ip_calls_load_deck_1.setObjectName("menu_ip_calls_load_deck_1")
        self.menu_ip_calls_load_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_ip_calls_load_deck_2.setIcon(icon75)
        self.menu_ip_calls_load_deck_2.setObjectName("menu_ip_calls_load_deck_2")
        self.menu_ip_calls_load_available_deck = QtWidgets.QAction(MainWindow)
        self.menu_ip_calls_load_available_deck.setIcon(icon76)
        self.menu_ip_calls_load_available_deck.setObjectName("menu_ip_calls_load_available_deck")
        self.menu_ip_calls_add_to_player_list_top = QtWidgets.QAction(MainWindow)
        self.menu_ip_calls_add_to_player_list_top.setIcon(icon77)
        self.menu_ip_calls_add_to_player_list_top.setObjectName("menu_ip_calls_add_to_player_list_top")
        self.menu_ip_calls_add_to_player_list_bottom = QtWidgets.QAction(MainWindow)
        self.menu_ip_calls_add_to_player_list_bottom.setIcon(icon78)
        self.menu_ip_calls_add_to_player_list_bottom.setObjectName("menu_ip_calls_add_to_player_list_bottom")
        self.menu_ip_calls_add_to_new_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_ip_calls_add_to_new_scheduled_transmition.setIcon(icon79)
        self.menu_ip_calls_add_to_new_scheduled_transmition.setObjectName("menu_ip_calls_add_to_new_scheduled_transmition")
        self.menu_ip_calls_add_to_existed_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_ip_calls_add_to_existed_scheduled_transmition.setIcon(icon80)
        self.menu_ip_calls_add_to_existed_scheduled_transmition.setObjectName("menu_ip_calls_add_to_existed_scheduled_transmition")
        self.menu_new_radio_station = QtWidgets.QAction(MainWindow)
        self.menu_new_radio_station.setIcon(icon28)
        self.menu_new_radio_station.setObjectName("menu_new_radio_station")
        self.menu_edit_radio_station = QtWidgets.QAction(MainWindow)
        self.menu_edit_radio_station.setIcon(icon72)
        self.menu_edit_radio_station.setObjectName("menu_edit_radio_station")
        self.menu_delete_radio_station = QtWidgets.QAction(MainWindow)
        self.menu_delete_radio_station.setIcon(icon23)
        self.menu_delete_radio_station.setObjectName("menu_delete_radio_station")
        self.menu_new_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_new_scheduled_transmition.setIcon(icon28)
        self.menu_new_scheduled_transmition.setObjectName("menu_new_scheduled_transmition")
        self.menu_edit_scheduled_transmition_2 = QtWidgets.QAction(MainWindow)
        self.menu_edit_scheduled_transmition_2.setIcon(icon72)
        self.menu_edit_scheduled_transmition_2.setObjectName("menu_edit_scheduled_transmition_2")
        self.menu_delete_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_delete_scheduled_transmition.setIcon(icon23)
        self.menu_delete_scheduled_transmition.setObjectName("menu_delete_scheduled_transmition")
        self.menu_manage_transmitions = QtWidgets.QAction(MainWindow)
        icon90 = QtGui.QIcon()
        icon90.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-2/start-transmition.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_manage_transmitions.setIcon(icon90)
        self.menu_manage_transmitions.setObjectName("menu_manage_transmitions")
        self.menu_record_import = QtWidgets.QAction(MainWindow)
        self.menu_record_import.setIcon(icon28)
        self.menu_record_import.setObjectName("menu_record_import")
        self.menu_preview_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_preview_scheduled_transmition.setIcon(icon73)
        self.menu_preview_scheduled_transmition.setObjectName("menu_preview_scheduled_transmition")
        self.menu_daily_scheduled_transmitions = QtWidgets.QAction(MainWindow)
        icon91 = QtGui.QIcon()
        icon91.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-4/schedule.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_daily_scheduled_transmitions.setIcon(icon91)
        self.menu_daily_scheduled_transmitions.setObjectName("menu_daily_scheduled_transmitions")
        self.menu_import_sound_file_from_sound_video = QtWidgets.QAction(MainWindow)
        self.menu_import_sound_file_from_sound_video.setIcon(icon26)
        self.menu_import_sound_file_from_sound_video.setObjectName("menu_import_sound_file_from_sound_video")
        self.menu_news_play_now_on_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_news_play_now_on_deck_1.setIcon(icon74)
        self.menu_news_play_now_on_deck_1.setObjectName("menu_news_play_now_on_deck_1")
        self.action_open_manual = QtWidgets.QAction(MainWindow)
        self.action_open_manual.setIcon(icon64)
        self.action_open_manual.setObjectName("action_open_manual")
        self.action_program_abstract_information = QtWidgets.QAction(MainWindow)
        self.action_program_abstract_information.setIcon(icon65)
        self.action_program_abstract_information.setObjectName("action_program_abstract_information")
        self.action_contact = QtWidgets.QAction(MainWindow)
        self.action_contact.setIcon(icon66)
        self.action_contact.setObjectName("action_contact")
        self.action_change_theme = QtWidgets.QAction(MainWindow)
        self.action_change_theme.setIcon(icon67)
        self.action_change_theme.setObjectName("action_change_theme")
        self.action_main_player_list_visible_fields = QtWidgets.QAction(MainWindow)
        self.action_main_player_list_visible_fields.setIcon(icon68)
        self.action_main_player_list_visible_fields.setObjectName("action_main_player_list_visible_fields")
        self.action_program_components_visible = QtWidgets.QAction(MainWindow)
        self.action_program_components_visible.setIcon(icon69)
        self.action_program_components_visible.setObjectName("action_program_components_visible")
        self.action_scheduled_transmition_report = QtWidgets.QAction(MainWindow)
        self.action_scheduled_transmition_report.setIcon(icon83)
        self.action_scheduled_transmition_report.setObjectName("action_scheduled_transmition_report")
        self.action_weekly_program_report = QtWidgets.QAction(MainWindow)
        self.action_weekly_program_report.setIcon(icon84)
        self.action_weekly_program_report.setObjectName("action_weekly_program_report")
        self.action_deck_history_report = QtWidgets.QAction(MainWindow)
        self.action_deck_history_report.setIcon(icon85)
        self.action_deck_history_report.setObjectName("action_deck_history_report")
        self.action_listeners_statistics = QtWidgets.QAction(MainWindow)
        self.action_listeners_statistics.setIcon(icon86)
        self.action_listeners_statistics.setObjectName("action_listeners_statistics")
        self.action_show_daily_scheduled_transmitions = QtWidgets.QAction(MainWindow)
        self.action_show_daily_scheduled_transmitions.setIcon(icon91)
        self.action_show_daily_scheduled_transmitions.setObjectName("action_show_daily_scheduled_transmitions")
        self.action_start_record = QtWidgets.QAction(MainWindow)
        self.action_start_record.setIcon(icon14)
        self.action_start_record.setObjectName("action_start_record")
        self.action_pause_record = QtWidgets.QAction(MainWindow)
        self.action_pause_record.setIcon(icon15)
        self.action_pause_record.setObjectName("action_pause_record")
        self.action_stop_record = QtWidgets.QAction(MainWindow)
        self.action_stop_record.setIcon(icon16)
        self.action_stop_record.setObjectName("action_stop_record")
        self.action_show_record_files = QtWidgets.QAction(MainWindow)
        self.action_show_record_files.setIcon(icon89)
        self.action_show_record_files.setObjectName("action_show_record_files")
        self.action_manage_radio_connections = QtWidgets.QAction(MainWindow)
        self.action_manage_radio_connections.setIcon(icon90)
        self.action_manage_radio_connections.setObjectName("action_manage_radio_connections")
        self.action_available_for_ip_calls = QtWidgets.QAction(MainWindow)
        self.action_available_for_ip_calls.setCheckable(True)
        self.action_available_for_ip_calls.setChecked(True)
        self.action_available_for_ip_calls.setIcon(icon54)
        self.action_available_for_ip_calls.setObjectName("action_available_for_ip_calls")
        self.action_manage_output_devices = QtWidgets.QAction(MainWindow)
        self.action_manage_output_devices.setIcon(icon82)
        self.action_manage_output_devices.setObjectName("action_manage_output_devices")
        self.action_manage_input_device = QtWidgets.QAction(MainWindow)
        self.action_manage_input_device.setIcon(icon2)
        self.action_manage_input_device.setObjectName("action_manage_input_device")
        self.action_manage_proccesses = QtWidgets.QAction(MainWindow)
        self.action_manage_proccesses.setIcon(icon70)
        self.action_manage_proccesses.setObjectName("action_manage_proccesses")
        self.action_general_deck_play_previous = QtWidgets.QAction(MainWindow)
        self.action_general_deck_play_previous.setIcon(icon11)
        self.action_general_deck_play_previous.setObjectName("action_general_deck_play_previous")
        self.action_general_deck_play_or_pause = QtWidgets.QAction(MainWindow)
        self.action_general_deck_play_or_pause.setIcon(icon7)
        self.action_general_deck_play_or_pause.setObjectName("action_general_deck_play_or_pause")
        self.action_general_deck_stop = QtWidgets.QAction(MainWindow)
        self.action_general_deck_stop.setIcon(icon8)
        self.action_general_deck_stop.setObjectName("action_general_deck_stop")
        self.action_general_deck_play_next = QtWidgets.QAction(MainWindow)
        self.action_general_deck_play_next.setIcon(icon12)
        self.action_general_deck_play_next.setObjectName("action_general_deck_play_next")
        self.action_windows_volume = QtWidgets.QAction(MainWindow)
        self.action_windows_volume.setIcon(icon13)
        self.action_windows_volume.setObjectName("action_windows_volume")
        self.action_general_deck_volume = QtWidgets.QAction(MainWindow)
        self.action_general_deck_volume.setIcon(icon3)
        self.action_general_deck_volume.setObjectName("action_general_deck_volume")
        self.action_general_deck_pan = QtWidgets.QAction(MainWindow)
        self.action_general_deck_pan.setIcon(icon4)
        self.action_general_deck_pan.setObjectName("action_general_deck_pan")
        self.action_general_deck_normalize = QtWidgets.QAction(MainWindow)
        self.action_general_deck_normalize.setIcon(icon5)
        self.action_general_deck_normalize.setObjectName("action_general_deck_normalize")
        self.action_general_deck_filter = QtWidgets.QAction(MainWindow)
        self.action_general_deck_filter.setIcon(icon6)
        self.action_general_deck_filter.setObjectName("action_general_deck_filter")
        self.action_microphone_press_to_talk = QtWidgets.QAction(MainWindow)
        self.action_microphone_press_to_talk.setIcon(icon1)
        self.action_microphone_press_to_talk.setObjectName("action_microphone_press_to_talk")
        self.action_microphone_push_to_talk = QtWidgets.QAction(MainWindow)
        self.action_microphone_push_to_talk.setCheckable(True)
        self.action_microphone_push_to_talk.setIcon(icon2)
        self.action_microphone_push_to_talk.setObjectName("action_microphone_push_to_talk")
        self.action_microphone_volume = QtWidgets.QAction(MainWindow)
        self.action_microphone_volume.setIcon(icon3)
        self.action_microphone_volume.setObjectName("action_microphone_volume")
        self.action_microphone_pan = QtWidgets.QAction(MainWindow)
        self.action_microphone_pan.setIcon(icon4)
        self.action_microphone_pan.setObjectName("action_microphone_pan")
        self.action_microphone_normalize = QtWidgets.QAction(MainWindow)
        self.action_microphone_normalize.setIcon(icon5)
        self.action_microphone_normalize.setObjectName("action_microphone_normalize")
        self.action_microphone_filter = QtWidgets.QAction(MainWindow)
        self.action_microphone_filter.setIcon(icon6)
        self.action_microphone_filter.setObjectName("action_microphone_filter")
        self.action_go_to_page_1 = QtWidgets.QAction(MainWindow)
        self.action_go_to_page_1.setCheckable(True)
        self.action_go_to_page_1.setChecked(True)
        icon92 = QtGui.QIcon()
        icon92.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/screen-1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_go_to_page_1.setIcon(icon92)
        self.action_go_to_page_1.setObjectName("action_go_to_page_1")
        self.action_go_to_page_2 = QtWidgets.QAction(MainWindow)
        self.action_go_to_page_2.setCheckable(True)
        icon93 = QtGui.QIcon()
        icon93.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/screen-2.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_go_to_page_2.setIcon(icon93)
        self.action_go_to_page_2.setObjectName("action_go_to_page_2")
        self.action_go_to_page_3 = QtWidgets.QAction(MainWindow)
        self.action_go_to_page_3.setCheckable(True)
        icon94 = QtGui.QIcon()
        icon94.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/screen-3.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_go_to_page_3.setIcon(icon94)
        self.action_go_to_page_3.setObjectName("action_go_to_page_3")
        self.action_3 = QtWidgets.QAction(MainWindow)
        self.action_3.setIcon(icon28)
        self.action_3.setObjectName("action_3")
        self.action_4 = QtWidgets.QAction(MainWindow)
        self.action_4.setObjectName("action_4")
        self.action_5 = QtWidgets.QAction(MainWindow)
        self.action_5.setObjectName("action_5")
        self.action_6 = QtWidgets.QAction(MainWindow)
        self.action_6.setObjectName("action_6")
        self.action_7 = QtWidgets.QAction(MainWindow)
        self.action_7.setObjectName("action_7")
        self.action_8 = QtWidgets.QAction(MainWindow)
        self.action_8.setObjectName("action_8")
        self.action_9 = QtWidgets.QAction(MainWindow)
        self.action_9.setObjectName("action_9")
        self.action_10 = QtWidgets.QAction(MainWindow)
        self.action_10.setObjectName("action_10")
        self.action_12 = QtWidgets.QAction(MainWindow)
        self.action_12.setObjectName("action_12")
        self.menu_sport_news_import = QtWidgets.QAction(MainWindow)
        self.menu_sport_news_import.setIcon(icon28)
        self.menu_sport_news_import.setObjectName("menu_sport_news_import")
        self.menu_sport_news_default = QtWidgets.QAction(MainWindow)
        self.menu_sport_news_default.setIcon(icon87)
        self.menu_sport_news_default.setObjectName("menu_sport_news_default")
        self.menu_sport_news_export = QtWidgets.QAction(MainWindow)
        self.menu_sport_news_export.setIcon(icon61)
        self.menu_sport_news_export.setObjectName("menu_sport_news_export")
        self.menu_sport_news_edit = QtWidgets.QAction(MainWindow)
        self.menu_sport_news_edit.setIcon(icon72)
        self.menu_sport_news_edit.setObjectName("menu_sport_news_edit")
        self.menu_sport_news_preview = QtWidgets.QAction(MainWindow)
        self.menu_sport_news_preview.setIcon(icon73)
        self.menu_sport_news_preview.setObjectName("menu_sport_news_preview")
        self.menu_sport_news_delete = QtWidgets.QAction(MainWindow)
        self.menu_sport_news_delete.setIcon(icon23)
        self.menu_sport_news_delete.setObjectName("menu_sport_news_delete")
        self.menu_sport_news_play_now_on_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_sport_news_play_now_on_deck_1.setIcon(icon74)
        self.menu_sport_news_play_now_on_deck_1.setObjectName("menu_sport_news_play_now_on_deck_1")
        self.menu_sport_news_play_now_on_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_sport_news_play_now_on_deck_2.setIcon(icon75)
        self.menu_sport_news_play_now_on_deck_2.setObjectName("menu_sport_news_play_now_on_deck_2")
        self.menu_sport_news_play_when_ready = QtWidgets.QAction(MainWindow)
        self.menu_sport_news_play_when_ready.setIcon(icon76)
        self.menu_sport_news_play_when_ready.setObjectName("menu_sport_news_play_when_ready")
        self.menu_sport_news_load_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_sport_news_load_deck_1.setIcon(icon74)
        self.menu_sport_news_load_deck_1.setObjectName("menu_sport_news_load_deck_1")
        self.menu_sport_news_load_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_sport_news_load_deck_2.setIcon(icon75)
        self.menu_sport_news_load_deck_2.setObjectName("menu_sport_news_load_deck_2")
        self.menu_sport_news_load_available_deck = QtWidgets.QAction(MainWindow)
        self.menu_sport_news_load_available_deck.setIcon(icon76)
        self.menu_sport_news_load_available_deck.setObjectName("menu_sport_news_load_available_deck")
        self.menu_sport_news_add_to_playlist_top = QtWidgets.QAction(MainWindow)
        self.menu_sport_news_add_to_playlist_top.setIcon(icon77)
        self.menu_sport_news_add_to_playlist_top.setObjectName("menu_sport_news_add_to_playlist_top")
        self.menu_sport_news_add_to_playlist_bottom = QtWidgets.QAction(MainWindow)
        self.menu_sport_news_add_to_playlist_bottom.setIcon(icon78)
        self.menu_sport_news_add_to_playlist_bottom.setObjectName("menu_sport_news_add_to_playlist_bottom")
        self.menu_sport_news_add_to_new_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_sport_news_add_to_new_scheduled_transmition.setIcon(icon79)
        self.menu_sport_news_add_to_new_scheduled_transmition.setObjectName("menu_sport_news_add_to_new_scheduled_transmition")
        self.menu_sport_news_add_to_existed_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_sport_news_add_to_existed_scheduled_transmition.setIcon(icon80)
        self.menu_sport_news_add_to_existed_scheduled_transmition.setObjectName("menu_sport_news_add_to_existed_scheduled_transmition")
        self.menu_history_import = QtWidgets.QAction(MainWindow)
        self.menu_history_import.setIcon(icon28)
        self.menu_history_import.setObjectName("menu_history_import")
        self.menu_history_export = QtWidgets.QAction(MainWindow)
        self.menu_history_export.setIcon(icon61)
        self.menu_history_export.setObjectName("menu_history_export")
        self.menu_history_edit = QtWidgets.QAction(MainWindow)
        self.menu_history_edit.setIcon(icon72)
        self.menu_history_edit.setObjectName("menu_history_edit")
        self.menu_history_preview = QtWidgets.QAction(MainWindow)
        self.menu_history_preview.setIcon(icon73)
        self.menu_history_preview.setObjectName("menu_history_preview")
        self.menu_history_delete = QtWidgets.QAction(MainWindow)
        self.menu_history_delete.setIcon(icon23)
        self.menu_history_delete.setObjectName("menu_history_delete")
        self.menu_history_play_now_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_history_play_now_deck_1.setIcon(icon74)
        self.menu_history_play_now_deck_1.setObjectName("menu_history_play_now_deck_1")
        self.menu_history_play_now_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_history_play_now_deck_2.setIcon(icon75)
        self.menu_history_play_now_deck_2.setObjectName("menu_history_play_now_deck_2")
        self.menu_history_play_when_ready = QtWidgets.QAction(MainWindow)
        self.menu_history_play_when_ready.setIcon(icon76)
        self.menu_history_play_when_ready.setObjectName("menu_history_play_when_ready")
        self.menu_history_load_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_history_load_deck_1.setIcon(icon74)
        self.menu_history_load_deck_1.setObjectName("menu_history_load_deck_1")
        self.menu_history_load_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_history_load_deck_2.setIcon(icon75)
        self.menu_history_load_deck_2.setObjectName("menu_history_load_deck_2")
        self.menu_history_load_available_deck = QtWidgets.QAction(MainWindow)
        self.menu_history_load_available_deck.setIcon(icon76)
        self.menu_history_load_available_deck.setObjectName("menu_history_load_available_deck")
        self.menu_history_add_to_player_list_top = QtWidgets.QAction(MainWindow)
        self.menu_history_add_to_player_list_top.setIcon(icon77)
        self.menu_history_add_to_player_list_top.setObjectName("menu_history_add_to_player_list_top")
        self.menu_history_add_to_player_list_bottom = QtWidgets.QAction(MainWindow)
        self.menu_history_add_to_player_list_bottom.setIcon(icon78)
        self.menu_history_add_to_player_list_bottom.setObjectName("menu_history_add_to_player_list_bottom")
        self.menu_history_add_to_new_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_history_add_to_new_scheduled_transmition.setIcon(icon79)
        self.menu_history_add_to_new_scheduled_transmition.setObjectName("menu_history_add_to_new_scheduled_transmition")
        self.menu_history_add_to_existed_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_history_add_to_existed_scheduled_transmition.setIcon(icon80)
        self.menu_history_add_to_existed_scheduled_transmition.setObjectName("menu_history_add_to_existed_scheduled_transmition")
        self.menu_documentary_import = QtWidgets.QAction(MainWindow)
        self.menu_documentary_import.setIcon(icon28)
        self.menu_documentary_import.setObjectName("menu_documentary_import")
        self.menu_documentary_export = QtWidgets.QAction(MainWindow)
        self.menu_documentary_export.setIcon(icon61)
        self.menu_documentary_export.setObjectName("menu_documentary_export")
        self.menu_documentary_edit = QtWidgets.QAction(MainWindow)
        self.menu_documentary_edit.setIcon(icon72)
        self.menu_documentary_edit.setObjectName("menu_documentary_edit")
        self.menu_documentary_preview = QtWidgets.QAction(MainWindow)
        self.menu_documentary_preview.setIcon(icon73)
        self.menu_documentary_preview.setObjectName("menu_documentary_preview")
        self.menu_documentary_delete = QtWidgets.QAction(MainWindow)
        self.menu_documentary_delete.setIcon(icon23)
        self.menu_documentary_delete.setObjectName("menu_documentary_delete")
        self.menu_documentary_play_now_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_documentary_play_now_deck_1.setIcon(icon74)
        self.menu_documentary_play_now_deck_1.setObjectName("menu_documentary_play_now_deck_1")
        self.menu_documentary_play_now_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_documentary_play_now_deck_2.setIcon(icon75)
        self.menu_documentary_play_now_deck_2.setObjectName("menu_documentary_play_now_deck_2")
        self.menu_documentary_play_when_ready = QtWidgets.QAction(MainWindow)
        self.menu_documentary_play_when_ready.setIcon(icon76)
        self.menu_documentary_play_when_ready.setObjectName("menu_documentary_play_when_ready")
        self.menu_documentary_load_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_documentary_load_deck_1.setIcon(icon74)
        self.menu_documentary_load_deck_1.setObjectName("menu_documentary_load_deck_1")
        self.menu_documentary_load_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_documentary_load_deck_2.setIcon(icon75)
        self.menu_documentary_load_deck_2.setObjectName("menu_documentary_load_deck_2")
        self.menu_documentary_load_available_deck = QtWidgets.QAction(MainWindow)
        self.menu_documentary_load_available_deck.setIcon(icon76)
        self.menu_documentary_load_available_deck.setObjectName("menu_documentary_load_available_deck")
        self.menu_documentary_add_to_player_list_top = QtWidgets.QAction(MainWindow)
        self.menu_documentary_add_to_player_list_top.setIcon(icon77)
        self.menu_documentary_add_to_player_list_top.setObjectName("menu_documentary_add_to_player_list_top")
        self.menu_documentary_add_to_player_list_bottom = QtWidgets.QAction(MainWindow)
        self.menu_documentary_add_to_player_list_bottom.setIcon(icon78)
        self.menu_documentary_add_to_player_list_bottom.setObjectName("menu_documentary_add_to_player_list_bottom")
        self.menu_documentary_add_to_new_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_documentary_add_to_new_scheduled_transmition.setIcon(icon79)
        self.menu_documentary_add_to_new_scheduled_transmition.setObjectName("menu_documentary_add_to_new_scheduled_transmition")
        self.menu_documentary_add_to_existed_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_documentary_add_to_existed_scheduled_transmition.setIcon(icon80)
        self.menu_documentary_add_to_existed_scheduled_transmition.setObjectName("menu_documentary_add_to_existed_scheduled_transmition")
        self.menu_greek_lessons_import = QtWidgets.QAction(MainWindow)
        self.menu_greek_lessons_import.setIcon(icon28)
        self.menu_greek_lessons_import.setObjectName("menu_greek_lessons_import")
        self.menu_greek_lessons_export = QtWidgets.QAction(MainWindow)
        self.menu_greek_lessons_export.setIcon(icon61)
        self.menu_greek_lessons_export.setObjectName("menu_greek_lessons_export")
        self.menu_greek_lessons_edit = QtWidgets.QAction(MainWindow)
        self.menu_greek_lessons_edit.setIcon(icon72)
        self.menu_greek_lessons_edit.setObjectName("menu_greek_lessons_edit")
        self.menu_greek_lessons_preview = QtWidgets.QAction(MainWindow)
        self.menu_greek_lessons_preview.setIcon(icon73)
        self.menu_greek_lessons_preview.setObjectName("menu_greek_lessons_preview")
        self.menu_greek_lessons_delete = QtWidgets.QAction(MainWindow)
        self.menu_greek_lessons_delete.setIcon(icon23)
        self.menu_greek_lessons_delete.setObjectName("menu_greek_lessons_delete")
        self.menu_greek_lessons_play_now_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_greek_lessons_play_now_deck_1.setIcon(icon74)
        self.menu_greek_lessons_play_now_deck_1.setObjectName("menu_greek_lessons_play_now_deck_1")
        self.menu_greek_lessons_play_now_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_greek_lessons_play_now_deck_2.setIcon(icon75)
        self.menu_greek_lessons_play_now_deck_2.setObjectName("menu_greek_lessons_play_now_deck_2")
        self.menu_greek_lessons_play_when_ready = QtWidgets.QAction(MainWindow)
        self.menu_greek_lessons_play_when_ready.setIcon(icon76)
        self.menu_greek_lessons_play_when_ready.setObjectName("menu_greek_lessons_play_when_ready")
        self.menu_greek_lessons_load_deck_1 = QtWidgets.QAction(MainWindow)
        self.menu_greek_lessons_load_deck_1.setIcon(icon74)
        self.menu_greek_lessons_load_deck_1.setObjectName("menu_greek_lessons_load_deck_1")
        self.menu_greek_lessons_load_deck_2 = QtWidgets.QAction(MainWindow)
        self.menu_greek_lessons_load_deck_2.setIcon(icon75)
        self.menu_greek_lessons_load_deck_2.setObjectName("menu_greek_lessons_load_deck_2")
        self.menu_greek_lessons_load_available_deck = QtWidgets.QAction(MainWindow)
        self.menu_greek_lessons_load_available_deck.setIcon(icon76)
        self.menu_greek_lessons_load_available_deck.setObjectName("menu_greek_lessons_load_available_deck")
        self.menu_greek_lessons_add_to_player_list_top = QtWidgets.QAction(MainWindow)
        self.menu_greek_lessons_add_to_player_list_top.setIcon(icon77)
        self.menu_greek_lessons_add_to_player_list_top.setObjectName("menu_greek_lessons_add_to_player_list_top")
        self.menu_greek_lessons_add_to_player_list_bottom = QtWidgets.QAction(MainWindow)
        self.menu_greek_lessons_add_to_player_list_bottom.setIcon(icon78)
        self.menu_greek_lessons_add_to_player_list_bottom.setObjectName("menu_greek_lessons_add_to_player_list_bottom")
        self.menu_greek_lessons_add_to_new_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_greek_lessons_add_to_new_scheduled_transmition.setIcon(icon79)
        self.menu_greek_lessons_add_to_new_scheduled_transmition.setObjectName("menu_greek_lessons_add_to_new_scheduled_transmition")
        self.menu_greek_lessons_add_to_existed_scheduled_transmition = QtWidgets.QAction(MainWindow)
        self.menu_greek_lessons_add_to_existed_scheduled_transmition.setIcon(icon80)
        self.menu_greek_lessons_add_to_existed_scheduled_transmition.setObjectName("menu_greek_lessons_add_to_existed_scheduled_transmition")
        self.action_go_to_page_4 = QtWidgets.QAction(MainWindow)
        self.action_go_to_page_4.setCheckable(True)
        icon95 = QtGui.QIcon()
        icon95.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/screen-4.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_go_to_page_4.setIcon(icon95)
        self.action_go_to_page_4.setObjectName("action_go_to_page_4")
        self.action = QtWidgets.QAction(MainWindow)
        icon96 = QtGui.QIcon()
        icon96.addPixmap(QtGui.QPixmap(":/rest-icons/assets/icons/rest-icons/drag-and-drop.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action.setIcon(icon96)
        self.action.setObjectName("action")
        self.action_move_stacked_widgets_items = QtWidgets.QAction(MainWindow)
        self.action_move_stacked_widgets_items.setIcon(icon96)
        self.action_move_stacked_widgets_items.setObjectName("action_move_stacked_widgets_items")
        self.menu_select_camera = QtWidgets.QAction(MainWindow)
        icon97 = QtGui.QIcon()
        icon97.addPixmap(QtGui.QPixmap(":/menu-icons/assets/icons/menu-icons/menu-1/select-camera.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_select_camera.setIcon(icon97)
        self.menu_select_camera.setObjectName("menu_select_camera")
        self.action_select_camera = QtWidgets.QAction(MainWindow)
        self.action_select_camera.setIcon(icon97)
        self.action_select_camera.setObjectName("action_select_camera")
        self.menu_9.addAction(self.menu_sound_file_add_to_player_list_top)
        self.menu_9.addAction(self.menu_sound_file_add_to_player_list_bottom)
        self.menu_9.addSeparator()
        self.menu_9.addAction(self.menu_sound_file_add_to_new_scheduled_transmition)
        self.menu_9.addAction(self.menu_sound_file_add_to_existed_scheduled_transmition)
        self.menu_8.addAction(self.menu_sound_file_play_now_deck_1)
        self.menu_8.addAction(self.menu_sound_file_play_now_deck_2)
        self.menu_8.addAction(self.menu_sound_file_play_when_ready)
        self.menu_34.addAction(self.menu_import_sound_file_from_sound_file)
        self.menu_34.addAction(self.menu_import_sound_file_from_sound_video)
        self.menu_35.addAction(self.menu_sound_file_load_deck_1)
        self.menu_35.addAction(self.menu_sound_file_load_deck_2)
        self.menu_35.addAction(self.menu_sound_file_load_available_deck)
        self.menu_7.addAction(self.menu_34.menuAction())
        self.menu_7.addAction(self.menu_8.menuAction())
        self.menu_7.addAction(self.menu_35.menuAction())
        self.menu_7.addAction(self.menu_9.menuAction())
        self.menu_7.addAction(self.menu_sound_file_export)
        self.menu_7.addAction(self.menu_sound_file_edit)
        self.menu_7.addAction(self.menu_sound_file_preview)
        self.menu_7.addSeparator()
        self.menu_7.addAction(self.menu_sound_file_delete)
        self.menu_11.addAction(self.menu_playlist_add_to_playlist_top)
        self.menu_11.addAction(self.menu_playlist_add_to_playlist_bottom)
        self.menu_11.addSeparator()
        self.menu_11.addAction(self.menu_playlist_add_to_new_scheduled_transmition)
        self.menu_11.addAction(self.menu_playlist_add_to_existed_scheduled_transmition)
        self.menu_12.addAction(self.menu_playlist_export_as_playlist)
        self.menu_12.addAction(self.menu_playlist_export_as_sound_files)
        self.menu_32.addAction(self.menu_playlist_play_now)
        self.menu_32.addAction(self.menu_playlist_play_when_ready)
        self.menu_10.addAction(self.menu_playlist_import)
        self.menu_10.addAction(self.menu_playlist_create)
        self.menu_10.addAction(self.menu_32.menuAction())
        self.menu_10.addAction(self.menu_11.menuAction())
        self.menu_10.addAction(self.menu_12.menuAction())
        self.menu_10.addAction(self.menu_playlist_edit)
        self.menu_10.addAction(self.menu_playlist_preview)
        self.menu_10.addSeparator()
        self.menu_10.addAction(self.menu_playlist_delete)
        self.menu_13.addAction(self.menu_sound_clips_add_to_playlist_top)
        self.menu_13.addAction(self.menu_sound_clips_add_to_playlist_bottom)
        self.menu_13.addSeparator()
        self.menu_13.addAction(self.menu_sound_clips_add_to_new_scheduled_transmition)
        self.menu_13.addAction(self.menu_sound_clips_add_to_existed_scheduled_transmition)
        self.menu_33.addAction(self.menu_sound_clips_play_now)
        self.menu_33.addAction(self.menu_sound_clips_play_when_ready)
        self.menu_clips.addAction(self.menu_sound_clips_import)
        self.menu_clips.addAction(self.menu_33.menuAction())
        self.menu_clips.addAction(self.menu_sound_clips_prepare)
        self.menu_clips.addAction(self.menu_13.menuAction())
        self.menu_clips.addAction(self.menu_sound_clips_classification)
        self.menu_clips.addAction(self.menu_sound_clips_export)
        self.menu_clips.addAction(self.menu_sound_clips_edit)
        self.menu_clips.addAction(self.menu_sound_clips_preview)
        self.menu_clips.addSeparator()
        self.menu_clips.addAction(self.menu_sound_clips_delete)
        self.menu_14.addAction(self.menu_manage_output_devices)
        self.menu_14.addAction(self.menu_manage_input_device)
        self.menu_14.addAction(self.menu_select_camera)
        self.menu_16.addAction(self.menu_retransmitions_play_now_on_deck_1)
        self.menu_16.addAction(self.menu_retransmitions_play_now_on_deck_2)
        self.menu_16.addAction(self.menu_retransmitions_play_when_ready)
        self.menu_17.addAction(self.menu_retransmitions_add_to_player_list_top)
        self.menu_17.addAction(self.menu_retransmitions_add_to_player_list_bottom)
        self.menu_17.addSeparator()
        self.menu_17.addAction(self.menu_retransmitions_add_to_new_scheduled_transmition)
        self.menu_17.addAction(self.menu_retransmitions_add_to_existed_scheduled_transmition)
        self.menu_36.addAction(self.menu_retransmitions_load_to_deck_1)
        self.menu_36.addAction(self.menu_retransmitions_load_to_deck_2)
        self.menu_36.addAction(self.menu_retransmitions_load_to_available_deck)
        self.menu_15.addAction(self.menu_retransmitions_import)
        self.menu_15.addAction(self.menu_16.menuAction())
        self.menu_15.addAction(self.menu_36.menuAction())
        self.menu_15.addAction(self.menu_17.menuAction())
        self.menu_15.addAction(self.menu_retransmitions_edit)
        self.menu_15.addAction(self.menu_retransmitions_preview)
        self.menu_15.addAction(self.menu_retransmitions_export)
        self.menu_15.addSeparator()
        self.menu_15.addAction(self.menu_retransmitions_delete)
        self.menu_22.addAction(self.menu_station_logos_play_now_on_deck_1)
        self.menu_22.addAction(self.menu_station_logos_play_now_on_deck_2)
        self.menu_22.addAction(self.menu_station_logos_play_when_ready)
        self.menu_23.addAction(self.menu_station_logos_add_to_playlist_top)
        self.menu_23.addAction(self.menu_station_logos_add_to_playlist_bottom)
        self.menu_23.addSeparator()
        self.menu_23.addAction(self.menu_station_logos_add_to_new_scheduled_transmition)
        self.menu_23.addAction(self.menu_station_logos_add_to_existed_scheduled_transmition)
        self.menu_station_logo_35.addAction(self.menu_station_logo_load_deck_1)
        self.menu_station_logo_35.addAction(self.menu_station_logo_load_deck_2)
        self.menu_station_logo_35.addAction(self.menu_station_logo_load_available_deck)
        self.menu_21.addAction(self.menu_station_logos_import)
        self.menu_21.addAction(self.menu_22.menuAction())
        self.menu_21.addAction(self.menu_station_logo_35.menuAction())
        self.menu_21.addAction(self.menu_23.menuAction())
        self.menu_21.addAction(self.menu_station_logos_default)
        self.menu_21.addAction(self.menu_station_logos_export)
        self.menu_21.addAction(self.menu_station_logos_edit)
        self.menu_21.addAction(self.menu_station_logos_preview)
        self.menu_21.addSeparator()
        self.menu_21.addAction(self.menu_station_logos_delete)
        self.menu_25.addAction(self.menu_greek_time_add_to_playlist)
        self.menu_25.addSeparator()
        self.menu_25.addAction(self.menu_greek_time_add_to_new_scheduled_transmition)
        self.menu_25.addAction(self.menu_greek_time_add_to_existed_scheduled_transmition)
        self.menu_24.addAction(self.menu_greek_time_import)
        self.menu_24.addAction(self.menu_greek_time_default)
        self.menu_24.addAction(self.menu_25.menuAction())
        self.menu_24.addAction(self.menu_greek_time_export)
        self.menu_24.addAction(self.menu_greek_time_edit)
        self.menu_24.addAction(self.menu_greek_time_preview)
        self.menu_24.addSeparator()
        self.menu_24.addAction(self.menu_greek_time_delete)
        self.menu_27.addAction(self.menu_church_news_play_now_on_deck_1)
        self.menu_27.addAction(self.menu_church_news_play_now_on_deck_2)
        self.menu_27.addAction(self.menu_church_news_play_when_ready)
        self.menu_28.addAction(self.menu_church_news_add_to_playlist_top)
        self.menu_28.addAction(self.menu_church_news_add_to_playlist_bottom)
        self.menu_28.addSeparator()
        self.menu_28.addAction(self.menu_church_news_add_to_new_scheduled_transmition)
        self.menu_28.addAction(self.menu_church_news_add_to_existed_scheduled_transmition)
        self.menu_church_news_35.addAction(self.menu_church_news_load_deck_1)
        self.menu_church_news_35.addAction(self.menu_church_news_load_deck_2)
        self.menu_church_news_35.addAction(self.menu_church_news_load_available_deck)
        self.menu_26.addAction(self.menu_church_news_import)
        self.menu_26.addAction(self.menu_27.menuAction())
        self.menu_26.addAction(self.menu_church_news_35.menuAction())
        self.menu_26.addAction(self.menu_28.menuAction())
        self.menu_26.addAction(self.menu_church_news_default)
        self.menu_26.addAction(self.menu_church_news_export)
        self.menu_26.addAction(self.menu_church_news_edit)
        self.menu_26.addAction(self.menu_church_news_preview)
        self.menu_26.addSeparator()
        self.menu_26.addAction(self.menu_church_news_delete)
        self.menu_30.addAction(self.menu_weather_news_play_now_on_deck_1)
        self.menu_30.addAction(self.menu_weather_news_play_now_on_deck_2)
        self.menu_30.addAction(self.menu_weather_news_play_when_ready)
        self.menu_31.addAction(self.menu_weather_news_add_to_player_list_top)
        self.menu_31.addAction(self.menu_weather_news_add_to_player_list_bottom)
        self.menu_31.addSeparator()
        self.menu_31.addAction(self.menu_weather_news_add_to_new_scheduled_transmition)
        self.menu_31.addAction(self.menu_weather_news_add_to_existed_scheduled_transmition)
        self.menu_weather_news_35.addAction(self.menu_weather_news_load_deck_1)
        self.menu_weather_news_35.addAction(self.menu_weather_news_load_deck_2)
        self.menu_weather_news_35.addAction(self.menu_weather_news_load_available_deck)
        self.menu_29.addAction(self.menu_weather_news_import)
        self.menu_29.addAction(self.menu_30.menuAction())
        self.menu_29.addAction(self.menu_weather_news_35.menuAction())
        self.menu_29.addAction(self.menu_31.menuAction())
        self.menu_29.addAction(self.menu_weather_news_default)
        self.menu_29.addAction(self.menu_weather_news_export)
        self.menu_29.addAction(self.menu_weather_news_edit)
        self.menu_29.addAction(self.menu_weather_news_preview)
        self.menu_29.addSeparator()
        self.menu_29.addAction(self.menu_weather_news_delete)
        self.menu_30_1.addAction(self.menu_like_today_play_now_on_deck_1)
        self.menu_30_1.addAction(self.menu_like_today_play_now_on_deck_2)
        self.menu_30_1.addAction(self.menu_like_today_play_when_ready)
        self.menu_31_1.addAction(self.menu_like_today_add_to_player_list_top)
        self.menu_31_1.addAction(self.menu_like_today_add_to_player_list_bottom)
        self.menu_31_1.addSeparator()
        self.menu_31_1.addAction(self.menu_like_today_add_to_new_scheduled_transmition)
        self.menu_31_1.addAction(self.menu_like_today_add_to_existed_scheduled_transmition)
        self.menu_like_today_35.addAction(self.menu_like_today_load_deck_1)
        self.menu_like_today_35.addAction(self.menu_like_today_load_deck_2)
        self.menu_like_today_35.addAction(self.menu_like_today_load_available_deck)
        self.menu_like_today.addAction(self.menu_like_today_import)
        self.menu_like_today.addAction(self.menu_30_1.menuAction())
        self.menu_like_today.addAction(self.menu_like_today_35.menuAction())
        self.menu_like_today.addAction(self.menu_31_1.menuAction())
        self.menu_like_today.addAction(self.menu_like_today_default)
        self.menu_like_today.addAction(self.menu_like_today_export)
        self.menu_like_today.addAction(self.menu_like_today_edit)
        self.menu_like_today.addAction(self.menu_like_today_preview)
        self.menu_like_today.addSeparator()
        self.menu_like_today.addAction(self.menu_like_today_delete)
        self.menu_news_27.addAction(self.menu_news_play_now_on_deck_1)
        self.menu_news_27.addAction(self.menu_news_play_now_on_deck_2)
        self.menu_news_27.addAction(self.menu_news_play_when_ready)
        self.menu_news_28.addAction(self.menu_news_add_to_playlist_top)
        self.menu_news_28.addAction(self.menu_news_add_to_playlist_bottom)
        self.menu_news_28.addSeparator()
        self.menu_news_28.addAction(self.menu_news_add_to_new_scheduled_transmition)
        self.menu_news_28.addAction(self.menu_news_add_to_existed_scheduled_transmition)
        self.menu_news_35.addAction(self.menu_news_load_deck_1)
        self.menu_news_35.addAction(self.menu_news_load_deck_2)
        self.menu_news_35.addAction(self.menu_news_load_available_deck)
        self.menu_38.addAction(self.menu_news_import)
        self.menu_38.addAction(self.menu_news_27.menuAction())
        self.menu_38.addAction(self.menu_news_35.menuAction())
        self.menu_38.addAction(self.menu_news_28.menuAction())
        self.menu_38.addAction(self.menu_news_default)
        self.menu_38.addAction(self.menu_news_export)
        self.menu_38.addAction(self.menu_news_edit)
        self.menu_38.addAction(self.menu_news_preview)
        self.menu_38.addSeparator()
        self.menu_38.addAction(self.menu_news_delete)
        self.menu_5.addAction(self.menu_sport_news_play_now_on_deck_1)
        self.menu_5.addAction(self.menu_sport_news_play_now_on_deck_2)
        self.menu_5.addAction(self.menu_sport_news_play_when_ready)
        self.menu_6.addAction(self.menu_sport_news_load_deck_1)
        self.menu_6.addAction(self.menu_sport_news_load_deck_2)
        self.menu_6.addAction(self.menu_sport_news_load_available_deck)
        self.menu_45.addAction(self.menu_sport_news_add_to_playlist_top)
        self.menu_45.addAction(self.menu_sport_news_add_to_playlist_bottom)
        self.menu_45.addSeparator()
        self.menu_45.addAction(self.menu_sport_news_add_to_new_scheduled_transmition)
        self.menu_45.addAction(self.menu_sport_news_add_to_existed_scheduled_transmition)
        self.menu_3.addAction(self.menu_sport_news_import)
        self.menu_3.addAction(self.menu_5.menuAction())
        self.menu_3.addAction(self.menu_6.menuAction())
        self.menu_3.addAction(self.menu_45.menuAction())
        self.menu_3.addAction(self.menu_sport_news_default)
        self.menu_3.addAction(self.menu_sport_news_export)
        self.menu_3.addAction(self.menu_sport_news_edit)
        self.menu_3.addAction(self.menu_sport_news_preview)
        self.menu_3.addSeparator()
        self.menu_3.addAction(self.menu_sport_news_delete)
        self.menu_20.addAction(self.menu_21.menuAction())
        self.menu_20.addSeparator()
        self.menu_20.addAction(self.menu_24.menuAction())
        self.menu_20.addSeparator()
        self.menu_20.addAction(self.menu_26.menuAction())
        self.menu_20.addAction(self.menu_38.menuAction())
        self.menu_20.addAction(self.menu_29.menuAction())
        self.menu_20.addAction(self.menu_3.menuAction())
        self.menu_20.addSeparator()
        self.menu_20.addAction(self.menu_like_today.menuAction())
        self.menu_40.addAction(self.menu_ip_calls_play_now_deck_1)
        self.menu_40.addAction(self.menu_ip_calls_play_now_deck_2)
        self.menu_40.addAction(self.menu_ip_calls_play_when_ready)
        self.menu_41.addAction(self.menu_ip_calls_load_deck_1)
        self.menu_41.addAction(self.menu_ip_calls_load_deck_2)
        self.menu_41.addAction(self.menu_ip_calls_load_available_deck)
        self.menu_42.addAction(self.menu_ip_calls_add_to_player_list_top)
        self.menu_42.addAction(self.menu_ip_calls_add_to_player_list_bottom)
        self.menu_42.addSeparator()
        self.menu_42.addAction(self.menu_ip_calls_add_to_new_scheduled_transmition)
        self.menu_42.addAction(self.menu_ip_calls_add_to_existed_scheduled_transmition)
        self.menu_39.addAction(self.menu_ip_calls_active)
        self.menu_39.addSeparator()
        self.menu_39.addAction(self.menu_40.menuAction())
        self.menu_39.addAction(self.menu_41.menuAction())
        self.menu_39.addAction(self.menu_42.menuAction())
        self.menu_39.addAction(self.menu_ip_calls_export)
        self.menu_39.addAction(self.menu_ip_calls_preview)
        self.menu_39.addSeparator()
        self.menu_39.addAction(self.menu_ip_calls_delete)
        self.menu_47.addAction(self.menu_history_play_now_deck_1)
        self.menu_47.addAction(self.menu_history_play_now_deck_2)
        self.menu_47.addAction(self.menu_history_play_when_ready)
        self.menu_48.addAction(self.menu_history_load_deck_1)
        self.menu_48.addAction(self.menu_history_load_deck_2)
        self.menu_48.addAction(self.menu_history_load_available_deck)
        self.menu_49.addAction(self.menu_history_add_to_player_list_top)
        self.menu_49.addAction(self.menu_history_add_to_player_list_bottom)
        self.menu_49.addSeparator()
        self.menu_49.addAction(self.menu_history_add_to_new_scheduled_transmition)
        self.menu_49.addAction(self.menu_history_add_to_existed_scheduled_transmition)
        self.menu_100.addAction(self.menu_history_import)
        self.menu_100.addAction(self.menu_47.menuAction())
        self.menu_100.addAction(self.menu_48.menuAction())
        self.menu_100.addAction(self.menu_49.menuAction())
        self.menu_100.addAction(self.menu_history_export)
        self.menu_100.addAction(self.menu_history_edit)
        self.menu_100.addAction(self.menu_history_preview)
        self.menu_100.addSeparator()
        self.menu_100.addAction(self.menu_history_delete)
        self.menu_50.addAction(self.menu_documentary_play_now_deck_1)
        self.menu_50.addAction(self.menu_documentary_play_now_deck_2)
        self.menu_50.addAction(self.menu_documentary_play_when_ready)
        self.menu_51.addAction(self.menu_documentary_load_deck_1)
        self.menu_51.addAction(self.menu_documentary_load_deck_2)
        self.menu_51.addAction(self.menu_documentary_load_available_deck)
        self.menu_52.addAction(self.menu_documentary_add_to_player_list_top)
        self.menu_52.addAction(self.menu_documentary_add_to_player_list_bottom)
        self.menu_52.addSeparator()
        self.menu_52.addAction(self.menu_documentary_add_to_new_scheduled_transmition)
        self.menu_52.addAction(self.menu_documentary_add_to_existed_scheduled_transmition)
        self.menu_46.addAction(self.menu_documentary_import)
        self.menu_46.addAction(self.menu_50.menuAction())
        self.menu_46.addAction(self.menu_51.menuAction())
        self.menu_46.addAction(self.menu_52.menuAction())
        self.menu_46.addAction(self.menu_documentary_export)
        self.menu_46.addAction(self.menu_documentary_edit)
        self.menu_46.addAction(self.menu_documentary_preview)
        self.menu_46.addSeparator()
        self.menu_46.addAction(self.menu_documentary_delete)
        self.menu_54.addAction(self.menu_greek_lessons_play_now_deck_1)
        self.menu_54.addAction(self.menu_greek_lessons_play_now_deck_2)
        self.menu_54.addAction(self.menu_greek_lessons_play_when_ready)
        self.menu_55.addAction(self.menu_greek_lessons_load_deck_1)
        self.menu_55.addAction(self.menu_greek_lessons_load_deck_2)
        self.menu_55.addAction(self.menu_greek_lessons_load_available_deck)
        self.menu_56.addAction(self.menu_greek_lessons_add_to_player_list_top)
        self.menu_56.addAction(self.menu_greek_lessons_add_to_player_list_bottom)
        self.menu_56.addSeparator()
        self.menu_56.addAction(self.menu_greek_lessons_add_to_new_scheduled_transmition)
        self.menu_56.addAction(self.menu_greek_lessons_add_to_existed_scheduled_transmition)
        self.menu_53.addAction(self.menu_greek_lessons_import)
        self.menu_53.addAction(self.menu_54.menuAction())
        self.menu_53.addAction(self.menu_55.menuAction())
        self.menu_53.addAction(self.menu_56.menuAction())
        self.menu_53.addAction(self.menu_greek_lessons_export)
        self.menu_53.addAction(self.menu_greek_lessons_edit)
        self.menu_53.addAction(self.menu_greek_lessons_preview)
        self.menu_53.addSeparator()
        self.menu_53.addAction(self.menu_greek_lessons_delete)
        self.menu.addAction(self.menu_7.menuAction())
        self.menu.addAction(self.menu_10.menuAction())
        self.menu.addAction(self.menu_clips.menuAction())
        self.menu.addSeparator()
        self.menu.addAction(self.menu_15.menuAction())
        self.menu.addSeparator()
        self.menu.addAction(self.menu_20.menuAction())
        self.menu.addSeparator()
        self.menu.addAction(self.menu_100.menuAction())
        self.menu.addAction(self.menu_46.menuAction())
        self.menu.addAction(self.menu_53.menuAction())
        self.menu.addSeparator()
        self.menu.addAction(self.menu_39.menuAction())
        self.menu.addSeparator()
        self.menu.addAction(self.menu_14.menuAction())
        self.menu.addSeparator()
        self.menu.addAction(self.menu_manage_tasks)
        self.menu.addSeparator()
        self.menu.addAction(self.menu_save_and_exit)
        self.menu_2.addAction(self.menu_choose_theme)
        self.menu_2.addAction(self.action)
        self.menu_4.addAction(self.menu_manual)
        self.menu_4.addAction(self.menu_abstract_information)
        self.menu_4.addAction(self.menu_contact)
        self.menu_19.addAction(self.menu_report_scheduled_transmition)
        self.menu_19.addAction(self.menu_report_week_programm)
        self.menu_19.addAction(self.menu_report_general_deck_history)
        self.menu_19.addAction(self.menu_report_listeners_statistics)
        self.menu_record_8.addAction(self.menu_record_play_now_deck_1)
        self.menu_record_8.addAction(self.menu_record_play_now_deck_2)
        self.menu_record_8.addAction(self.menu_record_play_when_ready)
        self.menu_record_35.addAction(self.menu_record_load_deck_1)
        self.menu_record_35.addAction(self.menu_record_load_deck_2)
        self.menu_record_35.addAction(self.menu_record_load_available_deck)
        self.menu_record_9.addAction(self.menu_record_add_to_player_list_top)
        self.menu_record_9.addAction(self.menu_record_add_to_player_list_bottom)
        self.menu_record_9.addSeparator()
        self.menu_record_9.addAction(self.menu_record_add_to_new_scheduled_transmition)
        self.menu_record_9.addAction(self.menu_record_add_to_existed_scheduled_transmition)
        self.menu_37.addAction(self.menu_record_folder)
        self.menu_37.addSeparator()
        self.menu_37.addAction(self.menu_record_import)
        self.menu_37.addAction(self.menu_record_8.menuAction())
        self.menu_37.addAction(self.menu_record_35.menuAction())
        self.menu_37.addAction(self.menu_record_9.menuAction())
        self.menu_37.addAction(self.menu_record_export)
        self.menu_37.addAction(self.menu_record_edit)
        self.menu_37.addAction(self.menu_record_preview)
        self.menu_37.addSeparator()
        self.menu_37.addAction(self.menu_record_delete)
        self.menu_18.addAction(self.menu_record_start)
        self.menu_18.addAction(self.menu_record_pause)
        self.menu_18.addAction(self.menu_record_stop)
        self.menu_18.addSeparator()
        self.menu_18.addAction(self.menu_37.menuAction())
        self.menu_43.addAction(self.menu_new_radio_station)
        self.menu_43.addAction(self.menu_edit_radio_station)
        self.menu_43.addAction(self.menu_delete_radio_station)
        self.menu_43.addSeparator()
        self.menu_43.addAction(self.menu_manage_transmitions)
        self.menu_44.addAction(self.menu_new_scheduled_transmition)
        self.menu_44.addAction(self.menu_edit_scheduled_transmition_2)
        self.menu_44.addAction(self.menu_preview_scheduled_transmition)
        self.menu_44.addSeparator()
        self.menu_44.addAction(self.menu_daily_scheduled_transmitions)
        self.menu_44.addSeparator()
        self.menu_44.addAction(self.menu_delete_scheduled_transmition)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_43.menuAction())
        self.menubar.addAction(self.menu_18.menuAction())
        self.menubar.addAction(self.menu_44.menuAction())
        self.menubar.addAction(self.menu_19.menuAction())
        self.menubar.addAction(self.menu_2.menuAction())
        self.menubar.addAction(self.menu_4.menuAction())
        self.toolBar.addAction(self.action_go_to_page_1)
        self.toolBar.addAction(self.action_go_to_page_2)
        self.toolBar.addAction(self.action_go_to_page_3)
        self.toolBar.addAction(self.action_go_to_page_4)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_available_for_ip_calls)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_manage_output_devices)
        self.toolBar.addAction(self.action_manage_input_device)
        self.toolBar.addAction(self.action_select_camera)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_manage_proccesses)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_manage_radio_connections)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_start_record)
        self.toolBar.addAction(self.action_pause_record)
        self.toolBar.addAction(self.action_stop_record)
        self.toolBar.addAction(self.action_show_record_files)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_show_daily_scheduled_transmitions)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_scheduled_transmition_report)
        self.toolBar.addAction(self.action_weekly_program_report)
        self.toolBar.addAction(self.action_deck_history_report)
        self.toolBar.addAction(self.action_listeners_statistics)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_change_theme)
        self.toolBar.addAction(self.action_move_stacked_widgets_items)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_open_manual)
        self.toolBar.addAction(self.action_program_abstract_information)
        self.toolBar.addAction(self.action_contact)

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(0)
        self.page_3_stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.deck_1_play_or_pause, self.deck_1_stop)
        MainWindow.setTabOrder(self.deck_1_stop, self.deck_1_volume)
        MainWindow.setTabOrder(self.deck_1_volume, self.deck_1_pan)
        MainWindow.setTabOrder(self.deck_1_pan, self.deck_1_normalize)
        MainWindow.setTabOrder(self.deck_1_normalize, self.deck_1_filter)
        MainWindow.setTabOrder(self.deck_1_filter, self.deck_1_timeslider)
        MainWindow.setTabOrder(self.deck_1_timeslider, self.general_deck_play_previous)
        MainWindow.setTabOrder(self.general_deck_play_previous, self.general_deck_play_or_pause)
        MainWindow.setTabOrder(self.general_deck_play_or_pause, self.general_deck_application_volume)
        MainWindow.setTabOrder(self.general_deck_application_volume, self.general_deck_pan)
        MainWindow.setTabOrder(self.general_deck_pan, self.general_deck_normalize)
        MainWindow.setTabOrder(self.general_deck_normalize, self.general_deck_filter)
        MainWindow.setTabOrder(self.general_deck_filter, self.deck_2_play_or_pause)
        MainWindow.setTabOrder(self.deck_2_play_or_pause, self.deck_2_stop)
        MainWindow.setTabOrder(self.deck_2_stop, self.deck_2_volume)
        MainWindow.setTabOrder(self.deck_2_volume, self.deck_2_pan)
        MainWindow.setTabOrder(self.deck_2_pan, self.deck_2_normalize)
        MainWindow.setTabOrder(self.deck_2_normalize, self.deck_2_filter)
        MainWindow.setTabOrder(self.deck_2_filter, self.deck_2_timeslider)
        MainWindow.setTabOrder(self.deck_2_timeslider, self.speackers_deck_click_to_talk)
        MainWindow.setTabOrder(self.speackers_deck_click_to_talk, self.speackers_deck_hold_to_talk)
        MainWindow.setTabOrder(self.speackers_deck_hold_to_talk, self.speackers_deck_volume)
        MainWindow.setTabOrder(self.speackers_deck_volume, self.speackers_deck_pan)
        MainWindow.setTabOrder(self.speackers_deck_pan, self.speackers_deck_normalize)
        MainWindow.setTabOrder(self.speackers_deck_normalize, self.speackers_deck_filter)
        MainWindow.setTabOrder(self.speackers_deck_filter, self.music_clip_deck_play_or_pause)
        MainWindow.setTabOrder(self.music_clip_deck_play_or_pause, self.music_clip_deck_stop)
        MainWindow.setTabOrder(self.music_clip_deck_stop, self.music_clip_deck_volume)
        MainWindow.setTabOrder(self.music_clip_deck_volume, self.music_clip_deck_pan)
        MainWindow.setTabOrder(self.music_clip_deck_pan, self.music_clip_deck_normalize)
        MainWindow.setTabOrder(self.music_clip_deck_normalize, self.music_clip_deck_filter)
        MainWindow.setTabOrder(self.music_clip_deck_filter, self.music_clip_deck_timeslider)
        MainWindow.setTabOrder(self.music_clip_deck_timeslider, self.music_clip_3)
        MainWindow.setTabOrder(self.music_clip_3, self.music_clip_4)
        MainWindow.setTabOrder(self.music_clip_4, self.music_clip_2)
        MainWindow.setTabOrder(self.music_clip_2, self.music_clip_1)
        MainWindow.setTabOrder(self.music_clip_1, self.music_clip_5)
        MainWindow.setTabOrder(self.music_clip_5, self.music_clip_6)
        MainWindow.setTabOrder(self.music_clip_6, self.music_clip_7)
        MainWindow.setTabOrder(self.music_clip_7, self.music_clip_8)
        MainWindow.setTabOrder(self.music_clip_8, self.music_clip_9)
        MainWindow.setTabOrder(self.music_clip_9, self.music_clip_10)
        MainWindow.setTabOrder(self.music_clip_10, self.record_deck_filename_lineEdit)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Web Radio Studio"))
        MainWindow.setStatusTip(_translate("MainWindow", "Τίτλος αρχείου ή αναμετάδοσης"))
        self.speackers_deck_title.setText(_translate("MainWindow", "Speackers deck"))
        self.speackers_deck_time_label.setStatusTip(_translate("MainWindow", "Διάρκεια στην οποία το μικρόφωνο είναι ενεργό"))
        self.speackers_deck_time_label.setText(_translate("MainWindow", "00:00:00"))
        self.speackers_deck_timeline_container_frame.setStatusTip(_translate("MainWindow", "Κυματισμός έντασης ήχου στο μικρόφωνο"))
        self.speackers_deck_click_to_talk.setStatusTip(_translate("MainWindow", "Πατήστε μία φορά για να μιλήσετε από το μικρόφνο"))
        self.speackers_deck_click_to_talk.setText(_translate("MainWindow", "Πατήστε μία φορά για να μιλήσετε"))
        self.speackers_deck_hold_to_talk.setStatusTip(_translate("MainWindow", "Πιέστε παρατεταμένα για να μιλήσετε από το μικρόφωνο"))
        self.speackers_deck_hold_to_talk.setText(_translate("MainWindow", "Πιέστε παρατεταμένα για να μιλήσετε"))
        self.speackers_deck_volume.setStatusTip(_translate("MainWindow", "Ρύθμιση έντασης ήχου (ενίσχυση) μικροφώνου"))
        self.speackers_deck_pan.setStatusTip(_translate("MainWindow", "Ρύθμιση στερεοφωνικής ισοστάθμισης μικροφώνου"))
        self.speackers_deck_normalize.setStatusTip(_translate("MainWindow", "Ρύθμιση κανονικοποίησης έντασης ήχου μικροφώνου"))
        self.speackers_deck_filter.setStatusTip(_translate("MainWindow", "Εφαρμογή ζωνοπερατού φίλτρου στον ήχο από το μικρόφωνο"))
        self.deck_1_label_name.setStatusTip(_translate("MainWindow", "Τίτλος αρχείου ήχου ή αναμετάδοσης στο deck 1"))
        self.deck_1_label_name.setText(_translate("MainWindow", "Deck 1: Αναστάσιμο ήχος Ά - Του λίθου σφραγισθέντος"))
        self.deck_1_timeline_container_frame.setStatusTip(_translate("MainWindow", "Κυματισμός έντασης ήχου στο deck 1"))
        self.deck_1_timeline_pick_frame.setStatusTip(_translate("MainWindow", "Κυματισμός έντασης ήχου στο deck 1"))
        self.deck_1_play_or_pause.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ή παύση αρχείου ή αναμετάδοσης στο deck 1. Πατήστε για ...."))
        self.deck_1_stop.setStatusTip(_translate("MainWindow", "Παύση αρχείου ήχου ή αναμετάδοσης στο deck 1"))
        self.deck_1_volume.setStatusTip(_translate("MainWindow", "Ρύθμιση έντασης ήχου στο deck 1"))
        self.deck_1_pan.setStatusTip(_translate("MainWindow", "Στερεοφωνική ισοστάθμιση αρχείου ήχου ή αναμετάδοσης στο deck 1"))
        self.deck_1_normalize.setStatusTip(_translate("MainWindow", "Κανονικοποίηση έντασης αρχείου ήχου ή αναμετάδοσης για αποφυγή μεγάλων διακυμάνσεων στο deck 1"))
        self.deck_1_filter.setStatusTip(_translate("MainWindow", "Εφαρμογή ζωνοπερατού φίλτρου στο αρχείο ήχου ή την αναμετάδοση του deck 1"))
        self.deck_1_timeslider.setStatusTip(_translate("MainWindow", "Μπάρα που απεικονίζει τις μεταβολές της διάρκειας του αρχείου ήχου ή της αναμετάδοσης στο deck 1"))
        self.deck_1_duration.setStatusTip(_translate("MainWindow", "Τρέχων και συνολική διάρκεια αρχείου ήχου ή αναμετάδοσης στο deck 1"))
        self.deck_1_duration.setText(_translate("MainWindow", "00:00:00/00:01:00"))
        self.deck_2_label_name.setStatusTip(_translate("MainWindow", "Τίτλος αρχείου ήχου ή αναμετάδοσης στο deck 2"))
        self.deck_2_label_name.setText(_translate("MainWindow", "Deck 2: Αναστάσιμο ήχος Ά - Του λίθου σφραγισθέντος"))
        self.deck_2_timeline_container_frame.setStatusTip(_translate("MainWindow", "Κυματισμός έντασης ήχου στο deck 2"))
        self.deck_2_timeline_pick_frame.setStatusTip(_translate("MainWindow", "Κυματισμός έντασης ήχου στο deck 2"))
        self.deck_2_play_or_pause.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ή παύση αρχείου ή αναμετάδοσης στο deck 2. Πατήστε για ...."))
        self.deck_2_stop.setStatusTip(_translate("MainWindow", "Παύση αρχείου ήχου ή αναμετάδοσης στο deck 2"))
        self.deck_2_volume.setStatusTip(_translate("MainWindow", "Ρύθμιση έντασης ήχου στο deck 2"))
        self.deck_2_pan.setStatusTip(_translate("MainWindow", "Στερεοφωνική ισοστάθμιση αρχείου ήχου ή αναμετάδοσης στο deck 2"))
        self.deck_2_normalize.setStatusTip(_translate("MainWindow", "Κανονικοποίηση έντασης αρχείου ήχου ή αναμετάδοσης για αποφυγή μεγάλων διακυμάνσεων στο deck 2"))
        self.deck_2_filter.setStatusTip(_translate("MainWindow", "Εφαρμογή ζωνοπερατού φίλτρου στο αρχείο ήχου ή την αναμετάδοση του deck 2"))
        self.deck_2_timeslider.setStatusTip(_translate("MainWindow", "Μπάρα που απεικονίζει τις μεταβολές της διάρκειας του αρχείου ήχου ή της αναμετάδοσης στο deck 1"))
        self.deck_2_duration.setStatusTip(_translate("MainWindow", "Τρέχων και συνολική διάρκεια αρχείου ήχου ή αναμετάδοσης στο deck 2"))
        self.deck_2_duration.setText(_translate("MainWindow", "00:00:00/00:01:00"))
        self.label_4.setStatusTip(_translate("MainWindow", "Πλήθος ακροατών (αθροιστικά από όλες τις ραδιοφωνικές συνδέσεις)"))
        self.label_4.setText(_translate("MainWindow", "Πλήθος ενεργών συνδέσεων: 0"))
        self.label_2.setStatusTip(_translate("MainWindow", "Πλήθος ακροατών (αθροιστικά από όλες τις ραδιοφωνικές συνδέσεις)"))
        self.label_2.setText(_translate("MainWindow", "Σύνολο ακροατών:"))
        self.label_3.setStatusTip(_translate("MainWindow", "Ποσοστό χρήσης κεντρικής μονάδας επεξεργασίας"))
        self.label_3.setText(_translate("MainWindow", "CPU:"))
        self.label.setStatusTip(_translate("MainWindow", "Τρέχουσα ημερομηνία και ώρα συστήματος"))
        self.label_5.setStatusTip(_translate("MainWindow", "Ποσοστό χρήσης μνήμης RAM"))
        self.label_5.setText(_translate("MainWindow", "RAM:"))
        self.general_deck_play_or_pause.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ή παύση όλων. Πατήστε για ..."))
        self.general_deck_play_previous.setStatusTip(_translate("MainWindow", "Αναπαραγωγή προηγουμένου"))
        self.general_deck_application_volume.setStatusTip(_translate("MainWindow", "Ρύθμιση έντασης ήχου τελικού σήματος"))
        self.general_deck_normalize.setStatusTip(_translate("MainWindow", "Κανονικοποίηση τελικού σήματος εξόδου"))
        self.general_deck_filter.setStatusTip(_translate("MainWindow", "Εφαρμογή ζωνοπερατού φίλτρου τελικού σήματος εξόδου"))
        self.general_deck_pan.setStatusTip(_translate("MainWindow", "Στερεοφωνική ισοστάθμιση τελικού σήματος εξόδου"))
        self.general_deck_play_next.setStatusTip(_translate("MainWindow", "Αναπαραγωγή επόμενου"))
        self.general_deck_windows_volume.setStatusTip(_translate("MainWindow", "Ρύθμιση έντασης ήχου Windows (τοπικά)"))
        self.general_deck_stop.setStatusTip(_translate("MainWindow", "Διακοπή όλων"))
        self.music_clip_deck_label_name.setText(_translate("MainWindow", "Music clip deck:"))
        self.music_clip_deck_title.setStatusTip(_translate("MainWindow", "Τίτλος ηχητικού clip"))
        self.music_clip_deck_title.setText(_translate("MainWindow", "Αναστάσιμο ήχος Ά - Του λίθου σφραγισθέντος"))
        self.music_clip_deck_timeline_container_frame.setStatusTip(_translate("MainWindow", "Κυματισμός έντασης ήχου στο music clip deck"))
        self.music_clip_deck_timeline_pick_frame.setStatusTip(_translate("MainWindow", "Κυματισμός έντασης ήχου στο music clip deck"))
        self.music_clip_deck_play_or_pause.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ή παύση ηχητικού clip στο music clip deck. Πατήστε για ...."))
        self.music_clip_deck_stop.setStatusTip(_translate("MainWindow", "Παύση ηχητιού clip στο music clip deck"))
        self.music_clip_deck_volume.setStatusTip(_translate("MainWindow", "Ρύθμιση έντασης ήχου στο deck 1"))
        self.music_clip_deck_pan.setStatusTip(_translate("MainWindow", "Στερεοφωνική ισοστάθμιση αρχείου ήχου ή αναμετάδοσης στο deck 1"))
        self.music_clip_deck_normalize.setStatusTip(_translate("MainWindow", "Κανονικοποίηση έντασης αρχείου ήχου ή αναμετάδοσης για αποφυγή μεγάλων διακυμάνσεων στο deck 1"))
        self.music_clip_deck_filter.setStatusTip(_translate("MainWindow", "Εφαρμογή ζωνοπερατού φίλτρου στο αρχείο ήχου ή την αναμετάδοση του deck 1"))
        self.music_clip_deck_timeslider.setStatusTip(_translate("MainWindow", "Μπάρα που απεικονίζει τις μεταβολές της διάρκειας του ηχητικού clip στο music clip deck"))
        self.music_clip_deck_duration.setStatusTip(_translate("MainWindow", "Τρέχων και συνολική διάρκεια ηχητικού clip στο music clip deck"))
        self.music_clip_deck_duration.setText(_translate("MainWindow", "00:00:00/00:01:00"))
        self.music_clip_1.setStatusTip(_translate("MainWindow", "Πατήστε για αναπαραγωγή του ηχητικού clip με τίτλο: ........."))
        self.music_clip_1.setText(_translate("MainWindow", "Music clip 1"))
        self.music_clip_2.setStatusTip(_translate("MainWindow", "Πατήστε για αναπαραγωγή του ηχητικού clip με τίτλο: ........."))
        self.music_clip_2.setText(_translate("MainWindow", "Music clip 2"))
        self.music_clip_3.setStatusTip(_translate("MainWindow", "Πατήστε για αναπαραγωγή του ηχητικού clip με τίτλο: ........."))
        self.music_clip_3.setText(_translate("MainWindow", "Music clip 3"))
        self.music_clip_4.setStatusTip(_translate("MainWindow", "Πατήστε για αναπαραγωγή του ηχητικού clip με τίτλο: ........."))
        self.music_clip_4.setText(_translate("MainWindow", "Music clip 4"))
        self.music_clip_5.setStatusTip(_translate("MainWindow", "Πατήστε για αναπαραγωγή του ηχητικού clip με τίτλο: ........."))
        self.music_clip_5.setText(_translate("MainWindow", "Music clip 5"))
        self.music_clip_6.setStatusTip(_translate("MainWindow", "Πατήστε για αναπαραγωγή του ηχητικού clip με τίτλο: ........."))
        self.music_clip_6.setText(_translate("MainWindow", "Music clip 6"))
        self.music_clip_7.setStatusTip(_translate("MainWindow", "Πατήστε για αναπαραγωγή του ηχητικού clip με τίτλο: ........."))
        self.music_clip_7.setText(_translate("MainWindow", "Music clip 7"))
        self.music_clip_8.setStatusTip(_translate("MainWindow", "Πατήστε για αναπαραγωγή του ηχητικού clip με τίτλο: ........."))
        self.music_clip_8.setText(_translate("MainWindow", "Music clip 8"))
        self.music_clip_9.setStatusTip(_translate("MainWindow", "Πατήστε για αναπαραγωγή του ηχητικού clip με τίτλο: ........."))
        self.music_clip_9.setText(_translate("MainWindow", "Music clip 9"))
        self.music_clip_10.setStatusTip(_translate("MainWindow", "Πατήστε για αναπαραγωγή του ηχητικού clip με τίτλο: ........."))
        self.music_clip_10.setText(_translate("MainWindow", "Music clip 10"))
        self.music_clip_11.setStatusTip(_translate("MainWindow", "Πατήστε για αναπαραγωγή του ηχητικού clip με τίτλο: ........."))
        self.music_clip_11.setText(_translate("MainWindow", "Music clip 11"))
        self.music_clip_12.setStatusTip(_translate("MainWindow", "Πατήστε για αναπαραγωγή του ηχητικού clip με τίτλο: ........."))
        self.music_clip_12.setText(_translate("MainWindow", "Music clip 12"))
        self.music_clip_13.setStatusTip(_translate("MainWindow", "Πατήστε για αναπαραγωγή του ηχητικού clip με τίτλο: ........."))
        self.music_clip_13.setText(_translate("MainWindow", "Music clip 13"))
        self.music_clip_14.setStatusTip(_translate("MainWindow", "Πατήστε για αναπαραγωγή του ηχητικού clip με τίτλο: ........."))
        self.music_clip_14.setText(_translate("MainWindow", "Music clip 14"))
        self.music_clip_15.setStatusTip(_translate("MainWindow", "Πατήστε για αναπαραγωγή του ηχητικού clip με τίτλο: ........."))
        self.music_clip_15.setText(_translate("MainWindow", "Music clip 15"))
        self.music_clip_16.setStatusTip(_translate("MainWindow", "Πατήστε για αναπαραγωγή του ηχητικού clip με τίτλο: ........."))
        self.music_clip_16.setText(_translate("MainWindow", "Music clip 16"))
        self.music_clip_17.setStatusTip(_translate("MainWindow", "Πατήστε για αναπαραγωγή του ηχητικού clip με τίτλο: ........."))
        self.music_clip_17.setText(_translate("MainWindow", "Music clip 17"))
        self.music_clip_18.setStatusTip(_translate("MainWindow", "Πατήστε για αναπαραγωγή του ηχητικού clip με τίτλο: ........."))
        self.music_clip_18.setText(_translate("MainWindow", "Music clip 18"))
        self.music_clip_19.setStatusTip(_translate("MainWindow", "Πατήστε για αναπαραγωγή του ηχητικού clip με τίτλο: ........."))
        self.music_clip_19.setText(_translate("MainWindow", "Music clip 19"))
        self.music_clip_20.setStatusTip(_translate("MainWindow", "Πατήστε για αναπαραγωγή του ηχητικού clip με τίτλο: ........."))
        self.music_clip_20.setText(_translate("MainWindow", "Music clip 20"))
        self.record_deck_label_name.setText(_translate("MainWindow", "Recording:"))
        self.record_deck_filename_lineEdit.setStatusTip(_translate("MainWindow", "Πληκτρολογήστε εδώ τον τίτλο του αρχείου ήχου ηχογράφησης"))
        self.record_deck_filename_lineEdit.setPlaceholderText(_translate("MainWindow", "Πληκτρολογήστε εδώ τον τίτλο του αρχείου ηχογράφησης"))
        self.record_deck_start.setStatusTip(_translate("MainWindow", "Πατήστε εδώ για έναρξη της ηχογράφησης (απαιτείτε να έχει συμπληρωθεί ο τίτλος του αρχείου ηχογράφησης)"))
        self.record_deck_start.setText(_translate("MainWindow", "Έναρξη ηχογράφησης"))
        self.record_deck_pause.setStatusTip(_translate("MainWindow", "Πατήστε εδώ για παύση της ηχογράφησης"))
        self.record_deck_pause.setText(_translate("MainWindow", "Παύση ηχογράφησης"))
        self.record_deck_stop.setStatusTip(_translate("MainWindow", "Πατήστε εδώ για λήξη της ηχογράφησης"))
        self.record_deck_stop.setText(_translate("MainWindow", "Τερματισμός ηχογράφησης"))
        self.local_video_title_label.setStatusTip(_translate("MainWindow", "Όνομα και επώνυμο ακροατή με τον οποίο πραγματοποιείτε η τηλεφωνική κλήση 1"))
        self.local_video_title_label.setText(_translate("MainWindow", "Video από τοπική camera"))
        self.local_video_time_label.setStatusTip(_translate("MainWindow", "Διάρκεια τηλεφωνικής κλήσης 1"))
        self.local_video_time_label.setText(_translate("MainWindow", "00:00:00"))
        self.local_video_call_timeline_container_frame.setStatusTip(_translate("MainWindow", "Κυματισμός έντασης ήχου μικροφώνου"))
        self.local_video_call_timeline_pick_frame.setStatusTip(_translate("MainWindow", "Κυματισμός έντασης ήχου μικροφώνου"))
        self.local_video_label.setStatusTip(_translate("MainWindow", "Video από τοπική camera"))
        self.local_video_pan.setStatusTip(_translate("MainWindow", "Στερεοφωνική ισοστάθμιση μικροφώνου"))
        self.local_video_volume.setStatusTip(_translate("MainWindow", "Ρύθμιση έντασης ήχου μικροφώνου"))
        self.local_video_filter.setStatusTip(_translate("MainWindow", "Εφαρμογή ζωνοπερατού φίλτρου στο σήμα του μικροφώνου"))
        self.local_video_normalize.setStatusTip(_translate("MainWindow", "Κανονικοποίηση έντασης μικροφώνου για αποφυγή μεγάλων διακυμάνσεων"))
        self.ip_call_1_title_label.setStatusTip(_translate("MainWindow", "Όνομα και επώνυμο ακροατή με τον οποίο πραγματοποιείτε η τηλεφωνική κλήση 1"))
        self.ip_call_1_title_label.setText(_translate("MainWindow", "Όνομα - Επώνυμο"))
        self.ip_call_1_time_label.setStatusTip(_translate("MainWindow", "Διάρκεια τηλεφωνικής κλήσης 1"))
        self.ip_call_1_time_label.setText(_translate("MainWindow", "00:00:00"))
        self.ip_call_1_video_label.setStatusTip(_translate("MainWindow", "Video ακροατή για την τηλεφωνική κλήση 1"))
        self.ip_call_1_timeline_container_frame.setStatusTip(_translate("MainWindow", "Κυματισμός έντασης ήχου στην τηλεφωνική κλήση 1 (single-signal)"))
        self.ip_call_1_timeline_pick_frame.setStatusTip(_translate("MainWindow", "Κυματισμός έντασης ήχου στην τηλεφωνική κλήση 1 (single-signal)"))
        self.ip_call_1_volume.setStatusTip(_translate("MainWindow", "Ρύθμιση έντασης ήχου για την τηλεφωνική κλήση 1"))
        self.ip_call_1_forward_call.setStatusTip(_translate("MainWindow", "Απάντηση και ταυτόχρονα εκτροπή κλήσης στον αέρα, ή απλά εκτροπή κλήση και στους υπόλοιπους ακροατές εφόσον η κλήση έχει απαντηθεί (για την τηλεφωνική κλήση 1)"))
        self.ip_call_1_normalize.setStatusTip(_translate("MainWindow", "Κανονικοποίηση έντασης τηλεφωνικής κλήσης 1 για αποφυγή μεγάλων διακυμάνσεων"))
        self.ip_call_1_filter.setStatusTip(_translate("MainWindow", "Εφαρμογή ζωνοπερατού φίλτρου στο σήμα της τηλεφωνικής κλήσης 1"))
        self.ip_call_1_pan.setStatusTip(_translate("MainWindow", "Στερεοφωνική ισοστάθμιση τηλεφωνικής κλήσης 1"))
        self.ip_call_1_dismiss.setStatusTip(_translate("MainWindow", "Απόρριψη τηλεφωνικής κλήσης 1"))
        self.ip_call_2_timeline_container_frame.setStatusTip(_translate("MainWindow", "Κυματισμός έντασης ήχου στην τηλεφωνική κλήση 2 (single-signal)"))
        self.ip_call_2_timeline_pick_frame.setStatusTip(_translate("MainWindow", "Κυματισμός έντασης ήχου στην τηλεφωνική κλήση 2 (single-signal)"))
        self.ip_call_2_title_label.setStatusTip(_translate("MainWindow", "Όνομα και επώνυμο ακροατή με τον οποίο πραγματοποιείτε η τηλεφωνική κλήση 2"))
        self.ip_call_2_title_label.setText(_translate("MainWindow", "Όνομα - Επώνυμο"))
        self.ip_call_2_time_label.setStatusTip(_translate("MainWindow", "Διάρκεια τηλεφωνικής κλήσης 2"))
        self.ip_call_2_time_label.setText(_translate("MainWindow", "00:00:00"))
        self.ip_call_2_video_label.setStatusTip(_translate("MainWindow", "Video ακροατή για την τηλεφωνική κλήση 2"))
        self.ip_call_2_volume.setStatusTip(_translate("MainWindow", "Ρύθμιση έντασης ήχου για την τηλεφωνική κλήση 2"))
        self.ip_call_2_forward_call.setStatusTip(_translate("MainWindow", "Απάντηση και ταυτόχρονα εκτροπή κλήσης στον αέρα, ή απλά εκτροπή κλήση και στους υπόλοιπους ακροατές εφόσον η κλήση έχει απαντηθεί (για την τηλεφωνική κλήση 2)"))
        self.ip_call_2_normalize.setStatusTip(_translate("MainWindow", "Κανονικοποίηση έντασης τηλεφωνικής κλήσης 2 για αποφυγή μεγάλων διακυμάνσεων"))
        self.ip_call_2_pan.setStatusTip(_translate("MainWindow", "Στερεοφωνική ισοστάθμιση τηλεφωνικής κλήσης 2"))
        self.ip_call_2_filter.setStatusTip(_translate("MainWindow", "Εφαρμογή ζωνοπερατού φίλτρου στο σήμα της τηλεφωνικής κλήσης 2"))
        self.ip_call_2_dismiss.setStatusTip(_translate("MainWindow", "Απόρριψη τηλεφωνικής κλήσης 2"))
        self.ip_call_3_timeline_container_frame.setStatusTip(_translate("MainWindow", "Κυματισμός έντασης ήχου στην τηλεφωνική κλήση 3 (single-signal)"))
        self.ip_call_3_timeline_pick_frame.setStatusTip(_translate("MainWindow", "Κυματισμός έντασης ήχου στην τηλεφωνική κλήση 3 (single-signal)"))
        self.ip_call_3_title_label.setStatusTip(_translate("MainWindow", "Όνομα και επώνυμο ακροατή με τον οποίο πραγματοποιείτε η τηλεφωνική κλήση 3"))
        self.ip_call_3_title_label.setText(_translate("MainWindow", "Όνομα - Επώνυμο"))
        self.ip_call_3_time_label.setStatusTip(_translate("MainWindow", "Διάρκεια τηλεφωνικής κλήσης 3"))
        self.ip_call_3_time_label.setText(_translate("MainWindow", "00:00:00"))
        self.ip_call_3_video_label.setStatusTip(_translate("MainWindow", "Video ακροατή για την τηλεφωνική κλήση 3"))
        self.ip_call_3_filter.setStatusTip(_translate("MainWindow", "Εφαρμογή ζωνοπερατού φίλτρου στο σήμα της τηλεφωνικής κλήσης 3"))
        self.ip_call_3_volume.setStatusTip(_translate("MainWindow", "Ρύθμιση έντασης ήχου για την τηλεφωνική κλήση 3"))
        self.ip_call_3_pan.setStatusTip(_translate("MainWindow", "Στερεοφωνική ισοστάθμιση τηλεφωνικής κλήσης 3"))
        self.ip_call_3_forward_call.setStatusTip(_translate("MainWindow", "Απάντηση και ταυτόχρονα εκτροπή κλήσης στον αέρα, ή απλά εκτροπή κλήση και στους υπόλοιπους ακροατές εφόσον η κλήση έχει απαντηθεί (για την τηλεφωνική κλήση 3)"))
        self.ip_call_3_normalize.setStatusTip(_translate("MainWindow", "Κανονικοποίηση έντασης τηλεφωνικής κλήσης 3 για αποφυγή μεγάλων διακυμάνσεων"))
        self.ip_call_3_dismiss.setStatusTip(_translate("MainWindow", "Απόρριψη τηλεφωνικής κλήσης 3"))
        self.label_10.setText(_translate("MainWindow", "Διαδικτυακές κλήσεις video"))
        self.navigate_previous.setStatusTip(_translate("MainWindow", "Μετάβαση πίσω"))
        self.navigate_next.setStatusTip(_translate("MainWindow", "Μετάβαση μπροστά"))
        self.navigate_history.setStatusTip(_translate("MainWindow", "Μετάβαση στο ιστορικό πλοήγησης"))
        self.navigate_home.setStatusTip(_translate("MainWindow", "Μετάβαση στην αρχική"))
        self.navigation_lineedit.setStatusTip(_translate("MainWindow", "Διαδρομή"))
        self.navigation_lineedit.setText(_translate("MainWindow", "• Αρχική"))
        self.navigation_search.setStatusTip(_translate("MainWindow", "Αναζήτηση σε ..."))
        self.navigation_search.setPlaceholderText(_translate("MainWindow", "Αναζήτηση σε ..."))
        self.blank_page.setStatusTip(_translate("MainWindow", "Κεντρική σελίδα"))
        self.page_3_blank_page.setStatusTip(_translate("MainWindow", "Κεντρική σελίδα"))
        self.player_list_tree_page.setStatusTip(_translate("MainWindow", "Σελίδα με τα περιεχόμενα της κεντρικής λίστας αναπαραγωγής και διάφορες επιλογές της"))
        self.player_list_delete_all.setStatusTip(_translate("MainWindow", "Αφαίρεση όλων των δεδομένων από την κεντρική λίστα αναπαραγωγής"))
        self.player_list_delete_all.setText(_translate("MainWindow", "Άδειασμα"))
        self.player_list_auto_dj_checkbox.setStatusTip(_translate("MainWindow", "Ενεργοποίηση αυτόματου dj"))
        self.player_list_auto_dj_checkbox.setText(_translate("MainWindow", "Auto dj"))
        self.player_list_fade_out.setStatusTip(_translate("MainWindow", "Εφέ fade out κατά το κλείσιμο κάποιο ηχητικού αρχείου"))
        self.player_list_fade_out.setText(_translate("MainWindow", "Fade out"))
        self.player_list_fade_in.setStatusTip(_translate("MainWindow", "Εφέ fade in κατά το κλείσιμο κάποιο ηχητικού αρχείου"))
        self.player_list_fade_in.setText(_translate("MainWindow", "Fade in"))
        self.player_list_repeat_checkbox.setStatusTip(_translate("MainWindow", "Επιλέξτε έτσι ώστε όταν τερματιστεί η αναπαραγωγή κάποιου αρχείου αυτόματα να εισάγετε στο τέλος της κεντρικής λίστας αναπαραγωγής"))
        self.player_list_repeat_checkbox.setText(_translate("MainWindow", "Επανάληψη"))
        self.is_live_checkbox.setStatusTip(_translate("MainWindow", "Επιλέξτε εφόσον το τωρινό πρόγραμμα είναι ζωντανή εκπομπή"))
        self.is_live_checkbox.setText(_translate("MainWindow", "Live"))
        self.player_list_fade_now.setText(_translate("MainWindow", "Fade now"))
        self.auto_dj_skip_next.setText(_translate("MainWindow", "Παράλλειψη επόμενου"))
        self.main_player_list_treeWidget.setStatusTip(_translate("MainWindow", "Δενδρική λίστα με τα περιεχόμενα της κεντρικής λίστας αναπαραγωγής"))
        self.main_player_list_treeWidget.headerItem().setText(0, _translate("MainWindow", "Α/Α"))
        self.main_player_list_treeWidget.headerItem().setText(1, _translate("MainWindow", "Είδος"))
        self.main_player_list_treeWidget.headerItem().setText(2, _translate("MainWindow", "Τίτλος"))
        self.main_player_list_treeWidget.headerItem().setText(3, _translate("MainWindow", "Διάρκεια"))
        self.main_player_list_treeWidget.headerItem().setText(4, _translate("MainWindow", "Πλήθος επαναλήψεων"))
        self.main_player_list_treeWidget.headerItem().setText(5, _translate("MainWindow", "Υπόλοιπο επαναλήψεων"))
        self.sound_file_page.setStatusTip(_translate("MainWindow", "Περιεχόμενα και επιλογές που αφορούν αρχεία ήχου"))
        self.sound_file_import_from_video.setStatusTip(_translate("MainWindow", "Εισαγωγή αρχείου ήχου από video"))
        self.sound_file_import_from_video.setText(_translate("MainWindow", "Εισαγωγή αρχείου ήχου από video"))
        self.sound_file_import_from_sound_file.setStatusTip(_translate("MainWindow", "Εισαγωγή νέου αρχείου ήχου από αρχείο ήχου"))
        self.sound_file_import_from_sound_file.setText(_translate("MainWindow", "Εισαγωγή νέου αρχείου ήχου από αρχείο ήχου"))
        self.sound_file_table.setStatusTip(_translate("MainWindow", "Πίνακας με τα διαθέσιμα αρχεία ήχου"))
        item = self.sound_file_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.sound_file_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.sound_file_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.sound_file_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.sound_file_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.sound_file_table.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "6"))
        item = self.sound_file_table.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "7"))
        item = self.sound_file_table.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "8"))
        item = self.sound_file_table.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "9"))
        item = self.sound_file_table.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "10"))
        item = self.sound_file_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Τίτλος"))
        item = self.sound_file_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Καλλιτέχνης"))
        item = self.sound_file_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Διάρκεια"))
        __sortingEnabled = self.sound_file_table.isSortingEnabled()
        self.sound_file_table.setSortingEnabled(False)
        item = self.sound_file_table.item(0, 0)
        item.setText(_translate("MainWindow", "Αρχείο ήχου 1"))
        item = self.sound_file_table.item(0, 1)
        item.setText(_translate("MainWindow", "Καλλιτέχνης 1"))
        item = self.sound_file_table.item(0, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sound_file_table.item(1, 0)
        item.setText(_translate("MainWindow", "Αρχείο ήχου 2"))
        item = self.sound_file_table.item(1, 1)
        item.setText(_translate("MainWindow", "Καλλιτέχνης 1"))
        item = self.sound_file_table.item(1, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sound_file_table.item(2, 0)
        item.setText(_translate("MainWindow", "Αρχείο ήχου 3"))
        item = self.sound_file_table.item(2, 1)
        item.setText(_translate("MainWindow", "Καλλιτέχνης 1"))
        item = self.sound_file_table.item(2, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sound_file_table.item(3, 0)
        item.setText(_translate("MainWindow", "Αρχείο ήχου 4"))
        item = self.sound_file_table.item(3, 1)
        item.setText(_translate("MainWindow", "Καλλιτέχνης 1"))
        item = self.sound_file_table.item(3, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sound_file_table.item(4, 0)
        item.setText(_translate("MainWindow", "Αρχείο ήχου 5"))
        item = self.sound_file_table.item(4, 1)
        item.setText(_translate("MainWindow", "Καλλιτέχνης 1"))
        item = self.sound_file_table.item(4, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sound_file_table.item(5, 0)
        item.setText(_translate("MainWindow", "Αρχείο ήχου 6"))
        item = self.sound_file_table.item(5, 1)
        item.setText(_translate("MainWindow", "Καλλιτέχνης 1"))
        item = self.sound_file_table.item(5, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sound_file_table.item(6, 0)
        item.setText(_translate("MainWindow", "Αρχείο ήχου 7"))
        item = self.sound_file_table.item(6, 1)
        item.setText(_translate("MainWindow", "Καλλιτέχνης 1"))
        item = self.sound_file_table.item(6, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sound_file_table.item(7, 0)
        item.setText(_translate("MainWindow", "Αρχείο ήχου 8"))
        item = self.sound_file_table.item(7, 1)
        item.setText(_translate("MainWindow", "Καλλιτέχνης 1"))
        item = self.sound_file_table.item(7, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sound_file_table.item(8, 0)
        item.setText(_translate("MainWindow", "Αρχείο ήχου 9"))
        item = self.sound_file_table.item(8, 1)
        item.setText(_translate("MainWindow", "Καλλιτέχνης 1"))
        item = self.sound_file_table.item(8, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sound_file_table.item(9, 0)
        item.setText(_translate("MainWindow", "Αρχείο ήχου 10"))
        item = self.sound_file_table.item(9, 1)
        item.setText(_translate("MainWindow", "Καλλιτέχνης 1"))
        item = self.sound_file_table.item(9, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        self.sound_file_table.setSortingEnabled(__sortingEnabled)
        self.playlist_page.setStatusTip(_translate("MainWindow", "Περιεχόμενα και επιλογές που αφορούν λίστες αναπαραγωγής"))
        self.playlist_insert.setStatusTip(_translate("MainWindow", "Εισαγωγή λίστας αναπαραγωγής από αρχείο"))
        self.playlist_insert.setText(_translate("MainWindow", "Εισαγωγή λίστας αναπαραγωγής"))
        self.playlist_create.setStatusTip(_translate("MainWindow", "Δημιουργία λίστας αναπαραγωγής από υπάρχοντα αρχεία ήχου, αναμεταδόσεις και λίστες αναπαραγωγής"))
        self.playlist_create.setText(_translate("MainWindow", "Δημιουργία λίστας αναπαραγωγής"))
        self.playlist_treeWidget.setStatusTip(_translate("MainWindow", "Δενδρική λίστα με τα περιεχόμενα των λιστών αναπαραγωγής"))
        self.playlist_treeWidget.headerItem().setText(0, _translate("MainWindow", "Α/Α"))
        self.playlist_treeWidget.headerItem().setText(1, _translate("MainWindow", "Είδος"))
        self.playlist_treeWidget.headerItem().setText(2, _translate("MainWindow", "Τίτλος"))
        self.playlist_treeWidget.headerItem().setText(3, _translate("MainWindow", "Διάρκεια"))
        __sortingEnabled = self.playlist_treeWidget.isSortingEnabled()
        self.playlist_treeWidget.setSortingEnabled(False)
        self.playlist_treeWidget.topLevelItem(0).setText(0, _translate("MainWindow", "1"))
        self.playlist_treeWidget.topLevelItem(0).setText(1, _translate("MainWindow", "Λίστα αναπαραγωγής"))
        self.playlist_treeWidget.topLevelItem(0).setText(2, _translate("MainWindow", "Λίστα αναπαραγωγής 1"))
        self.playlist_treeWidget.topLevelItem(0).setText(3, _translate("MainWindow", "00:01:00"))
        self.playlist_treeWidget.topLevelItem(0).child(0).setText(0, _translate("MainWindow", "1.1"))
        self.playlist_treeWidget.topLevelItem(0).child(0).setText(1, _translate("MainWindow", "Αρχείο ήχου"))
        self.playlist_treeWidget.topLevelItem(0).child(0).setText(2, _translate("MainWindow", "Αρχείο ήχου 1"))
        self.playlist_treeWidget.topLevelItem(0).child(0).setText(3, _translate("MainWindow", "00:30:00"))
        self.playlist_treeWidget.topLevelItem(0).child(1).setText(0, _translate("MainWindow", "1.2"))
        self.playlist_treeWidget.topLevelItem(0).child(1).setText(1, _translate("MainWindow", "Αναμετάδοση"))
        self.playlist_treeWidget.topLevelItem(0).child(1).setText(2, _translate("MainWindow", "Αναμετάδοση 1"))
        self.playlist_treeWidget.topLevelItem(0).child(1).setText(3, _translate("MainWindow", "00:30:00"))
        self.playlist_treeWidget.topLevelItem(1).setText(0, _translate("MainWindow", "2"))
        self.playlist_treeWidget.topLevelItem(1).setText(1, _translate("MainWindow", "Λίστα αναπαραγωγής"))
        self.playlist_treeWidget.topLevelItem(1).setText(2, _translate("MainWindow", "Λίστα αναπαραγωγής 2"))
        self.playlist_treeWidget.topLevelItem(1).setText(3, _translate("MainWindow", "01:00:00"))
        self.playlist_treeWidget.topLevelItem(1).child(0).setText(0, _translate("MainWindow", "2.1"))
        self.playlist_treeWidget.topLevelItem(1).child(0).setText(1, _translate("MainWindow", "Αρχείο ήχου"))
        self.playlist_treeWidget.topLevelItem(1).child(0).setText(2, _translate("MainWindow", "Αρχείο ήχου 2"))
        self.playlist_treeWidget.topLevelItem(1).child(0).setText(3, _translate("MainWindow", "00:30:00"))
        self.playlist_treeWidget.topLevelItem(1).child(1).setText(0, _translate("MainWindow", "2.2"))
        self.playlist_treeWidget.topLevelItem(1).child(1).setText(1, _translate("MainWindow", "Αναμετάδοση"))
        self.playlist_treeWidget.topLevelItem(1).child(1).setText(2, _translate("MainWindow", "Αναμετάδοση 2"))
        self.playlist_treeWidget.topLevelItem(1).child(1).setText(3, _translate("MainWindow", "00:30:00"))
        self.playlist_treeWidget.setSortingEnabled(__sortingEnabled)
        self.sound_clip_page.setStatusTip(_translate("MainWindow", "Περιεχόμενα και επιλογές που αφορούν ηχητικά clips"))
        self.sound_clip_import.setStatusTip(_translate("MainWindow", "Εισαγωγή ηχητικού clip (μικρού αρχείου ήχου)"))
        self.sound_clip_import.setText(_translate("MainWindow", "Εισαγωγή ηχητικού clip"))
        self.sound_clip_classification.setStatusTip(_translate("MainWindow", "Ταξινόμιση ηχητικών clips με σκοπό την εμφάνιση τους στο music clip deck"))
        self.sound_clip_classification.setText(_translate("MainWindow", "Ταξινόμηση ηχητικών clips"))
        self.sound_clip_table.setStatusTip(_translate("MainWindow", "Πίνακας με τα διαθέσιμα ηχητικά clips"))
        item = self.sound_clip_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.sound_clip_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.sound_clip_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.sound_clip_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.sound_clip_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.sound_clip_table.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "6"))
        item = self.sound_clip_table.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "7"))
        item = self.sound_clip_table.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "8"))
        item = self.sound_clip_table.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "9"))
        item = self.sound_clip_table.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "10"))
        item = self.sound_clip_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Τίτλος"))
        item = self.sound_clip_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Διάρκεια"))
        __sortingEnabled = self.sound_clip_table.isSortingEnabled()
        self.sound_clip_table.setSortingEnabled(False)
        item = self.sound_clip_table.item(0, 0)
        item.setText(_translate("MainWindow", "Ηχητικό clip 1"))
        item = self.sound_clip_table.item(0, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sound_clip_table.item(1, 0)
        item.setText(_translate("MainWindow", "Ηχητικό clip 2"))
        item = self.sound_clip_table.item(1, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sound_clip_table.item(2, 0)
        item.setText(_translate("MainWindow", "Ηχητικό clip 3"))
        item = self.sound_clip_table.item(2, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sound_clip_table.item(3, 0)
        item.setText(_translate("MainWindow", "Ηχητικό clip 4"))
        item = self.sound_clip_table.item(3, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sound_clip_table.item(4, 0)
        item.setText(_translate("MainWindow", "Ηχητικό clip 5"))
        item = self.sound_clip_table.item(4, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sound_clip_table.item(5, 0)
        item.setText(_translate("MainWindow", "Ηχητικό clip 6"))
        item = self.sound_clip_table.item(5, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sound_clip_table.item(6, 0)
        item.setText(_translate("MainWindow", "Ηχητικό clip 7"))
        item = self.sound_clip_table.item(6, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sound_clip_table.item(7, 0)
        item.setText(_translate("MainWindow", "Ηχητικό clip 8"))
        item = self.sound_clip_table.item(7, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sound_clip_table.item(8, 0)
        item.setText(_translate("MainWindow", "Ηχητικό clip 9"))
        item = self.sound_clip_table.item(8, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sound_clip_table.item(9, 0)
        item.setText(_translate("MainWindow", "Ηχητικό clip 10"))
        item = self.sound_clip_table.item(9, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        self.sound_clip_table.setSortingEnabled(__sortingEnabled)
        self.retransmition_page.setStatusTip(_translate("MainWindow", "Περιεχόμενα και επιλογές που αφορούν αναμεταδόσεις"))
        self.retransmition_import.setStatusTip(_translate("MainWindow", "Εισαγωγή στοιχείων αναμετάδοσης με σκοπό την χρήση της μεταγενέστερα"))
        self.retransmition_import.setText(_translate("MainWindow", "Εισαγωγή αναμετάδοσης"))
        self.retransmition_table.setStatusTip(_translate("MainWindow", "Πίνακας με τις διαθέσιμες αναμεταδόσεις"))
        item = self.retransmition_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.retransmition_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.retransmition_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.retransmition_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.retransmition_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.retransmition_table.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "6"))
        item = self.retransmition_table.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "7"))
        item = self.retransmition_table.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "8"))
        item = self.retransmition_table.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "9"))
        item = self.retransmition_table.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "10"))
        item = self.retransmition_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Τίτλος"))
        item = self.retransmition_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Stream url"))
        __sortingEnabled = self.retransmition_table.isSortingEnabled()
        self.retransmition_table.setSortingEnabled(False)
        item = self.retransmition_table.item(0, 0)
        item.setText(_translate("MainWindow", "Αναμετάδοση 1"))
        item = self.retransmition_table.item(0, 1)
        item.setText(_translate("MainWindow", "http://www.peradio.com"))
        item = self.retransmition_table.item(1, 0)
        item.setText(_translate("MainWindow", "Αναμετάδοση 2"))
        item = self.retransmition_table.item(1, 1)
        item.setText(_translate("MainWindow", "http://www.peradio.com"))
        item = self.retransmition_table.item(2, 0)
        item.setText(_translate("MainWindow", "Αναμετάδοση 3"))
        item = self.retransmition_table.item(2, 1)
        item.setText(_translate("MainWindow", "http://www.peradio.com"))
        item = self.retransmition_table.item(3, 0)
        item.setText(_translate("MainWindow", "Αναμετάδοση 4"))
        item = self.retransmition_table.item(3, 1)
        item.setText(_translate("MainWindow", "http://www.peradio.com"))
        item = self.retransmition_table.item(4, 0)
        item.setText(_translate("MainWindow", "Αναμετάδοση 5"))
        item = self.retransmition_table.item(4, 1)
        item.setText(_translate("MainWindow", "http://www.peradio.com"))
        item = self.retransmition_table.item(5, 0)
        item.setText(_translate("MainWindow", "Αναμετάδοση 6"))
        item = self.retransmition_table.item(5, 1)
        item.setText(_translate("MainWindow", "http://www.peradio.com"))
        item = self.retransmition_table.item(6, 0)
        item.setText(_translate("MainWindow", "Αναμετάδοση 7"))
        item = self.retransmition_table.item(6, 1)
        item.setText(_translate("MainWindow", "http://www.peradio.com"))
        item = self.retransmition_table.item(7, 0)
        item.setText(_translate("MainWindow", "Αναμετάδοση 8"))
        item = self.retransmition_table.item(7, 1)
        item.setText(_translate("MainWindow", "http://www.peradio.com"))
        item = self.retransmition_table.item(8, 0)
        item.setText(_translate("MainWindow", "Αναμετάδοση 9"))
        item = self.retransmition_table.item(8, 1)
        item.setText(_translate("MainWindow", "http://www.peradio.com"))
        item = self.retransmition_table.item(9, 0)
        item.setText(_translate("MainWindow", "Αναμετάδοση 10"))
        item = self.retransmition_table.item(9, 1)
        item.setText(_translate("MainWindow", "http://www.peradio.com"))
        self.retransmition_table.setSortingEnabled(__sortingEnabled)
        self.station_logo_page.setStatusTip(_translate("MainWindow", "Περιεχόμενα και επιλογές που αφορούν σήματα σταθμού"))
        self.station_logo_import.setStatusTip(_translate("MainWindow", "Εισαγωγή σήματος σταθμού"))
        self.station_logo_import.setText(_translate("MainWindow", "Εισαγωγή σήματος σταθμού"))
        self.station_logo_table.setStatusTip(_translate("MainWindow", "Πίνακας με τα διαθέσιμα σήματα σταθμύ"))
        item = self.station_logo_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.station_logo_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.station_logo_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.station_logo_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.station_logo_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.station_logo_table.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "6"))
        item = self.station_logo_table.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "7"))
        item = self.station_logo_table.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "8"))
        item = self.station_logo_table.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "9"))
        item = self.station_logo_table.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "10"))
        item = self.station_logo_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Τίτλος"))
        item = self.station_logo_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Προεπιλεγμένο"))
        item = self.station_logo_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Διάρκεια"))
        __sortingEnabled = self.station_logo_table.isSortingEnabled()
        self.station_logo_table.setSortingEnabled(False)
        item = self.station_logo_table.item(0, 0)
        item.setText(_translate("MainWindow", "Σήμα σταθμού 1"))
        item = self.station_logo_table.item(0, 1)
        item.setText(_translate("MainWindow", "NAI"))
        item = self.station_logo_table.item(0, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.station_logo_table.item(1, 0)
        item.setText(_translate("MainWindow", "Σήμα σταθμού 2"))
        item = self.station_logo_table.item(1, 1)
        item.setText(_translate("MainWindow", "-"))
        item = self.station_logo_table.item(1, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.station_logo_table.item(2, 0)
        item.setText(_translate("MainWindow", "Σήμα σταθμού 3"))
        item = self.station_logo_table.item(2, 1)
        item.setText(_translate("MainWindow", "-"))
        item = self.station_logo_table.item(2, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.station_logo_table.item(3, 0)
        item.setText(_translate("MainWindow", "Σήμα σταθμού 4"))
        item = self.station_logo_table.item(3, 1)
        item.setText(_translate("MainWindow", "-"))
        item = self.station_logo_table.item(3, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.station_logo_table.item(4, 0)
        item.setText(_translate("MainWindow", "Σήμα σταθμού 5"))
        item = self.station_logo_table.item(4, 1)
        item.setText(_translate("MainWindow", "-"))
        item = self.station_logo_table.item(4, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.station_logo_table.item(5, 0)
        item.setText(_translate("MainWindow", "Σήμα σταθμού 6"))
        item = self.station_logo_table.item(5, 1)
        item.setText(_translate("MainWindow", "-"))
        item = self.station_logo_table.item(5, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.station_logo_table.item(6, 0)
        item.setText(_translate("MainWindow", "Σήμα σταθμού 7"))
        item = self.station_logo_table.item(6, 1)
        item.setText(_translate("MainWindow", "-"))
        item = self.station_logo_table.item(6, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.station_logo_table.item(7, 0)
        item.setText(_translate("MainWindow", "Σήμα σταθμού 8"))
        item = self.station_logo_table.item(7, 1)
        item.setText(_translate("MainWindow", "-"))
        item = self.station_logo_table.item(7, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.station_logo_table.item(8, 0)
        item.setText(_translate("MainWindow", "Σήμα σταθμού 9"))
        item = self.station_logo_table.item(8, 1)
        item.setText(_translate("MainWindow", "-"))
        item = self.station_logo_table.item(8, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.station_logo_table.item(9, 0)
        item.setText(_translate("MainWindow", "Σήμα σταθμού 10"))
        item = self.station_logo_table.item(9, 1)
        item.setText(_translate("MainWindow", "-"))
        item = self.station_logo_table.item(9, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        self.station_logo_table.setSortingEnabled(__sortingEnabled)
        self.time_collection_page.setStatusTip(_translate("MainWindow", "Περιεχόμενα και επιλογές που αφορούν συλλογές ώρας Ελλάδας"))
        self.time_collection_treeWidget.setStatusTip(_translate("MainWindow", "Δενδρική λίστα με τα περιεχόμενα της κεντρικής λίστας αναπαραγωγής"))
        self.time_collection_treeWidget.headerItem().setText(0, _translate("MainWindow", "Α/Α"))
        self.time_collection_treeWidget.headerItem().setText(1, _translate("MainWindow", "Τίτλος"))
        self.time_collection_treeWidget.headerItem().setText(2, _translate("MainWindow", "Προεπιλεγμένη"))
        self.time_collection_treeWidget.headerItem().setText(3, _translate("MainWindow", "Είδος συλλογής"))
        self.time_collection_treeWidget.headerItem().setText(4, _translate("MainWindow", "Πλήθος αρχείων"))
        self.time_collection_treeWidget.headerItem().setText(5, _translate("MainWindow", "Διάρκεια"))
        __sortingEnabled = self.time_collection_treeWidget.isSortingEnabled()
        self.time_collection_treeWidget.setSortingEnabled(False)
        self.time_collection_treeWidget.topLevelItem(0).setText(0, _translate("MainWindow", "1"))
        self.time_collection_treeWidget.topLevelItem(0).setText(1, _translate("MainWindow", "Συλλογή ώρας Ελλάδας 1"))
        self.time_collection_treeWidget.topLevelItem(0).setText(2, _translate("MainWindow", "ΝΑΙ"))
        self.time_collection_treeWidget.topLevelItem(0).setText(3, _translate("MainWindow", "Περίπτωση 1"))
        self.time_collection_treeWidget.topLevelItem(0).setText(4, _translate("MainWindow", "12 αρχεία"))
        self.time_collection_treeWidget.topLevelItem(0).child(0).setText(0, _translate("MainWindow", "1.1"))
        self.time_collection_treeWidget.topLevelItem(0).child(0).setText(1, _translate("MainWindow", "Η ώρα είναι 1"))
        self.time_collection_treeWidget.topLevelItem(0).child(0).setText(2, _translate("MainWindow", "ΝΑΙ"))
        self.time_collection_treeWidget.topLevelItem(0).child(0).setText(3, _translate("MainWindow", "Περίπτωση 1"))
        self.time_collection_treeWidget.topLevelItem(0).child(0).setText(4, _translate("MainWindow", "1 αρχείο"))
        self.time_collection_treeWidget.topLevelItem(0).child(0).setText(5, _translate("MainWindow", "00:00:05"))
        self.time_collection_treeWidget.topLevelItem(0).child(1).setText(0, _translate("MainWindow", "1.2"))
        self.time_collection_treeWidget.topLevelItem(0).child(1).setText(1, _translate("MainWindow", "Η ώρα είναι 2"))
        self.time_collection_treeWidget.topLevelItem(0).child(1).setText(2, _translate("MainWindow", "ΝΑΙ"))
        self.time_collection_treeWidget.topLevelItem(0).child(1).setText(3, _translate("MainWindow", "Περίπτωση 1"))
        self.time_collection_treeWidget.topLevelItem(0).child(1).setText(4, _translate("MainWindow", "1 αρχείο"))
        self.time_collection_treeWidget.topLevelItem(0).child(1).setText(5, _translate("MainWindow", "00:00:05"))
        self.time_collection_treeWidget.topLevelItem(0).child(2).setText(0, _translate("MainWindow", "1.3"))
        self.time_collection_treeWidget.topLevelItem(0).child(2).setText(1, _translate("MainWindow", "Η ώρα είναι 3"))
        self.time_collection_treeWidget.topLevelItem(0).child(2).setText(2, _translate("MainWindow", "ΝΑΙ"))
        self.time_collection_treeWidget.topLevelItem(0).child(2).setText(3, _translate("MainWindow", "Περίπτωση 1"))
        self.time_collection_treeWidget.topLevelItem(0).child(2).setText(4, _translate("MainWindow", "1 αρχείο"))
        self.time_collection_treeWidget.topLevelItem(0).child(2).setText(5, _translate("MainWindow", "00:00:05"))
        self.time_collection_treeWidget.topLevelItem(0).child(3).setText(0, _translate("MainWindow", "1.4"))
        self.time_collection_treeWidget.topLevelItem(0).child(3).setText(1, _translate("MainWindow", "Η ώρα είναι 4"))
        self.time_collection_treeWidget.topLevelItem(0).child(3).setText(2, _translate("MainWindow", "ΝΑΙ"))
        self.time_collection_treeWidget.topLevelItem(0).child(3).setText(3, _translate("MainWindow", "Περίπτωση 1"))
        self.time_collection_treeWidget.topLevelItem(0).child(3).setText(4, _translate("MainWindow", "1 αρχείο"))
        self.time_collection_treeWidget.topLevelItem(0).child(3).setText(5, _translate("MainWindow", "00:00:05"))
        self.time_collection_treeWidget.topLevelItem(0).child(4).setText(0, _translate("MainWindow", "1.5"))
        self.time_collection_treeWidget.topLevelItem(0).child(4).setText(1, _translate("MainWindow", "Η ώρα είναι 5"))
        self.time_collection_treeWidget.topLevelItem(0).child(4).setText(2, _translate("MainWindow", "ΝΑΙ"))
        self.time_collection_treeWidget.topLevelItem(0).child(4).setText(3, _translate("MainWindow", "Περίπτωση 1"))
        self.time_collection_treeWidget.topLevelItem(0).child(4).setText(4, _translate("MainWindow", "1 αρχείο"))
        self.time_collection_treeWidget.topLevelItem(0).child(4).setText(5, _translate("MainWindow", "00:00:05"))
        self.time_collection_treeWidget.topLevelItem(0).child(5).setText(0, _translate("MainWindow", "1.6"))
        self.time_collection_treeWidget.topLevelItem(0).child(5).setText(1, _translate("MainWindow", "Η ώρα είναι 6"))
        self.time_collection_treeWidget.topLevelItem(0).child(5).setText(2, _translate("MainWindow", "ΝΑΙ"))
        self.time_collection_treeWidget.topLevelItem(0).child(5).setText(3, _translate("MainWindow", "Περίπτωση 1"))
        self.time_collection_treeWidget.topLevelItem(0).child(5).setText(4, _translate("MainWindow", "1 αρχείο"))
        self.time_collection_treeWidget.topLevelItem(0).child(5).setText(5, _translate("MainWindow", "00:00:05"))
        self.time_collection_treeWidget.topLevelItem(0).child(6).setText(0, _translate("MainWindow", "1.7"))
        self.time_collection_treeWidget.topLevelItem(0).child(6).setText(1, _translate("MainWindow", "Η ώρα είναι 7"))
        self.time_collection_treeWidget.topLevelItem(0).child(6).setText(2, _translate("MainWindow", "ΝΑΙ"))
        self.time_collection_treeWidget.topLevelItem(0).child(6).setText(3, _translate("MainWindow", "Περίπτωση 1"))
        self.time_collection_treeWidget.topLevelItem(0).child(6).setText(4, _translate("MainWindow", "1 αρχείο"))
        self.time_collection_treeWidget.topLevelItem(0).child(6).setText(5, _translate("MainWindow", "00:00:05"))
        self.time_collection_treeWidget.topLevelItem(0).child(7).setText(0, _translate("MainWindow", "1.8"))
        self.time_collection_treeWidget.topLevelItem(0).child(7).setText(1, _translate("MainWindow", "Η ώρα είναι 8"))
        self.time_collection_treeWidget.topLevelItem(0).child(7).setText(2, _translate("MainWindow", "ΝΑΙ"))
        self.time_collection_treeWidget.topLevelItem(0).child(7).setText(3, _translate("MainWindow", "Περίπτωση 1"))
        self.time_collection_treeWidget.topLevelItem(0).child(7).setText(4, _translate("MainWindow", "1 αρχείο"))
        self.time_collection_treeWidget.topLevelItem(0).child(7).setText(5, _translate("MainWindow", "00:00:05"))
        self.time_collection_treeWidget.topLevelItem(0).child(8).setText(0, _translate("MainWindow", "1.9"))
        self.time_collection_treeWidget.topLevelItem(0).child(8).setText(1, _translate("MainWindow", "Η ώρα είναι 9"))
        self.time_collection_treeWidget.topLevelItem(0).child(8).setText(2, _translate("MainWindow", "ΝΑΙ"))
        self.time_collection_treeWidget.topLevelItem(0).child(8).setText(3, _translate("MainWindow", "Περίπτωση 1"))
        self.time_collection_treeWidget.topLevelItem(0).child(8).setText(4, _translate("MainWindow", "1 αρχείο"))
        self.time_collection_treeWidget.topLevelItem(0).child(8).setText(5, _translate("MainWindow", "00:00:05"))
        self.time_collection_treeWidget.topLevelItem(0).child(9).setText(0, _translate("MainWindow", "1.10"))
        self.time_collection_treeWidget.topLevelItem(0).child(9).setText(1, _translate("MainWindow", "Η ώρα είναι 10"))
        self.time_collection_treeWidget.topLevelItem(0).child(9).setText(2, _translate("MainWindow", "ΝΑΙ"))
        self.time_collection_treeWidget.topLevelItem(0).child(9).setText(3, _translate("MainWindow", "Περίπτωση 1"))
        self.time_collection_treeWidget.topLevelItem(0).child(9).setText(4, _translate("MainWindow", "1 αρχείο"))
        self.time_collection_treeWidget.topLevelItem(0).child(9).setText(5, _translate("MainWindow", "00:00:05"))
        self.time_collection_treeWidget.topLevelItem(0).child(10).setText(0, _translate("MainWindow", "1.11"))
        self.time_collection_treeWidget.topLevelItem(0).child(10).setText(1, _translate("MainWindow", "Η ώρα είναι 11"))
        self.time_collection_treeWidget.topLevelItem(0).child(10).setText(2, _translate("MainWindow", "ΝΑΙ"))
        self.time_collection_treeWidget.topLevelItem(0).child(10).setText(3, _translate("MainWindow", "Περίπτωση 1"))
        self.time_collection_treeWidget.topLevelItem(0).child(10).setText(4, _translate("MainWindow", "1 αρχείο"))
        self.time_collection_treeWidget.topLevelItem(0).child(10).setText(5, _translate("MainWindow", "00:00:05"))
        self.time_collection_treeWidget.topLevelItem(0).child(11).setText(0, _translate("MainWindow", "1.12"))
        self.time_collection_treeWidget.topLevelItem(0).child(11).setText(1, _translate("MainWindow", "Η ώρα είναι 12"))
        self.time_collection_treeWidget.topLevelItem(0).child(11).setText(2, _translate("MainWindow", "ΝΑΙ"))
        self.time_collection_treeWidget.topLevelItem(0).child(11).setText(3, _translate("MainWindow", "Περίπτωση 1"))
        self.time_collection_treeWidget.topLevelItem(0).child(11).setText(4, _translate("MainWindow", "1 αρχείο"))
        self.time_collection_treeWidget.topLevelItem(0).child(11).setText(5, _translate("MainWindow", "00:00:05"))
        self.time_collection_treeWidget.setSortingEnabled(__sortingEnabled)
        self.time_collection_import.setStatusTip(_translate("MainWindow", "Εισαγωγή συλλογής ώρας Ελλάδας"))
        self.time_collection_import.setText(_translate("MainWindow", "Εισαγωγή συλλογής ώρας Ελλάδας"))
        self.church_news_page.setStatusTip(_translate("MainWindow", "Περιεχόμενα και επιλογές που αφορούν δελτία εκκλησιαστικών ανακοινώσεων"))
        self.church_news_import.setStatusTip(_translate("MainWindow", "Εισαγωγή δελτίου εκκλησιαστικών ανακοινώσεων"))
        self.church_news_import.setText(_translate("MainWindow", "Εισαγωγή δελτίου εκκλησιαστικών ανακοινώσεων"))
        self.church_news_table.setStatusTip(_translate("MainWindow", "Πίνακας με τα διαθέσιμα δελτία εκκλησιαστικών ανακοινώσεων"))
        item = self.church_news_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.church_news_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.church_news_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.church_news_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.church_news_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.church_news_table.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "6"))
        item = self.church_news_table.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "7"))
        item = self.church_news_table.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "8"))
        item = self.church_news_table.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "9"))
        item = self.church_news_table.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "10"))
        item = self.church_news_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Ημερομηνία"))
        item = self.church_news_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Τίτλος"))
        item = self.church_news_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Προεπιλεγμένο"))
        item = self.church_news_table.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Διάρκεια"))
        __sortingEnabled = self.church_news_table.isSortingEnabled()
        self.church_news_table.setSortingEnabled(False)
        item = self.church_news_table.item(0, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.church_news_table.item(0, 1)
        item.setText(_translate("MainWindow", "Δελτίο εκκλησιαστικών ανακοινώσεων 1"))
        item = self.church_news_table.item(0, 2)
        item.setText(_translate("MainWindow", "ΝΑΙ"))
        item = self.church_news_table.item(0, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.church_news_table.item(1, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.church_news_table.item(1, 1)
        item.setText(_translate("MainWindow", "Δελτίο εκκλησιαστικών ανακοινώσεων 2"))
        item = self.church_news_table.item(1, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.church_news_table.item(1, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.church_news_table.item(2, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.church_news_table.item(2, 1)
        item.setText(_translate("MainWindow", "Δελτίο εκκλησιαστικών ανακοινώσεων 3"))
        item = self.church_news_table.item(2, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.church_news_table.item(2, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.church_news_table.item(3, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.church_news_table.item(3, 1)
        item.setText(_translate("MainWindow", "Δελτίο εκκλησιαστικών ανακοινώσεων 4"))
        item = self.church_news_table.item(3, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.church_news_table.item(3, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.church_news_table.item(4, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.church_news_table.item(4, 1)
        item.setText(_translate("MainWindow", "Δελτίο εκκλησιαστικών ανακοινώσεων 5"))
        item = self.church_news_table.item(4, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.church_news_table.item(4, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.church_news_table.item(5, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.church_news_table.item(5, 1)
        item.setText(_translate("MainWindow", "Δελτίο εκκλησιαστικών ανακοινώσεων 6"))
        item = self.church_news_table.item(5, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.church_news_table.item(5, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.church_news_table.item(6, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.church_news_table.item(6, 1)
        item.setText(_translate("MainWindow", "Δελτίο εκκλησιαστικών ανακοινώσεων 7"))
        item = self.church_news_table.item(6, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.church_news_table.item(6, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.church_news_table.item(7, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.church_news_table.item(7, 1)
        item.setText(_translate("MainWindow", "Δελτίο εκκλησιαστικών ανακοινώσεων 8"))
        item = self.church_news_table.item(7, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.church_news_table.item(7, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.church_news_table.item(8, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.church_news_table.item(8, 1)
        item.setText(_translate("MainWindow", "Δελτίο εκκλησιαστικών ανακοινώσεων 9"))
        item = self.church_news_table.item(8, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.church_news_table.item(8, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.church_news_table.item(9, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.church_news_table.item(9, 1)
        item.setText(_translate("MainWindow", "Δελτίο εκκλησιαστικών ανακοινώσεων 10"))
        item = self.church_news_table.item(9, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.church_news_table.item(9, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        self.church_news_table.setSortingEnabled(__sortingEnabled)
        self.news_page.setStatusTip(_translate("MainWindow", "Περιεχόμενα και επιλογές που αφορούν δελτία ειδήσεων"))
        self.new_import.setStatusTip(_translate("MainWindow", "Εισαγωγή δελτίου ειδήσεων"))
        self.new_import.setText(_translate("MainWindow", "Εισαγωγή δελτίου ειδήσεων"))
        self.news_table.setStatusTip(_translate("MainWindow", "Πίνακας με τα διαθέσιμα δελτία ειδήσεων"))
        item = self.news_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.news_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.news_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.news_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.news_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.news_table.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "6"))
        item = self.news_table.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "7"))
        item = self.news_table.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "8"))
        item = self.news_table.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "9"))
        item = self.news_table.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "10"))
        item = self.news_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Ημερομηνία"))
        item = self.news_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Τίτλος"))
        item = self.news_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Προεπιλεγμένο"))
        item = self.news_table.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Διάρκεια"))
        __sortingEnabled = self.news_table.isSortingEnabled()
        self.news_table.setSortingEnabled(False)
        item = self.news_table.item(0, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.news_table.item(0, 1)
        item.setText(_translate("MainWindow", "Δελτίο ειδήσεων 1"))
        item = self.news_table.item(0, 2)
        item.setText(_translate("MainWindow", "ΝΑΙ"))
        item = self.news_table.item(0, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.news_table.item(1, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.news_table.item(1, 1)
        item.setText(_translate("MainWindow", "Δελτίο ειδήσεων 2"))
        item = self.news_table.item(1, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.news_table.item(1, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.news_table.item(2, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.news_table.item(2, 1)
        item.setText(_translate("MainWindow", "Δελτίο ειδήσεων 3"))
        item = self.news_table.item(2, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.news_table.item(2, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.news_table.item(3, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.news_table.item(3, 1)
        item.setText(_translate("MainWindow", "Δελτίο ειδήσεων 4"))
        item = self.news_table.item(3, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.news_table.item(3, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.news_table.item(4, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.news_table.item(4, 1)
        item.setText(_translate("MainWindow", "Δελτίο ειδήσεων 5"))
        item = self.news_table.item(4, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.news_table.item(4, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.news_table.item(5, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.news_table.item(5, 1)
        item.setText(_translate("MainWindow", "Δελτίο ειδήσεων 6"))
        item = self.news_table.item(5, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.news_table.item(5, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.news_table.item(6, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.news_table.item(6, 1)
        item.setText(_translate("MainWindow", "Δελτίο ειδήσεων 7"))
        item = self.news_table.item(6, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.news_table.item(6, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.news_table.item(7, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.news_table.item(7, 1)
        item.setText(_translate("MainWindow", "Δελτίο ειδήσεων 8"))
        item = self.news_table.item(7, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.news_table.item(7, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.news_table.item(8, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.news_table.item(8, 1)
        item.setText(_translate("MainWindow", "Δελτίο ειδήσεων 9"))
        item = self.news_table.item(8, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.news_table.item(8, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.news_table.item(9, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.news_table.item(9, 1)
        item.setText(_translate("MainWindow", "Δελτίο ειδήσεων 10"))
        item = self.news_table.item(9, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.news_table.item(9, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        self.news_table.setSortingEnabled(__sortingEnabled)
        self.weather_news_page.setStatusTip(_translate("MainWindow", "Περιεχόμενα και επιλογές που αφορούν δελτία καιρού"))
        self.weather_new_import.setStatusTip(_translate("MainWindow", "Εισαγωγή δελτίου καιρού"))
        self.weather_new_import.setText(_translate("MainWindow", "Εισαγωγή δελτίου καιρού"))
        self.weather_news_table.setStatusTip(_translate("MainWindow", "Πίνακας με τα διαθέσιμα δελτία καιρού"))
        item = self.weather_news_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.weather_news_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.weather_news_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.weather_news_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.weather_news_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.weather_news_table.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "6"))
        item = self.weather_news_table.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "7"))
        item = self.weather_news_table.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "8"))
        item = self.weather_news_table.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "9"))
        item = self.weather_news_table.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "10"))
        item = self.weather_news_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Ημερομηνία"))
        item = self.weather_news_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Τίτλος"))
        item = self.weather_news_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Προεπιλεγμένο"))
        item = self.weather_news_table.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Διάρκεια"))
        __sortingEnabled = self.weather_news_table.isSortingEnabled()
        self.weather_news_table.setSortingEnabled(False)
        item = self.weather_news_table.item(0, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.weather_news_table.item(0, 1)
        item.setText(_translate("MainWindow", "Δελτίο καιρού 1"))
        item = self.weather_news_table.item(0, 2)
        item.setText(_translate("MainWindow", "ΝΑΙ"))
        item = self.weather_news_table.item(0, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.weather_news_table.item(1, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.weather_news_table.item(1, 1)
        item.setText(_translate("MainWindow", "Δελτίο καιρού 2"))
        item = self.weather_news_table.item(1, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.weather_news_table.item(1, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.weather_news_table.item(2, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.weather_news_table.item(2, 1)
        item.setText(_translate("MainWindow", "Δελτίο καιρού 3"))
        item = self.weather_news_table.item(2, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.weather_news_table.item(2, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.weather_news_table.item(3, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.weather_news_table.item(3, 1)
        item.setText(_translate("MainWindow", "Δελτίο καιρού 4"))
        item = self.weather_news_table.item(3, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.weather_news_table.item(3, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.weather_news_table.item(4, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.weather_news_table.item(4, 1)
        item.setText(_translate("MainWindow", "Δελτίο καιρού 5"))
        item = self.weather_news_table.item(4, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.weather_news_table.item(4, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.weather_news_table.item(5, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.weather_news_table.item(5, 1)
        item.setText(_translate("MainWindow", "Δελτίο καιρού 6"))
        item = self.weather_news_table.item(5, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.weather_news_table.item(5, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.weather_news_table.item(6, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.weather_news_table.item(6, 1)
        item.setText(_translate("MainWindow", "Δελτίο καιρού 7"))
        item = self.weather_news_table.item(6, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.weather_news_table.item(6, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.weather_news_table.item(7, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.weather_news_table.item(7, 1)
        item.setText(_translate("MainWindow", "Δελτίο καιρού 8"))
        item = self.weather_news_table.item(7, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.weather_news_table.item(7, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.weather_news_table.item(8, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.weather_news_table.item(8, 1)
        item.setText(_translate("MainWindow", "Δελτίο καιρού 9"))
        item = self.weather_news_table.item(8, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.weather_news_table.item(8, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.weather_news_table.item(9, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.weather_news_table.item(9, 1)
        item.setText(_translate("MainWindow", "Δελτίο καιρού 10"))
        item = self.weather_news_table.item(9, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.weather_news_table.item(9, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        self.weather_news_table.setSortingEnabled(__sortingEnabled)
        self.sport_new_import.setStatusTip(_translate("MainWindow", "Εισαγωγή δελτίου καιρού"))
        self.sport_new_import.setText(_translate("MainWindow", "Εισαγωγή δελτίου αθλητικών ειδήσεων"))
        self.sport_news_table.setStatusTip(_translate("MainWindow", "Πίνακας με τα διαθέσιμα δελτία καιρού"))
        item = self.sport_news_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.sport_news_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.sport_news_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.sport_news_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.sport_news_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.sport_news_table.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "6"))
        item = self.sport_news_table.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "7"))
        item = self.sport_news_table.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "8"))
        item = self.sport_news_table.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "9"))
        item = self.sport_news_table.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "10"))
        item = self.sport_news_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Ημερομηνία"))
        item = self.sport_news_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Τίτλος"))
        item = self.sport_news_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Προεπιλεγμένο"))
        item = self.sport_news_table.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Διάρκεια"))
        __sortingEnabled = self.sport_news_table.isSortingEnabled()
        self.sport_news_table.setSortingEnabled(False)
        item = self.sport_news_table.item(0, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.sport_news_table.item(0, 1)
        item.setText(_translate("MainWindow", "Αθλητικό δελτίο ειδήσεων 1"))
        item = self.sport_news_table.item(0, 2)
        item.setText(_translate("MainWindow", "ΝΑΙ"))
        item = self.sport_news_table.item(0, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sport_news_table.item(1, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.sport_news_table.item(1, 1)
        item.setText(_translate("MainWindow", "Αθλητικό δελτίο ειδήσεων 2"))
        item = self.sport_news_table.item(1, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.sport_news_table.item(1, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sport_news_table.item(2, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.sport_news_table.item(2, 1)
        item.setText(_translate("MainWindow", "Αθλητικό δελτίο ειδήσεων 3"))
        item = self.sport_news_table.item(2, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.sport_news_table.item(2, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sport_news_table.item(3, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.sport_news_table.item(3, 1)
        item.setText(_translate("MainWindow", "Αθλητικό δελτίο ειδήσεων 4"))
        item = self.sport_news_table.item(3, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.sport_news_table.item(3, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sport_news_table.item(4, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.sport_news_table.item(4, 1)
        item.setText(_translate("MainWindow", "Αθλητικό δελτίο ειδήσεων 5"))
        item = self.sport_news_table.item(4, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.sport_news_table.item(4, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sport_news_table.item(5, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.sport_news_table.item(5, 1)
        item.setText(_translate("MainWindow", "Αθλητικό δελτίο ειδήσεων 6"))
        item = self.sport_news_table.item(5, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.sport_news_table.item(5, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sport_news_table.item(6, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.sport_news_table.item(6, 1)
        item.setText(_translate("MainWindow", "Αθλητικό δελτίο ειδήσεων 7"))
        item = self.sport_news_table.item(6, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.sport_news_table.item(6, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sport_news_table.item(7, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.sport_news_table.item(7, 1)
        item.setText(_translate("MainWindow", "Αθλητικό δελτίο ειδήσεων 8"))
        item = self.sport_news_table.item(7, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.sport_news_table.item(7, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sport_news_table.item(8, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.sport_news_table.item(8, 1)
        item.setText(_translate("MainWindow", "Αθλητικό δελτίο ειδήσεων 9"))
        item = self.sport_news_table.item(8, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.sport_news_table.item(8, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.sport_news_table.item(9, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.sport_news_table.item(9, 1)
        item.setText(_translate("MainWindow", "Αθλητικό δελτίο ειδήσεων 10"))
        item = self.sport_news_table.item(9, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.sport_news_table.item(9, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        self.sport_news_table.setSortingEnabled(__sortingEnabled)
        self.like_today_import.setStatusTip(_translate("MainWindow", "Εισαγωγή δελτίου καιρού"))
        self.like_today_import.setText(_translate("MainWindow", "Εισαγωγή αρχείου \"Σαν σήμερα\""))
        self.like_today_table.setStatusTip(_translate("MainWindow", "Πίνακας με τα διαθέσιμα δελτία καιρού"))
        item = self.like_today_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.like_today_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.like_today_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.like_today_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.like_today_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.like_today_table.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "6"))
        item = self.like_today_table.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "7"))
        item = self.like_today_table.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "8"))
        item = self.like_today_table.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "9"))
        item = self.like_today_table.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "10"))
        item = self.like_today_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Ημερομηνία"))
        item = self.like_today_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Τίτλος"))
        item = self.like_today_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Προεπιλεγμένο"))
        item = self.like_today_table.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Διάρκεια"))
        __sortingEnabled = self.like_today_table.isSortingEnabled()
        self.like_today_table.setSortingEnabled(False)
        item = self.like_today_table.item(0, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.like_today_table.item(0, 1)
        item.setText(_translate("MainWindow", "Σαν σήμερα 1"))
        item = self.like_today_table.item(0, 2)
        item.setText(_translate("MainWindow", "ΝΑΙ"))
        item = self.like_today_table.item(0, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.like_today_table.item(1, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.like_today_table.item(1, 1)
        item.setText(_translate("MainWindow", "Σαν σήμερα 2"))
        item = self.like_today_table.item(1, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.like_today_table.item(1, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.like_today_table.item(2, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.like_today_table.item(2, 1)
        item.setText(_translate("MainWindow", "Σαν σήμερα 3"))
        item = self.like_today_table.item(2, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.like_today_table.item(2, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.like_today_table.item(3, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.like_today_table.item(3, 1)
        item.setText(_translate("MainWindow", "Σαν σήμερα 4"))
        item = self.like_today_table.item(3, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.like_today_table.item(3, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.like_today_table.item(4, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.like_today_table.item(4, 1)
        item.setText(_translate("MainWindow", "Σαν σήμερα 5"))
        item = self.like_today_table.item(4, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.like_today_table.item(4, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.like_today_table.item(5, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.like_today_table.item(5, 1)
        item.setText(_translate("MainWindow", "Σαν σήμερα 6"))
        item = self.like_today_table.item(5, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.like_today_table.item(5, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.like_today_table.item(6, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.like_today_table.item(6, 1)
        item.setText(_translate("MainWindow", "Σαν σήμερα 7"))
        item = self.like_today_table.item(6, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.like_today_table.item(6, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.like_today_table.item(7, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.like_today_table.item(7, 1)
        item.setText(_translate("MainWindow", "Σαν σήμερα 8"))
        item = self.like_today_table.item(7, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.like_today_table.item(7, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.like_today_table.item(8, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.like_today_table.item(8, 1)
        item.setText(_translate("MainWindow", "Σαν σήμερα 9"))
        item = self.like_today_table.item(8, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.like_today_table.item(8, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.like_today_table.item(9, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.like_today_table.item(9, 1)
        item.setText(_translate("MainWindow", "Σαν σήμερα 10"))
        item = self.like_today_table.item(9, 2)
        item.setText(_translate("MainWindow", "ΟΧΙ"))
        item = self.like_today_table.item(9, 3)
        item.setText(_translate("MainWindow", "00:01:00"))
        self.like_today_table.setSortingEnabled(__sortingEnabled)
        self.record_ip_calls_page.setStatusTip(_translate("MainWindow", "Περιεχόμενα και επιλογές που αφορούν ηχογραφημένες ηχητικές κλήσεις"))
        self.record_files_table.setStatusTip(_translate("MainWindow", "Πίνακας με τις διαθέσιμες ηχογραφημένες ηχητικές κλήσεις"))
        item = self.record_files_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.record_files_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.record_files_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.record_files_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.record_files_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.record_files_table.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "6"))
        item = self.record_files_table.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "7"))
        item = self.record_files_table.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "8"))
        item = self.record_files_table.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "9"))
        item = self.record_files_table.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "10"))
        item = self.record_files_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Ημερομηνία"))
        item = self.record_files_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Τίτλος"))
        item = self.record_files_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Όνομα"))
        item = self.record_files_table.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Επώνυμο"))
        item = self.record_files_table.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Διάρκεια"))
        __sortingEnabled = self.record_files_table.isSortingEnabled()
        self.record_files_table.setSortingEnabled(False)
        item = self.record_files_table.item(0, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.record_files_table.item(0, 1)
        item.setText(_translate("MainWindow", "Ηχογραφημένη ηχητική κλήση 1"))
        item = self.record_files_table.item(0, 2)
        item.setText(_translate("MainWindow", "Όνομα 1"))
        item = self.record_files_table.item(0, 3)
        item.setText(_translate("MainWindow", "Επώνυμο 1"))
        item = self.record_files_table.item(0, 4)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.record_files_table.item(1, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.record_files_table.item(1, 1)
        item.setText(_translate("MainWindow", "Ηχογραφημένη ηχητική κλήση 2"))
        item = self.record_files_table.item(1, 2)
        item.setText(_translate("MainWindow", "Όνομα 1"))
        item = self.record_files_table.item(1, 3)
        item.setText(_translate("MainWindow", "Επώνυμο 1"))
        item = self.record_files_table.item(1, 4)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.record_files_table.item(2, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.record_files_table.item(2, 1)
        item.setText(_translate("MainWindow", "Ηχογραφημένη ηχητική κλήση 3"))
        item = self.record_files_table.item(2, 2)
        item.setText(_translate("MainWindow", "Όνομα 1"))
        item = self.record_files_table.item(2, 3)
        item.setText(_translate("MainWindow", "Επώνυμο 1"))
        item = self.record_files_table.item(2, 4)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.record_files_table.item(3, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.record_files_table.item(3, 1)
        item.setText(_translate("MainWindow", "Ηχογραφημένη ηχητική κλήση 4"))
        item = self.record_files_table.item(3, 2)
        item.setText(_translate("MainWindow", "Όνομα 1"))
        item = self.record_files_table.item(3, 3)
        item.setText(_translate("MainWindow", "Επώνυμο 1"))
        item = self.record_files_table.item(3, 4)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.record_files_table.item(4, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.record_files_table.item(4, 1)
        item.setText(_translate("MainWindow", "Ηχογραφημένη ηχητική κλήση 5"))
        item = self.record_files_table.item(4, 2)
        item.setText(_translate("MainWindow", "Όνομα 1"))
        item = self.record_files_table.item(4, 3)
        item.setText(_translate("MainWindow", "Επώνυμο 1"))
        item = self.record_files_table.item(4, 4)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.record_files_table.item(5, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.record_files_table.item(5, 1)
        item.setText(_translate("MainWindow", "Ηχογραφημένη ηχητική κλήση 6"))
        item = self.record_files_table.item(5, 2)
        item.setText(_translate("MainWindow", "Όνομα 1"))
        item = self.record_files_table.item(5, 3)
        item.setText(_translate("MainWindow", "Επώνυμο 1"))
        item = self.record_files_table.item(5, 4)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.record_files_table.item(6, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.record_files_table.item(6, 1)
        item.setText(_translate("MainWindow", "Ηχογραφημένη ηχητική κλήση 7"))
        item = self.record_files_table.item(6, 2)
        item.setText(_translate("MainWindow", "Όνομα 1"))
        item = self.record_files_table.item(6, 3)
        item.setText(_translate("MainWindow", "Επώνυμο 1"))
        item = self.record_files_table.item(6, 4)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.record_files_table.item(7, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.record_files_table.item(7, 1)
        item.setText(_translate("MainWindow", "Ηχογραφημένη ηχητική κλήση 8"))
        item = self.record_files_table.item(7, 2)
        item.setText(_translate("MainWindow", "Όνομα 1"))
        item = self.record_files_table.item(7, 3)
        item.setText(_translate("MainWindow", "Επώνυμο 1"))
        item = self.record_files_table.item(7, 4)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.record_files_table.item(8, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.record_files_table.item(8, 1)
        item.setText(_translate("MainWindow", "Ηχογραφημένη ηχητική κλήση 9"))
        item = self.record_files_table.item(8, 2)
        item.setText(_translate("MainWindow", "Όνομα 1"))
        item = self.record_files_table.item(8, 3)
        item.setText(_translate("MainWindow", "Επώνυμο 1"))
        item = self.record_files_table.item(8, 4)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.record_files_table.item(9, 0)
        item.setText(_translate("MainWindow", "10-11-2023"))
        item = self.record_files_table.item(9, 1)
        item.setText(_translate("MainWindow", "Ηχογραφημένη ηχητική κλήση 10"))
        item = self.record_files_table.item(9, 2)
        item.setText(_translate("MainWindow", "Όνομα 1"))
        item = self.record_files_table.item(9, 3)
        item.setText(_translate("MainWindow", "Επώνυμο 1"))
        item = self.record_files_table.item(9, 4)
        item.setText(_translate("MainWindow", "00:01:00"))
        self.record_files_table.setSortingEnabled(__sortingEnabled)
        self.history_import.setStatusTip(_translate("MainWindow", "Εισαγωγή δελτίου καιρού"))
        self.history_import.setText(_translate("MainWindow", "Εισαγωγή ιστορικού αρχείου"))
        self.history_table.setStatusTip(_translate("MainWindow", "Πίνακας με τα διαθέσιμα δελτία καιρού"))
        item = self.history_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.history_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.history_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.history_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.history_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.history_table.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "6"))
        item = self.history_table.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "7"))
        item = self.history_table.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "8"))
        item = self.history_table.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "9"))
        item = self.history_table.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "10"))
        item = self.history_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Τίτλος"))
        item = self.history_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Διάρκεια"))
        __sortingEnabled = self.history_table.isSortingEnabled()
        self.history_table.setSortingEnabled(False)
        item = self.history_table.item(0, 0)
        item.setText(_translate("MainWindow", "Ιστορικό αρχείο 1"))
        item = self.history_table.item(0, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.history_table.item(1, 0)
        item.setText(_translate("MainWindow", "Ιστορικό αρχείο 2"))
        item = self.history_table.item(1, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.history_table.item(2, 0)
        item.setText(_translate("MainWindow", "Ιστορικό αρχείο 3"))
        item = self.history_table.item(2, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.history_table.item(3, 0)
        item.setText(_translate("MainWindow", "Ιστορικό αρχείο 4"))
        item = self.history_table.item(3, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.history_table.item(4, 0)
        item.setText(_translate("MainWindow", "Ιστορικό αρχείο 5"))
        item = self.history_table.item(4, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.history_table.item(5, 0)
        item.setText(_translate("MainWindow", "Ιστορικό αρχείο 6"))
        item = self.history_table.item(5, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.history_table.item(6, 0)
        item.setText(_translate("MainWindow", "Ιστορικό αρχείο 7"))
        item = self.history_table.item(6, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.history_table.item(7, 0)
        item.setText(_translate("MainWindow", "Ιστορικό αρχείο 8"))
        item = self.history_table.item(7, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.history_table.item(8, 0)
        item.setText(_translate("MainWindow", "Ιστορικό αρχείο 9"))
        item = self.history_table.item(8, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.history_table.item(9, 0)
        item.setText(_translate("MainWindow", "Ιστορικό αρχείο 10"))
        item = self.history_table.item(9, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        self.history_table.setSortingEnabled(__sortingEnabled)
        self.documentary_import.setStatusTip(_translate("MainWindow", "Εισαγωγή δελτίου καιρού"))
        self.documentary_import.setText(_translate("MainWindow", "Εισαγωγή ντοκιμαντέρ"))
        self.documentary_table.setStatusTip(_translate("MainWindow", "Πίνακας με τα διαθέσιμα δελτία καιρού"))
        item = self.documentary_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.documentary_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.documentary_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.documentary_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.documentary_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.documentary_table.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "6"))
        item = self.documentary_table.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "7"))
        item = self.documentary_table.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "8"))
        item = self.documentary_table.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "9"))
        item = self.documentary_table.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "10"))
        item = self.documentary_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Τίτλος"))
        item = self.documentary_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Διάρκεια"))
        __sortingEnabled = self.documentary_table.isSortingEnabled()
        self.documentary_table.setSortingEnabled(False)
        item = self.documentary_table.item(0, 0)
        item.setText(_translate("MainWindow", "Ντοκιμαντέρ 1"))
        item = self.documentary_table.item(0, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.documentary_table.item(1, 0)
        item.setText(_translate("MainWindow", "Ντοκιμαντέρ 2"))
        item = self.documentary_table.item(1, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.documentary_table.item(2, 0)
        item.setText(_translate("MainWindow", "Ντοκιμαντέρ 3"))
        item = self.documentary_table.item(2, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.documentary_table.item(3, 0)
        item.setText(_translate("MainWindow", "Ντοκιμαντέρ 4"))
        item = self.documentary_table.item(3, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.documentary_table.item(4, 0)
        item.setText(_translate("MainWindow", "Ντοκιμαντέρ 5"))
        item = self.documentary_table.item(4, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.documentary_table.item(5, 0)
        item.setText(_translate("MainWindow", "Ντοκιμαντέρ 6"))
        item = self.documentary_table.item(5, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.documentary_table.item(6, 0)
        item.setText(_translate("MainWindow", "Ντοκιμαντέρ 7"))
        item = self.documentary_table.item(6, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.documentary_table.item(7, 0)
        item.setText(_translate("MainWindow", "Ντοκιμαντέρ 8"))
        item = self.documentary_table.item(7, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.documentary_table.item(8, 0)
        item.setText(_translate("MainWindow", "Ντοκιμαντέρ 9"))
        item = self.documentary_table.item(8, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.documentary_table.item(9, 0)
        item.setText(_translate("MainWindow", "Ντοκιμαντέρ 10"))
        item = self.documentary_table.item(9, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        self.documentary_table.setSortingEnabled(__sortingEnabled)
        self.greek_lessons_import.setStatusTip(_translate("MainWindow", "Εισαγωγή αρχείου ηχογράφησης"))
        self.greek_lessons_import.setText(_translate("MainWindow", "Εισαγωγή μαθήματος αρχαίων ελληνικών"))
        self.greek_lessons_table.setStatusTip(_translate("MainWindow", "Πίνακας με τα διαθέσιμα ηχογραφημένα αρχεία"))
        item = self.greek_lessons_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.greek_lessons_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.greek_lessons_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.greek_lessons_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.greek_lessons_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.greek_lessons_table.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "6"))
        item = self.greek_lessons_table.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "7"))
        item = self.greek_lessons_table.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "8"))
        item = self.greek_lessons_table.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "9"))
        item = self.greek_lessons_table.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "10"))
        item = self.greek_lessons_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Τίτλος"))
        item = self.greek_lessons_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Ημερομηνία δημιουργίας"))
        item = self.greek_lessons_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Διάρκεια"))
        __sortingEnabled = self.greek_lessons_table.isSortingEnabled()
        self.greek_lessons_table.setSortingEnabled(False)
        item = self.greek_lessons_table.item(0, 0)
        item.setText(_translate("MainWindow", "Μάθημα αρχαίων ελληνικών 1"))
        item = self.greek_lessons_table.item(0, 1)
        item.setText(_translate("MainWindow", "10-01-2024"))
        item = self.greek_lessons_table.item(0, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.greek_lessons_table.item(1, 0)
        item.setText(_translate("MainWindow", "Μάθημα αρχαίων ελληνικών 2"))
        item = self.greek_lessons_table.item(1, 1)
        item.setText(_translate("MainWindow", "10-01-2024"))
        item = self.greek_lessons_table.item(1, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.greek_lessons_table.item(2, 0)
        item.setText(_translate("MainWindow", "Μάθημα αρχαίων ελληνικών 3"))
        item = self.greek_lessons_table.item(2, 1)
        item.setText(_translate("MainWindow", "10-01-2024"))
        item = self.greek_lessons_table.item(2, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.greek_lessons_table.item(3, 0)
        item.setText(_translate("MainWindow", "Μάθημα αρχαίων ελληνικών 4"))
        item = self.greek_lessons_table.item(3, 1)
        item.setText(_translate("MainWindow", "10-01-2024"))
        item = self.greek_lessons_table.item(3, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.greek_lessons_table.item(4, 0)
        item.setText(_translate("MainWindow", "Μάθημα αρχαίων ελληνικών 5"))
        item = self.greek_lessons_table.item(4, 1)
        item.setText(_translate("MainWindow", "10-01-2024"))
        item = self.greek_lessons_table.item(4, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.greek_lessons_table.item(5, 0)
        item.setText(_translate("MainWindow", "Μάθημα αρχαίων ελληνικών 6"))
        item = self.greek_lessons_table.item(5, 1)
        item.setText(_translate("MainWindow", "10-01-2024"))
        item = self.greek_lessons_table.item(5, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.greek_lessons_table.item(6, 0)
        item.setText(_translate("MainWindow", "Μάθημα αρχαίων ελληνικών 7"))
        item = self.greek_lessons_table.item(6, 1)
        item.setText(_translate("MainWindow", "10-01-2024"))
        item = self.greek_lessons_table.item(6, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.greek_lessons_table.item(7, 0)
        item.setText(_translate("MainWindow", "Μάθημα αρχαίων ελληνικών 8"))
        item = self.greek_lessons_table.item(7, 1)
        item.setText(_translate("MainWindow", "10-01-2024"))
        item = self.greek_lessons_table.item(7, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.greek_lessons_table.item(8, 0)
        item.setText(_translate("MainWindow", "Μάθημα αρχαίων ελληνικών 9"))
        item = self.greek_lessons_table.item(8, 1)
        item.setText(_translate("MainWindow", "10-01-2024"))
        item = self.greek_lessons_table.item(8, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.greek_lessons_table.item(9, 0)
        item.setText(_translate("MainWindow", "Μάθημα αρχαίων ελληνικών 10"))
        item = self.greek_lessons_table.item(9, 1)
        item.setText(_translate("MainWindow", "10-01-2024"))
        item = self.greek_lessons_table.item(9, 2)
        item.setText(_translate("MainWindow", "00:01:00"))
        self.greek_lessons_table.setSortingEnabled(__sortingEnabled)
        self.record_file_page.setStatusTip(_translate("MainWindow", "Περιεχόμενα και επιλογές που αφορούν ηχογραφημένα αρχεία"))
        self.record_file_table.setStatusTip(_translate("MainWindow", "Πίνακας με τα διαθέσιμα ηχογραφημένα αρχεία"))
        item = self.record_file_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.record_file_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.record_file_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.record_file_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.record_file_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.record_file_table.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "6"))
        item = self.record_file_table.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "7"))
        item = self.record_file_table.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "8"))
        item = self.record_file_table.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "9"))
        item = self.record_file_table.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "10"))
        item = self.record_file_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Τίτλος"))
        item = self.record_file_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Διάρκεια"))
        __sortingEnabled = self.record_file_table.isSortingEnabled()
        self.record_file_table.setSortingEnabled(False)
        item = self.record_file_table.item(0, 0)
        item.setText(_translate("MainWindow", "Ηχογραφημένο αρχείο 1"))
        item = self.record_file_table.item(0, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.record_file_table.item(1, 0)
        item.setText(_translate("MainWindow", "Ηχογραφημένο αρχείο 2"))
        item = self.record_file_table.item(1, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.record_file_table.item(2, 0)
        item.setText(_translate("MainWindow", "Ηχογραφημένο αρχείο 3"))
        item = self.record_file_table.item(2, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.record_file_table.item(3, 0)
        item.setText(_translate("MainWindow", "Ηχογραφημένο αρχείο 4"))
        item = self.record_file_table.item(3, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.record_file_table.item(4, 0)
        item.setText(_translate("MainWindow", "Ηχογραφημένο αρχείο 5"))
        item = self.record_file_table.item(4, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.record_file_table.item(5, 0)
        item.setText(_translate("MainWindow", "Ηχογραφημένο αρχείο 6"))
        item = self.record_file_table.item(5, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.record_file_table.item(6, 0)
        item.setText(_translate("MainWindow", "Ηχογραφημένο αρχείο 7"))
        item = self.record_file_table.item(6, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.record_file_table.item(7, 0)
        item.setText(_translate("MainWindow", "Ηχογραφημένο αρχείο 8"))
        item = self.record_file_table.item(7, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.record_file_table.item(8, 0)
        item.setText(_translate("MainWindow", "Ηχογραφημένο αρχείο 9"))
        item = self.record_file_table.item(8, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        item = self.record_file_table.item(9, 0)
        item.setText(_translate("MainWindow", "Ηχογραφημένο αρχείο 10"))
        item = self.record_file_table.item(9, 1)
        item.setText(_translate("MainWindow", "00:01:00"))
        self.record_file_table.setSortingEnabled(__sortingEnabled)
        self.record_file_import.setStatusTip(_translate("MainWindow", "Εισαγωγή αρχείου ηχογράφησης"))
        self.record_file_import.setText(_translate("MainWindow", "Εισαγωγή αρχείου ηχογράφησης"))
        self.page_3_main_list_widget.setStatusTip(_translate("MainWindow", "Περιεχόμενα"))
        __sortingEnabled = self.page_3_main_list_widget.isSortingEnabled()
        self.page_3_main_list_widget.setSortingEnabled(False)
        item = self.page_3_main_list_widget.item(0)
        item.setText(_translate("MainWindow", "Κεντρική λίστα αναπαραγωγής"))
        item = self.page_3_main_list_widget.item(1)
        item.setText(_translate("MainWindow", "Αρχεία ήχου"))
        item = self.page_3_main_list_widget.item(2)
        item.setText(_translate("MainWindow", "Λίστες αναπαραγωγής"))
        item = self.page_3_main_list_widget.item(3)
        item.setText(_translate("MainWindow", "Ηχητικά clips"))
        item = self.page_3_main_list_widget.item(4)
        item.setText(_translate("MainWindow", "Αναμεταδόσεις"))
        item = self.page_3_main_list_widget.item(5)
        item.setText(_translate("MainWindow", "Σήματα σταθμού"))
        item = self.page_3_main_list_widget.item(6)
        item.setText(_translate("MainWindow", "Συλλογές ώρας Ελλάδας"))
        item = self.page_3_main_list_widget.item(7)
        item.setText(_translate("MainWindow", "Δελτία εκκλησιαστικών ανακοινώσεων"))
        item = self.page_3_main_list_widget.item(8)
        item.setText(_translate("MainWindow", "Δελτία ειδήσεων"))
        item = self.page_3_main_list_widget.item(9)
        item.setText(_translate("MainWindow", "Δελτία καιρού"))
        item = self.page_3_main_list_widget.item(10)
        item.setText(_translate("MainWindow", "Αθλητικά δελτία ειδήσεων"))
        item = self.page_3_main_list_widget.item(11)
        item.setText(_translate("MainWindow", "Σαν σήμερα"))
        item = self.page_3_main_list_widget.item(12)
        item.setText(_translate("MainWindow", "Ηχογραφημένες ηχητικές κλήσεις"))
        item = self.page_3_main_list_widget.item(13)
        item.setText(_translate("MainWindow", "Ιστορικά"))
        item = self.page_3_main_list_widget.item(14)
        item.setText(_translate("MainWindow", "Ντοκιμαντέρ"))
        item = self.page_3_main_list_widget.item(15)
        item.setText(_translate("MainWindow", "Μαθήματα αρχαίων ελληνικών"))
        item = self.page_3_main_list_widget.item(16)
        item.setText(_translate("MainWindow", "Ηχογραφημένα αρχεία"))
        self.page_3_main_list_widget.setSortingEnabled(__sortingEnabled)
        self.menu.setStatusTip(_translate("MainWindow", "Διαχείριση αρχείων ήχου, αναμεταδόσεων, συσκευών, ηχητικών κλήσεων κ.α."))
        self.menu.setTitle(_translate("MainWindow", "Αρχείο"))
        self.menu_7.setStatusTip(_translate("MainWindow", "Διαχείριση αρχείων ήχου"))
        self.menu_7.setTitle(_translate("MainWindow", "Αρχεία ήχου"))
        self.menu_9.setStatusTip(_translate("MainWindow", "Προσθήκη αρχείου ήχου είτε στην λίστα αναπαραγωγής του main player είτε σε προγραμματισμένη μετάδοση"))
        self.menu_9.setTitle(_translate("MainWindow", "Προσθήκη αρχείου ήχου"))
        self.menu_8.setStatusTip(_translate("MainWindow", "Αναπαραγωγή αρχείου ήχου"))
        self.menu_8.setTitle(_translate("MainWindow", "Αναπαραγωγή αρχείου ήχου"))
        self.menu_34.setStatusTip(_translate("MainWindow", "Εισαγωγή αρχείου ήχου"))
        self.menu_34.setTitle(_translate("MainWindow", "Εισαγωγή αρχείου ήχου"))
        self.menu_35.setStatusTip(_translate("MainWindow", "Φόρτωση - προετοιμασία αρχείου ήχου για αναπαραγωγή"))
        self.menu_35.setTitle(_translate("MainWindow", "Προετοιμασία αρχείου ήχου"))
        self.menu_10.setStatusTip(_translate("MainWindow", "Διαχειριστείτε τις λίστες αναπαραγωγής"))
        self.menu_10.setTitle(_translate("MainWindow", "Λίστες αναπαραγωγής"))
        self.menu_11.setStatusTip(_translate("MainWindow", "Προσθήκη λίστας αναπαραγωγής είτε στην λίστα αναπαραγωγής του main player είτε σε προγραμματισμένη μετάδοση"))
        self.menu_11.setTitle(_translate("MainWindow", "Προσθήκη λίστας αναπαραγωγής"))
        self.menu_12.setStatusTip(_translate("MainWindow", "Εξαγωγή λίστας αναπαραγωγής είτε ως αρχεία ήχου είτε ως αρχείο λίστας αναπαραγωγής"))
        self.menu_12.setTitle(_translate("MainWindow", "Εξαγωγή λίστας αναπαραγωγής"))
        self.menu_32.setStatusTip(_translate("MainWindow", "Αναπαραγωγή λίστας αναπαραγωγής"))
        self.menu_32.setTitle(_translate("MainWindow", "Αναπαραγωγή λίστας αναπαραγωγής"))
        self.menu_clips.setStatusTip(_translate("MainWindow", "Διαχείριση μικρών αρχείων ήχου (ηχητικά clips)"))
        self.menu_clips.setTitle(_translate("MainWindow", "Ηχητικά clips"))
        self.menu_13.setStatusTip(_translate("MainWindow", "Προσθήκη ηχητικού clip είτε στην λίστα αναπαραγωγής του main player είτε σε προγραμματισμένη μετάδοση"))
        self.menu_13.setTitle(_translate("MainWindow", "Προσθήκη ηχητικού clip"))
        self.menu_33.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ηχητικού clip"))
        self.menu_33.setTitle(_translate("MainWindow", "Αναπαραγωγή ηχητικού clip"))
        self.menu_14.setStatusTip(_translate("MainWindow", "Διαχείριση ηχητικών συσκευών εισόδου και εξόδου"))
        self.menu_14.setTitle(_translate("MainWindow", "Διαχείριση συσκευών"))
        self.menu_15.setStatusTip(_translate("MainWindow", "Διαχείριση αναμεταδόσεων"))
        self.menu_15.setTitle(_translate("MainWindow", "Αναμεταδόσεις"))
        self.menu_16.setStatusTip(_translate("MainWindow", "Αναπαραγωγή αναμετάδοσης"))
        self.menu_16.setTitle(_translate("MainWindow", "Αναπαραγωγή αναμετάδοσης"))
        self.menu_17.setStatusTip(_translate("MainWindow", "Προσθήκη αναμετάδοσης είτε στην λίστα αναπαραγωγής του main player είτε σε προγραμματισμένη μετάδοση"))
        self.menu_17.setTitle(_translate("MainWindow", "Προσθήκη αναμετάδοσης"))
        self.menu_36.setStatusTip(_translate("MainWindow", "Φόρτωση - προετοιμασία αναμετάδοσης για αναπαραγωγή"))
        self.menu_36.setTitle(_translate("MainWindow", "Προετοιμασία αναμετάδοσης"))
        self.menu_20.setStatusTip(_translate("MainWindow", "Διαχείριση: 1) σημάτων σταθμού, 2) συλλογών ώρας Ελλάδας, 3) Δελτίων εκκλησιαστικών ανακοινώσεων, 4) Δελτίων ειδήσεων, 5) Δελτίων καιρού"))
        self.menu_20.setTitle(_translate("MainWindow", "Χρήσιμα επαναλαμβανόμενα (δελτία, σήμα σταθμού, ώρα Ελλάδας, ...)"))
        self.menu_21.setStatusTip(_translate("MainWindow", "Διαχείριση σήματος ραδιοφωνικού σταθμού (ηχητικό λογότυπο)"))
        self.menu_21.setTitle(_translate("MainWindow", "Σήμα σταθμού"))
        self.menu_22.setStatusTip(_translate("MainWindow", "Αναπαραγωγή σήματος σταθμού (ηχητικού λογοτύπου)"))
        self.menu_22.setTitle(_translate("MainWindow", "Αναπαραγωγή σήματος σταθμού"))
        self.menu_23.setStatusTip(_translate("MainWindow", "Προσθήκη σήματος σταθμού είτε στην λίστα αναπαραγωγής του main player είτε σε προγραμματισμένη μετάδοση"))
        self.menu_23.setTitle(_translate("MainWindow", "Προσθήκη σήματος σταθμού"))
        self.menu_station_logo_35.setStatusTip(_translate("MainWindow", "Φόρτωση - προετοιμασία σήματος σταθμού για αναπαραγωγή"))
        self.menu_station_logo_35.setTitle(_translate("MainWindow", "Προετοιμασία σήματος σταθμού"))
        self.menu_24.setStatusTip(_translate("MainWindow", "Διαχείριση συλλογής ώρας Ελλάδας"))
        self.menu_24.setTitle(_translate("MainWindow", "Ώρα Ελλάδας"))
        self.menu_25.setStatusTip(_translate("MainWindow", "Προσθήκη συλλογής ώρας Ελλάδας είτε στην λίστα αναπαραγωγής του main player είτε σε προγραμματισμένη μετάδοση"))
        self.menu_25.setTitle(_translate("MainWindow", "Προσθήκη ώρα Ελλάδας"))
        self.menu_26.setStatusTip(_translate("MainWindow", "Διαχείριση δελτίων εκκλησιαστικών ανακοινώσεων"))
        self.menu_26.setTitle(_translate("MainWindow", "Δελτίο εκκλησιαστικών ανακοινώσεων"))
        self.menu_27.setStatusTip(_translate("MainWindow", "Αναπαραγωγή δελτίου εκκλησιαστικών ανακοινώσεων"))
        self.menu_27.setTitle(_translate("MainWindow", "Αναπαραγωγή δελτίου εκκλησιαστικών ανακοινώσεων"))
        self.menu_28.setStatusTip(_translate("MainWindow", "Προσθήκη δελτίου εκκλησιαστικών ανακοινώσεων είτε στην λίστα αναπαραγωγής του main player είτε σε προγραμματισμένη μετάδοση"))
        self.menu_28.setTitle(_translate("MainWindow", "Προσθήκη δελτίου εκκλησιαστικών ανακοινώσεων"))
        self.menu_church_news_35.setStatusTip(_translate("MainWindow", "Φόρτωση - προετοιμασία δελτίου εκκλησιαστικών ανακοινώσεων για αναπαραγωγή"))
        self.menu_church_news_35.setTitle(_translate("MainWindow", "Προετοιμασία δελτίου εκκλησιαστικών ανακοινώσεων"))
        self.menu_29.setStatusTip(_translate("MainWindow", "Διαχείριση δελτίων καιρού"))
        self.menu_29.setTitle(_translate("MainWindow", "Δελτίο καιρού"))
        self.menu_30.setStatusTip(_translate("MainWindow", "Αναπαραγωγή δελτίου καιρού"))
        self.menu_30.setTitle(_translate("MainWindow", "Αναπαραγωγή δελτίου καιρού"))
        self.menu_31.setStatusTip(_translate("MainWindow", "Προσθήκη δελτίου καιρού είτε στην λίστα αναπαραγωγής του main player είτε σε προγραμματισμένη μετάδοση"))
        self.menu_31.setTitle(_translate("MainWindow", "Προσθήκη δελτίου καιρού"))
        self.menu_weather_news_35.setStatusTip(_translate("MainWindow", "Φόρτωση - προετοιμασία δελτίου καιρού για αναπαραγωγή"))
        self.menu_weather_news_35.setTitle(_translate("MainWindow", "Προετοιμασία δελτίου καιρού"))
        self.menu_like_today.setStatusTip(_translate("MainWindow", "Διαχείριση \"Σαν σήμερα\""))
        self.menu_like_today.setTitle(_translate("MainWindow", "Δελτίο \"Σαν σήμερα\""))
        self.menu_30_1.setStatusTip(_translate("MainWindow", "Αναπαραγωγή \"Σαν σήμερα\""))
        self.menu_30_1.setTitle(_translate("MainWindow", "Αναπαραγωγή \"Σαν σήμερα\""))
        self.menu_31_1.setStatusTip(_translate("MainWindow", "Προσθήκη \"Σαν σήμερα\" είτε στην λίστα αναπαραγωγής του main player είτε σε προγραμματισμένη μετάδοση"))
        self.menu_31_1.setTitle(_translate("MainWindow", "Προσθήκη \"Σαν σήμερα\""))
        self.menu_like_today_35.setStatusTip(_translate("MainWindow", "Φόρτωση - προετοιμασία \"Σαν σήμερα\" για αναπαραγωγή"))
        self.menu_like_today_35.setTitle(_translate("MainWindow", "Προετοιμασία \"Σαν σήμερα\""))
        self.menu_38.setStatusTip(_translate("MainWindow", "Διαχείριση δελτίων ειδήσεων"))
        self.menu_38.setTitle(_translate("MainWindow", "Δελτίο ειδήσεων"))
        self.menu_news_27.setStatusTip(_translate("MainWindow", "Αναπαραγωγή δελτίου ειδήσεων"))
        self.menu_news_27.setTitle(_translate("MainWindow", "Αναπαραγωγή δελτίου ειδήσεων"))
        self.menu_news_28.setStatusTip(_translate("MainWindow", "Προσθήκη δελτίου ειδήσεων είτε στην λίστα αναπαραγωγής του main player είτε σε προγραμματισμένη μετάδοση"))
        self.menu_news_28.setTitle(_translate("MainWindow", "Προσθήκη δελτίου ειδήσεων"))
        self.menu_news_35.setStatusTip(_translate("MainWindow", "Φόρτωση - προετοιμασία δελτίου ειδήσεων για αναπαραγωγή"))
        self.menu_news_35.setTitle(_translate("MainWindow", "Προετοιμασία δελτίου ειδήσεων"))
        self.menu_3.setStatusTip(_translate("MainWindow", "Δελτίο αθλητικών ειδήσεων"))
        self.menu_3.setTitle(_translate("MainWindow", "Δελτίο αθλητικών ειδήσεων"))
        self.menu_5.setStatusTip(_translate("MainWindow", "Αναπαραγωγή δελτίου αθλητικών ειδήσεων"))
        self.menu_5.setTitle(_translate("MainWindow", "Αναπαραγωγή δελτίου αθλητικών ειδήσεων"))
        self.menu_6.setStatusTip(_translate("MainWindow", "Προετοιμασία δελτίου αθλητικών ειδήσεων"))
        self.menu_6.setTitle(_translate("MainWindow", "Προετοιμασία δελτίου αθλητικών ειδήσεων"))
        self.menu_45.setStatusTip(_translate("MainWindow", "Προσθήκη δελτίου αθλητικών ειδήσεων"))
        self.menu_45.setTitle(_translate("MainWindow", "Προσθήκη δελτίου αθλητικών ειδήσεων"))
        self.menu_39.setStatusTip(_translate("MainWindow", "Διαχείριση ηχητικών κλήσεων"))
        self.menu_39.setTitle(_translate("MainWindow", "Ηχητικές κλήσεις"))
        self.menu_40.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ηχογραφημένης ηχητικής κλήσης"))
        self.menu_40.setTitle(_translate("MainWindow", "Αναπαραγωγή ηχογραφημένης ηχητικής κλήσης"))
        self.menu_41.setStatusTip(_translate("MainWindow", "Φόρτωση - προετοιμασία ηχογραφημένης ηχητικής κλήσης για αναπαραγωγή"))
        self.menu_41.setTitle(_translate("MainWindow", "Προετοιμασία ηχητικής κλήσης"))
        self.menu_42.setStatusTip(_translate("MainWindow", "Προσθήκη ηχογραφημένης ηχητικής κλήσης είτε στην λίστα αναπαραγωγής του main player είτε σε προγραμματισμένη μετάδοση"))
        self.menu_42.setTitle(_translate("MainWindow", "Προσθήκη ηχητικής κλήσης"))
        self.menu_100.setToolTip(_translate("MainWindow", "Εισαγωγή ιστορικού αρχείου"))
        self.menu_100.setStatusTip(_translate("MainWindow", "Ιστορικά"))
        self.menu_100.setTitle(_translate("MainWindow", "Ιστορικά"))
        self.menu_47.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ιστορικού αρχείου"))
        self.menu_47.setTitle(_translate("MainWindow", "Αναπαραγωγή ιστορικού αρχείου"))
        self.menu_48.setStatusTip(_translate("MainWindow", "Προετοιμασία ιστορικού αρχείου"))
        self.menu_48.setTitle(_translate("MainWindow", "Προετοιμασία ιστορικού αρχείου"))
        self.menu_49.setToolTip(_translate("MainWindow", "Προσθήκη ιστορικού αρχείου στην λίστα αναπαραγωγής του main player (στην αρχή)"))
        self.menu_49.setStatusTip(_translate("MainWindow", "Προσθήκη ιστορικού αρχείου"))
        self.menu_49.setTitle(_translate("MainWindow", "Προσθήκη ιστορικού αρχείου"))
        self.menu_46.setStatusTip(_translate("MainWindow", "Ντοκιμαντέρ"))
        self.menu_46.setTitle(_translate("MainWindow", "Ντοκιμαντέρ"))
        self.menu_50.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ντοκιμαντέρ"))
        self.menu_50.setTitle(_translate("MainWindow", "Αναπαραγωγή ντοκιμαντέρ"))
        self.menu_51.setStatusTip(_translate("MainWindow", "Προετοιμασία ντοκιμαντέρ"))
        self.menu_51.setTitle(_translate("MainWindow", "Προετοιμασία ντοκιμαντέρ"))
        self.menu_52.setStatusTip(_translate("MainWindow", "Προσθήκη ντοκιμαντέρ"))
        self.menu_52.setTitle(_translate("MainWindow", "Προσθήκη ντοκιμαντέρ"))
        self.menu_53.setStatusTip(_translate("MainWindow", "Εισαγωγή μαθήματος αρχαίων ελληνικών"))
        self.menu_53.setTitle(_translate("MainWindow", "Μαθήματα αρχαίων ελληνικών"))
        self.menu_54.setStatusTip(_translate("MainWindow", "Αναπαραγωγή μαθήματος αρχαίων ελληνικών"))
        self.menu_54.setTitle(_translate("MainWindow", "Αναπαραγωγή μαθήματος αρχαίων ελληνικών"))
        self.menu_55.setStatusTip(_translate("MainWindow", "Προετοιμασία μαθήματος αρχαίων ελληνικών"))
        self.menu_55.setTitle(_translate("MainWindow", "Προετοιμασία μαθήματος αρχαίων ελληνικών"))
        self.menu_56.setStatusTip(_translate("MainWindow", "Προσθήκη μαθήματος αρχαίων ελληνικών"))
        self.menu_56.setTitle(_translate("MainWindow", "Προσθήκη μαθήματος αρχαίων ελληνικών"))
        self.menu_2.setStatusTip(_translate("MainWindow", "Ρυθμίση διάφορες παραμέτρους εμφάνισης του προγράμματος όπως π.χ. το μέγεθος της γραμματοσειράς"))
        self.menu_2.setTitle(_translate("MainWindow", "Επιλογές μορφοποίησης"))
        self.menu_4.setStatusTip(_translate("MainWindow", "Βοηθητικές επιλογές όπως επικοινωνία με τον δημιουργό του προγράμματος"))
        self.menu_4.setTitle(_translate("MainWindow", "Βοήθεια"))
        self.menu_19.setStatusTip(_translate("MainWindow", "Αυτόματη δημιουργία και εμφάνιση σε μορφή pdf αναφορών προγράμματος"))
        self.menu_19.setTitle(_translate("MainWindow", "Αναφορές"))
        self.menu_18.setTitle(_translate("MainWindow", "Ηχογράφηση"))
        self.menu_37.setStatusTip(_translate("MainWindow", "Διαχείριση υπάρχοντων ηχογραφημένων αρχείων"))
        self.menu_37.setTitle(_translate("MainWindow", "Ηχογραφημένα αρχεία"))
        self.menu_record_8.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ηχογραφημένου αρχείου"))
        self.menu_record_8.setTitle(_translate("MainWindow", "Αναπαραγωγή ηχογραφημένου αρχείου"))
        self.menu_record_35.setStatusTip(_translate("MainWindow", "Φόρτωση - προετοιμασία ηχογραφημένου αρχείου για αναπαραγωγή"))
        self.menu_record_35.setTitle(_translate("MainWindow", "Προετοιμασία ηχογραφημένου αρχείου"))
        self.menu_record_9.setStatusTip(_translate("MainWindow", "Προσθήκη ηχογραφημένου αρχείου είτε στην λίστα αναπαραγωγής του main player είτε σε προγραμματισμένη μετάδοση"))
        self.menu_record_9.setTitle(_translate("MainWindow", "Προσθήκη ηχογραφημένου αρχείου"))
        self.menu_43.setTitle(_translate("MainWindow", "Ραδιοφωνικές συνδέσεις"))
        self.menu_44.setStatusTip(_translate("MainWindow", "Δημιουργία, επεξεργασία, προεπισκόπιση και διαγραφή προγραμματισμένων μεταδόσεων"))
        self.menu_44.setTitle(_translate("MainWindow", "Προγραμματισμένες μεταδόσεις"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.menu_manual.setText(_translate("MainWindow", "Εγχειρίδιο χρήσης"))
        self.menu_manual.setStatusTip(_translate("MainWindow", "Άνοιγμα του pdf αρχείο με το εγχειρίδιο χρήσης"))
        self.menu_manual.setShortcut(_translate("MainWindow", "F1"))
        self.menu_abstract_information.setText(_translate("MainWindow", "Λίγα λόγια για το πρόγραμμα"))
        self.menu_abstract_information.setStatusTip(_translate("MainWindow", "Λίγα λόγια για το πρόγραμμα"))
        self.menu_contact.setText(_translate("MainWindow", "Επικοινωνία"))
        self.menu_contact.setStatusTip(_translate("MainWindow", "Επικοινωνία μέσω φόρμας (e-mail) με τον δημιουργό του προγράμματος"))
        self.menu_choose_theme.setText(_translate("MainWindow", "Επιλογή θέματος"))
        self.menu_choose_theme.setStatusTip(_translate("MainWindow", "Επιλέξτε το στυλ του προγράμματος"))
        self.menu_select_player_list_fields.setText(_translate("MainWindow", "Ορατά πεδία της Λίστας αναπαραγωγής"))
        self.menu_select_player_list_fields.setStatusTip(_translate("MainWindow", "Επιλέξτε τα ορατά πεδία της λίστας αναπαραγωγής"))
        self.menu_programm_components.setText(_translate("MainWindow", "Ορατά πεδία προγράμματος"))
        self.menu_programm_components.setStatusTip(_translate("MainWindow", "Επιλέξτε τα ορατά πεδία προγράμματος"))
        self.menu_manage_tasks.setText(_translate("MainWindow", "Διαχείριση διεργασιών"))
        self.menu_manage_tasks.setStatusTip(_translate("MainWindow", "Διαχείριση διεργασιών προγράμματος"))
        self.menu_manage_tasks.setShortcut(_translate("MainWindow", "F10"))
        self.menu_save_and_exit.setText(_translate("MainWindow", "Αποθήκευση και έξοδος"))
        self.menu_save_and_exit.setStatusTip(_translate("MainWindow", "Αποθήκευση αλλαγών και τερματισμός προγράμματος"))
        self.menu_save_and_exit.setShortcut(_translate("MainWindow", "Alt+F4"))
        self.menu_sound_file_export.setText(_translate("MainWindow", "Εξαγωγή αρχείου ήχου"))
        self.menu_sound_file_export.setStatusTip(_translate("MainWindow", "Εξαγωγή αρχείου ήχου σε μορφές mp3, wav, aac, flv, ogg"))
        self.menu_sound_file_edit.setText(_translate("MainWindow", "Επεξεργασία αρχείου ήχου"))
        self.menu_sound_file_edit.setStatusTip(_translate("MainWindow", "Επεξεργασία ιδιοτήτων αρχείων ήχου όπως ο τίτλος του και η συσχετιζόμενη εικόνα του"))
        self.menu_sound_file_preview.setText(_translate("MainWindow", "Προεπισκόπηση αρχείου ήχου"))
        self.menu_sound_file_preview.setStatusTip(_translate("MainWindow", "Αναπαραγωγή αρχείου ήχου μέσω προεπισκόπισής του"))
        self.menu_sound_file_delete.setText(_translate("MainWindow", "Διαγραφή αρχείου ήχου"))
        self.menu_sound_file_delete.setStatusTip(_translate("MainWindow", "Οριστική διαγραφή αρχείου ήχου"))
        self.menu_sound_file_play_now_deck_1.setText(_translate("MainWindow", "Αναπαραγωγή αρχείου ήχου τώρα στο deck 1"))
        self.menu_sound_file_play_now_deck_1.setStatusTip(_translate("MainWindow", "Αναπαραγωγή αρχείου ήχου στο deck 1"))
        self.menu_sound_file_play_now_deck_2.setText(_translate("MainWindow", "Αναπαραγωγή αρχείου ήχου τώρα στο deck 2"))
        self.menu_sound_file_play_now_deck_2.setStatusTip(_translate("MainWindow", "Αναπαραγωγή αρχείου ήχου στο deck 2"))
        self.menu_sound_file_play_when_ready.setText(_translate("MainWindow", "Αναπαραγωγή αρχείου ήχου σε διαθέσιμο deck"))
        self.menu_sound_file_play_when_ready.setStatusTip(_translate("MainWindow", "Αναπαραγωγή αρχείο ήχου όταν τελειώσει το κομμάτι που παίζει τώρα"))
        self.menu_record_play_now_deck_1.setText(_translate("MainWindow", "Αναπαραγωγή ηχογραφημένου αρχείου ήχου τώρα στο deck 1"))
        self.menu_record_play_now_deck_1.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ηχογραφημένου αρχείου στο deck 1"))
        self.menu_record_play_now_deck_2.setText(_translate("MainWindow", "Αναπαραγωγή ηχογραφημένου αρχείου ήχου τώρα στο deck 2"))
        self.menu_record_play_now_deck_2.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ηχογραφημένου αρχείου στο deck 2"))
        self.menu_record_play_when_ready.setText(_translate("MainWindow", "Αναπαραγωγή ηχογραφημένου αρχείου ήχου σε διαθέσιμο deck"))
        self.menu_record_play_when_ready.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ηχογραφημένου αρχείου όταν τελειώσει το κομμάτι που παίζει τώρα"))
        self.menu_record_add_to_player_list_top.setText(_translate("MainWindow", "Προσθήκη ηχογραφημένου αρχείου στην κεντρική λίστα αναπαραγωγής στην αρχή"))
        self.menu_record_add_to_player_list_top.setStatusTip(_translate("MainWindow", "Προσθήκη ηχογραφημένου αρχείου στην κορυφή της κεντρικής λίστας αναπαραγωγής"))
        self.menu_record_add_to_player_list_bottom.setText(_translate("MainWindow", "Προσθήκη ηχογραφημένου αρχείου στην κεντρική λίστα αναπαραγωγής στο τέλος"))
        self.menu_record_add_to_player_list_bottom.setStatusTip(_translate("MainWindow", "Προσθήκη ηχογραφημένου αρχείου στο τέλος της κεντρικής λίστας αναπαραγωγής"))
        self.menu_record_add_to_new_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη ηχογραφημένου αρχείου σε νέα προγραμματισμένη μετάδοση"))
        self.menu_record_add_to_new_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη ηχογραφημένου αρχείου σε νέα προγραμματισμένη μετάδοση"))
        self.menu_record_add_to_existed_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη ηχογραφημένου αρχείου σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_record_add_to_existed_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη ηχογραφημένου αρχείου σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_sound_file_add_to_player_list_top.setText(_translate("MainWindow", "Προσθήκη αρχείου ήχου στην κεντρική λίστα αναπαραγωγής στην αρχή"))
        self.menu_sound_file_add_to_player_list_top.setStatusTip(_translate("MainWindow", "Προσθήκη αρχείου ήχου στην κορυφή της κεντρικής λίστας αναπαραγωγής"))
        self.menu_sound_file_add_to_player_list_bottom.setText(_translate("MainWindow", "Προσθήκη αρχείου ήχου στην κεντρική λίστα αναπαραγωγής στο τέλος"))
        self.menu_sound_file_add_to_player_list_bottom.setStatusTip(_translate("MainWindow", "Προσθήκη αρχείου ήχου στο τέλος της κεντρικής λίστας αναπαραγωγής"))
        self.menu_sound_file_add_to_new_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη αρχείου ήχου σε νέα προγραμματισμένη μετάδοση"))
        self.menu_sound_file_add_to_new_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη αρχείου ήχου σε νέα προγραμματισμένη μετάδοση"))
        self.menu_sound_file_add_to_existed_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη αρχείου ήχου σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_sound_file_add_to_existed_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη αρχείου ήχου σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_playlist_import.setText(_translate("MainWindow", "Εισαγωγή λίστας αναπαραγωγής"))
        self.menu_playlist_import.setStatusTip(_translate("MainWindow", "Εισαγωγή λίστας αναπαραγωγής"))
        self.menu_playlist_create.setText(_translate("MainWindow", "Δημιουργία λίστας αναπαραγωγής"))
        self.menu_playlist_create.setStatusTip(_translate("MainWindow", "Δημιουργία λίστας αναπαραγωγής που μπορεί να περιέχει αρχεία ήχου και αναμεταδόσεις"))
        self.menu_playlist_edit.setText(_translate("MainWindow", "Επεξεργασία λίστας αναπαραγωγής"))
        self.menu_playlist_edit.setStatusTip(_translate("MainWindow", "Επεξεργασία ιδιοτήτων λίστας αναπαραγωγής όπως ο τίτλος του και τα δεδομένα που περιέχει (αρχεία ήχου, αναμεταδόσεις)"))
        self.menu_playlist_preview.setText(_translate("MainWindow", "Προεπισκόπηση λίστας αναπαραγωγής"))
        self.menu_playlist_preview.setStatusTip(_translate("MainWindow", "Προεπισκόπιση περιεχομένων λίστας αναπαραγωγής"))
        self.menu_playlist_delete.setText(_translate("MainWindow", "Διαγραφή λίστας αναπαραγωγής"))
        self.menu_playlist_delete.setStatusTip(_translate("MainWindow", "Οριστική διαγραφή λίστας αναπαραγωγής"))
        self.menu_playlist_add_to_playlist_top.setText(_translate("MainWindow", "Προσθήκη λίστας αναπαραγωγής στην κεντρική λίστα αναπαραγωγής στην αρχή"))
        self.menu_playlist_add_to_playlist_top.setStatusTip(_translate("MainWindow", "Προσθήκη λίστας αναπαραγωγής στην κορυφή της κεντρικής λίστας αναπαραγωγής"))
        self.menu_playlist_add_to_playlist_bottom.setText(_translate("MainWindow", "Προσθήκη λίστας αναπαραγωγής στην κεντρική λίστα αναπαραγωγής στο τέλος"))
        self.menu_playlist_add_to_playlist_bottom.setStatusTip(_translate("MainWindow", "Προσθήκη λίστας αναπαραγωγής στην κεντρική λίστα αναπαραγωγής στο τέλος"))
        self.menu_playlist_add_to_new_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη λίστας αναπαραγωγής σε νέα προγραμματισμένη μετάδοση"))
        self.menu_playlist_add_to_new_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη λίστας αναπαραγωγής σε νέα προγραμματισμένη μετάδοση"))
        self.menu_playlist_add_to_existed_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη λίστας αναπαραγωγής σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_playlist_add_to_existed_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη λίστας αναπαραγωγής σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_playlist_export_as_playlist.setText(_translate("MainWindow", "Ως αρχείο λίστας αναπαραγωγής"))
        self.menu_playlist_export_as_sound_files.setText(_translate("MainWindow", "Ως αρχεία ήχου"))
        self.menu_sound_clips_import.setText(_translate("MainWindow", "Εισαγωγή ηχητικού clip"))
        self.menu_sound_clips_import.setStatusTip(_translate("MainWindow", "Εισαγωγή μικρών αρχείων ήχου (ηχητικά clips) στην δισκοθήκη"))
        self.menu_sound_clips_classification.setText(_translate("MainWindow", "Ταξινόμηση ηχητικών clips"))
        self.menu_sound_clips_classification.setStatusTip(_translate("MainWindow", "Ταξινόμιση των δέκα πρώτων ηχητικών clip"))
        self.menu_sound_clips_export.setText(_translate("MainWindow", "Εξαγωγή ηχητικού clip"))
        self.menu_sound_clips_export.setStatusTip(_translate("MainWindow", "Εξαγωγή ηχητικού clip σε μορφές mp3, wav, aac, flv, ogg"))
        self.menu_sound_clips_edit.setText(_translate("MainWindow", "Επεξεργασία ηχητικού clip"))
        self.menu_sound_clips_edit.setStatusTip(_translate("MainWindow", "Επεξεργασία ιδιοτήτων ηχητικού clip όπως ο τίτλος του και η βαθμολογία του"))
        self.menu_sound_clips_preview.setText(_translate("MainWindow", "Προεπισκόπηση ηχητικού clip"))
        self.menu_sound_clips_preview.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ηχητικού clip μέσω προεπισκόπισής του"))
        self.menu_sound_clips_delete.setText(_translate("MainWindow", "Διαγραφή ηχητικού clip"))
        self.menu_sound_clips_delete.setStatusTip(_translate("MainWindow", "Οριστική διαγραφή ηχητικού clip"))
        self.menu_sound_clips_add_to_playlist_top.setText(_translate("MainWindow", "Προσθήκη ηχητικού clip στην κεντρική λίστα αναπαραγωγής στην αρχή"))
        self.menu_sound_clips_add_to_playlist_top.setStatusTip(_translate("MainWindow", "Προσθήκη ηχητικού clip στην κορυφή της κεντρικής λίστας αναπαραγωγής"))
        self.menu_sound_clips_add_to_playlist_bottom.setText(_translate("MainWindow", "Προσθήκη ηχητικού clip στην κεντρική λίστα αναπαραγωγής στο τέλος"))
        self.menu_sound_clips_add_to_playlist_bottom.setStatusTip(_translate("MainWindow", "Προσθήκη ηχητικού clip στο τέλος της κεντρικής λίστας αναπαραγωγής"))
        self.menu_sound_clips_add_to_new_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη ηχητικού clip σε νέα προγραμματισμένη μετάδοση"))
        self.menu_sound_clips_add_to_new_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη ηχητικού clip σε νέα προγραμματισμένη μετάδοση"))
        self.menu_sound_clips_add_to_existed_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη ηχητικού clip σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_sound_clips_add_to_existed_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη ηχητικού clip σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_manage_output_devices.setText(_translate("MainWindow", "Ρύθμιση ηχείων"))
        self.menu_manage_output_devices.setStatusTip(_translate("MainWindow", "Επιλογή και ρύθμιση ηχτικών συσκεύων εξόδου (ηχεία)"))
        self.menu_manage_input_device.setText(_translate("MainWindow", "Ρύθμιση μικροφώνου"))
        self.menu_manage_input_device.setStatusTip(_translate("MainWindow", "Επιλογή και ρύθμιση ηχητικής συσκευής εισόδου (μικρόφωνο)"))
        self.menu_retransmitions_import.setText(_translate("MainWindow", "Εισαγωγή αναμετάδοσης"))
        self.menu_retransmitions_import.setStatusTip(_translate("MainWindow", "Εισαγωγή url αναμετάδοσης με τρεις τρόπους"))
        self.menu_retransmitions_edit.setText(_translate("MainWindow", "Επεξεργασία αναμετάδοσης"))
        self.menu_retransmitions_edit.setStatusTip(_translate("MainWindow", "Επεξεργασία ιδιοτήτων αναμετάδοσης όπως ο τίτλος και η διεύθυνση internet"))
        self.menu_retransmitions_preview.setText(_translate("MainWindow", "Προεπισκόπηση αναμετάδοσης"))
        self.menu_retransmitions_preview.setStatusTip(_translate("MainWindow", "Αναπαραγωγή αναμετάδοσης μέσω προεπισκόπισης"))
        self.menu_retransmitions_export.setText(_translate("MainWindow", "Εξαγωγή αναμετάδοσης ως αρχείο playlist"))
        self.menu_retransmitions_export.setStatusTip(_translate("MainWindow", "Εξαγωγή αναμετάδοσης σε αρχείο λίστας αναπαραγωγής το οποίο θα έχει την ιδιότητα της φορητότητας"))
        self.menu_retransmitions_delete.setText(_translate("MainWindow", "Διαγραφή αναμετάδοσης"))
        self.menu_retransmitions_delete.setStatusTip(_translate("MainWindow", "Οριστική διαγραφή λίστας αναπαραγωγής"))
        self.menu_retransmitions_play_now_on_deck_1.setText(_translate("MainWindow", "Αναπαραγωγή αναμετάδοσης τώρα στο deck 1"))
        self.menu_retransmitions_play_now_on_deck_1.setStatusTip(_translate("MainWindow", "Αναπαραγωγή αναμετάδοσης στο deck 1"))
        self.menu_retransmitions_play_now_on_deck_2.setText(_translate("MainWindow", "Αναπαραγωγή αναμετάδοσης τώρα στο deck 2"))
        self.menu_retransmitions_play_now_on_deck_2.setStatusTip(_translate("MainWindow", "Αναπαραγωγή αναμετάδοσης στο deck 2"))
        self.menu_retransmitions_play_when_ready.setText(_translate("MainWindow", "Αναπαραγωγή αναμετάδοσης σε διαθέσιμο deck"))
        self.menu_retransmitions_play_when_ready.setStatusTip(_translate("MainWindow", "Αναπαραγωγή αναμετάδοσης όταν τελειώσει το κομμάτι που παίζει τώρα"))
        self.menu_retransmitions_add_to_player_list_top.setText(_translate("MainWindow", "Προσθήκη αναμετάδοσης στην κεντρική λίστα αναπαραγωγής στην αρχή"))
        self.menu_retransmitions_add_to_player_list_top.setStatusTip(_translate("MainWindow", "Προσθήκη αναμετάδοσης στην κορυφή της κεντρικής λίστας αναπαραγωγής"))
        self.menu_retransmitions_add_to_player_list_bottom.setText(_translate("MainWindow", "Προσθήκη αναμετάδοσης στην λίστα αναπαραγωγής του main player (στο τέλος)"))
        self.menu_retransmitions_add_to_player_list_bottom.setStatusTip(_translate("MainWindow", "Προσθήκη αναμετάδοσης στο τέλος της κεντρικής λίστας αναπαραγωγής"))
        self.menu_retransmitions_add_to_new_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη αναμετάδοσης σε νέα προγραμματισμένη μετάδοση"))
        self.menu_retransmitions_add_to_new_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη αναμετάδοσης σε νέα προγραμματισμένη μετάδοση"))
        self.menu_retransmitions_add_to_existed_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη αναμετάδοσης σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_retransmitions_add_to_existed_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη αναμετάδοσης σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_record_start.setText(_translate("MainWindow", "Έναρξη ηχογράφησης"))
        self.menu_record_start.setStatusTip(_translate("MainWindow", "Έναρξη ηχογράφησης του τελικού σήματος εξόδου"))
        self.menu_record_start.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.menu_record_pause.setText(_translate("MainWindow", "Παύση ηχογράφησης"))
        self.menu_record_pause.setStatusTip(_translate("MainWindow", "Παύση ηχογράφης"))
        self.menu_record_stop.setText(_translate("MainWindow", "Λήξη ηχογράφησης"))
        self.menu_record_stop.setStatusTip(_translate("MainWindow", "Λήξη ηχογράφησης"))
        self.menu_report_scheduled_transmition.setText(_translate("MainWindow", "Αναφορά προγραμματισμένων μεταδόσεων"))
        self.menu_report_scheduled_transmition.setStatusTip(_translate("MainWindow", "Επιλογή μίας προγραμματισμένης μετάδοσης και επισκόπισή της μέσω δημιουργίας αναφοράς "))
        self.menu_report_week_programm.setText(_translate("MainWindow", "Εβδομαδιαίο πρόγραμμα σταθμού"))
        self.menu_report_week_programm.setStatusTip(_translate("MainWindow", "Δημιουργία αναφοράς που αφορά το εβδομαδιαίο πρόγραμμα του σταθμού"))
        self.menu_report_general_deck_history.setText(_translate("MainWindow", "Ιστορικό μεταδόσεων"))
        self.menu_report_general_deck_history.setStatusTip(_translate("MainWindow", "Δημιουργία αναφοράς που αφορά το ιστορικό των μεταδόσεων (decks history)"))
        self.menu_report_listeners_statistics.setText(_translate("MainWindow", "Στατιστικά ακροατών"))
        self.menu_report_listeners_statistics.setStatusTip(_translate("MainWindow", "Δημιουργία αναφοράς που αφορά στατιστικά στοιχεία σε σχέση με τους ακροατές"))
        self.menu_station_logos_import.setText(_translate("MainWindow", "Εισαγωγή σήματος σταθμού"))
        self.menu_station_logos_import.setStatusTip(_translate("MainWindow", "Εισαγωγής σήματος σταθμού (ηχητικού λογοτύπου)"))
        self.menu_station_logos_default.setText(_translate("MainWindow", "Προεπιλεγμένο σήμα σταθμού"))
        self.menu_station_logos_default.setStatusTip(_translate("MainWindow", "Επιλογή προεπιλεγμένου σήματος σταθμού"))
        self.menu_station_logos_export.setText(_translate("MainWindow", "Εξαγωγή σήματος σταθμού"))
        self.menu_station_logos_export.setStatusTip(_translate("MainWindow", "Εξαγωγή σήματος σταθμού σε μορφές mp3, wav, aac, flv, ogg"))
        self.menu_station_logos_edit.setText(_translate("MainWindow", "Επεξεργασία σήματος σταθμού"))
        self.menu_station_logos_edit.setStatusTip(_translate("MainWindow", "Επεξεργασία ιδιοτήτων σήματος σταθμός όπως ο τίτλος, η περιγραφή και η βαθμολογία του"))
        self.menu_station_logos_preview.setText(_translate("MainWindow", "Προεπισκόπηση σήματος σταθμού"))
        self.menu_station_logos_preview.setStatusTip(_translate("MainWindow", "Αναπαραγωγή σήματος σταθμού μέσω προεπισκόπισης"))
        self.menu_station_logos_delete.setText(_translate("MainWindow", "Διαγραφή σήματος σταθμού"))
        self.menu_station_logos_delete.setStatusTip(_translate("MainWindow", "Οριστική διαγραφή σήματος σταθμού"))
        self.menu_station_logos_play_now_on_deck_1.setText(_translate("MainWindow", "Αναπαραγωγή σήματος σταθμού τώρα στο deck 1"))
        self.menu_station_logos_play_now_on_deck_1.setStatusTip(_translate("MainWindow", "Άμεση αναπαραγωγή σήματος σταθμού στο deck 1"))
        self.menu_station_logos_play_now_on_deck_2.setText(_translate("MainWindow", "Αναπαραγωγή σήματος σταθμού τώρα στο deck 2"))
        self.menu_station_logos_play_now_on_deck_2.setStatusTip(_translate("MainWindow", "Άμεση αναπαραγωγή σήματος σταθμού στο deck 2"))
        self.menu_station_logos_play_when_ready.setText(_translate("MainWindow", "Αναπαραγωγή σήματος σταθμού σε διαθέσιμο deck"))
        self.menu_station_logos_play_when_ready.setStatusTip(_translate("MainWindow", "Αναπαραγωγή σήματος σταθμού όταν τελειώσει το κομμάτι που παίζει τώρα"))
        self.menu_station_logos_add_to_playlist_top.setText(_translate("MainWindow", "Προσθήκη σήματος σταθμού στην λίστα αναπαραγωγής του main player (στην αρχή)"))
        self.menu_station_logos_add_to_playlist_top.setStatusTip(_translate("MainWindow", "Προσθήκη σήματος σταθμού στην κορυφή της λίστας αναπαραγωγής του main player"))
        self.menu_station_logos_add_to_playlist_bottom.setText(_translate("MainWindow", "Προσθήκη σήματος σταθμού στην λίστα αναπαραγωγής του main player (στο τέλος)"))
        self.menu_station_logos_add_to_playlist_bottom.setStatusTip(_translate("MainWindow", "Προσθήκη σήματος σταθμού στο τέλος της λίστας αναπαραγωγής του main player"))
        self.menu_station_logos_add_to_new_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη σήματος σταθμού σε νέα προγραμματισμένη μετάδοση"))
        self.menu_station_logos_add_to_new_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη σήματος σταθμού σε νέα προγραμματισμένη μετάδοση"))
        self.menu_station_logos_add_to_existed_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη σήματος σταθμού σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_station_logos_add_to_existed_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη σήματος σταθμού σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_greek_time_import.setText(_translate("MainWindow", "Εισαγωγή ώρα Ελλάδας"))
        self.menu_greek_time_import.setStatusTip(_translate("MainWindow", "Εισαγωγή συλλογής ώρας Ελλάδας"))
        self.menu_greek_time_default.setText(_translate("MainWindow", "Προεπιλεγμένη συλλογή ώρα Ελλάδας"))
        self.menu_greek_time_default.setStatusTip(_translate("MainWindow", "Επιλογή προεπιλεγμένης συλλογής ώρας Ελλάδας"))
        self.menu_greek_time_add_to_playlist.setText(_translate("MainWindow", "Προσθήκη ώρα Ελλάδας στην λίστα αναπαραγωγής του main player"))
        self.menu_greek_time_add_to_playlist.setStatusTip(_translate("MainWindow", "Προσθήκη συλλογής ώρας Ελλάδας στην κορυφή της λίστας αναπαραγωγής του main player"))
        self.menu_greek_time_add_to_new_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη ώρα Ελλάδας σε νέα προγραμματισμένη μετάδοση"))
        self.menu_greek_time_add_to_new_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη συλλογής ώρας Ελλάδας σε νέα προγραμματισμένη μετάδοση"))
        self.menu_greek_time_add_to_existed_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη ώρα Ελλάδας σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_greek_time_add_to_existed_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη συλλογής ώρας Ελλάδας σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_greek_time_export.setText(_translate("MainWindow", "Εξαγωγή ώρα Ελλάδας"))
        self.menu_greek_time_export.setStatusTip(_translate("MainWindow", "Εξαγωγή συλλογής ώρας Ελλάδας είτε ως μεμονομένα αρχεία ήχου είτε ως ένα ενιαίο αρχείο ήχου"))
        self.menu_greek_time_edit.setText(_translate("MainWindow", "Επεξεργασία ώρα Ελλάδας"))
        self.menu_greek_time_edit.setStatusTip(_translate("MainWindow", "Επεξεργασία ιδιοτήτων συλλογής ώρας Ελλάδας όπως ο τίτλος της συλλογής, οι τίτλοι των επιμέρους στοιχείων, κ.α."))
        self.menu_greek_time_preview.setText(_translate("MainWindow", "Προεπισκόπηση ώρα Ελλάδας"))
        self.menu_greek_time_preview.setStatusTip(_translate("MainWindow", "Αναπαραγωγή συλλογής ώρας Ελλάδας μέσω προεπισκόπισης"))
        self.menu_greek_time_delete.setText(_translate("MainWindow", "Διαγραφή ώρα Ελλάδας"))
        self.menu_greek_time_delete.setStatusTip(_translate("MainWindow", "Οριστική διαγραφή ώρας Ελλάδας"))
        self.menu_church_news_import.setText(_translate("MainWindow", "Εισαγωγή δελτίου εκκλησιαστικών ανακοινώσεων"))
        self.menu_church_news_import.setStatusTip(_translate("MainWindow", "Εισαγωγή δελτίου εκκλησιαστικών ανακοινώσεων"))
        self.menu_church_news_export.setText(_translate("MainWindow", "Εξαγωγή δελτίου εκκλησιαστικών ανακοινώσεων"))
        self.menu_church_news_export.setStatusTip(_translate("MainWindow", "Εξαγωγη δελτίου εκκλησιαστικών ανακοινώσεων σε μορφές mp3, wav, aac, flv, ogg"))
        self.menu_church_news_edit.setText(_translate("MainWindow", "Επεξεργασία δελτίου εκκλησιαστικών ανακοινώσεων"))
        self.menu_church_news_edit.setStatusTip(_translate("MainWindow", "Επεξεργασία ιδιοτήτων δελτίου εκκλησιαστικών ανακοινώσεων όπως ο τίτλος και η βαθμολογία του"))
        self.menu_church_news_preview.setText(_translate("MainWindow", "Προεπισκόπηση δελτίου εκκλησιαστικών ανακοινώσεων"))
        self.menu_church_news_preview.setStatusTip(_translate("MainWindow", "Αναπαραγωγή δελτίου εκκλησιαστικών ανακοινώσεων μέσω προεπισκόπισής του"))
        self.menu_church_news_delete.setText(_translate("MainWindow", "Διαγραφή δελτίου εκκλησιαστικών ανακοινώσεων"))
        self.menu_church_news_delete.setStatusTip(_translate("MainWindow", "Οριστική διαγραφή δελτίου εκκλησιαστικών ανακοινώσεων"))
        self.menu_church_news_play_now_on_deck_1.setText(_translate("MainWindow", "Αναπαραγωγή δελτίου εκκλησιαστικών ανακοινώσεων τώρα στο deck 1"))
        self.menu_church_news_play_now_on_deck_1.setStatusTip(_translate("MainWindow", "Αναπαραγωγή δελτίου εκκλησιαστικών ανακοινώσεων στο deck 1"))
        self.menu_church_news_play_now_on_deck_2.setText(_translate("MainWindow", "Αναπαραγωγή δελτίου εκκλησιαστικών ανακοινώσεων τώρα στο deck 2"))
        self.menu_church_news_play_now_on_deck_2.setStatusTip(_translate("MainWindow", "Αναπαραγωγή δελτίου εκκλησιαστικών ανακοινώσεων στο deck 2"))
        self.menu_church_news_play_when_ready.setText(_translate("MainWindow", "Αναπαραγωγή δελτίου εκκλησιαστικών ανακοινώσεων σε διαθέσιμο deck"))
        self.menu_church_news_play_when_ready.setStatusTip(_translate("MainWindow", "Αναπαραγωγή δελτίου εκκλησιαστικών ανακοινώσεων όταν τελειώσει το κομμάτι που παίζει τώρα"))
        self.menu_news_play_now_on_deck_2.setText(_translate("MainWindow", "Αναπαραγωγή δελτίου ειδήσεων τώρα στο deck 2"))
        self.menu_news_play_now_on_deck_2.setStatusTip(_translate("MainWindow", "Αναπαραγωγή δελτίου ειδήσεων στο deck 2"))
        self.menu_news_play_when_ready.setText(_translate("MainWindow", "Αναπαραγωγή δελτίου ειδήσεων σε διαθέσιμο deck"))
        self.menu_news_play_when_ready.setStatusTip(_translate("MainWindow", "Αναπαραγωγή δελτίου ειδήσεων όταν τελειώσει το κομμάτι που παίζει τώρα"))
        self.menu_church_news_default.setText(_translate("MainWindow", "Προεπιλεγμένο δελτίο εκκλησιαστικών ανακοινώσεων για σήμερα"))
        self.menu_church_news_default.setStatusTip(_translate("MainWindow", "Επιλογή προεπιλεγμένου δελτίου εκκλησιαστικών ανακοινώσεων για τις προκαθορισμένες ημέρες"))
        self.menu_church_news_add_to_playlist_top.setText(_translate("MainWindow", "Προσθήκη δελτίου εκκλησιαστικών ανακοινώσεων στην κεντρική λίστα αναπαραγωγής στην αρχή"))
        self.menu_church_news_add_to_playlist_top.setStatusTip(_translate("MainWindow", "Προσθήκη δελτίου εκκλησιαστικών ανακοινώσεων στην κορυφή της κεντρικής λίστας αναπαραγωγής"))
        self.menu_news_add_to_playlist_top.setText(_translate("MainWindow", "Προσθήκη δελτίου ειδήσεων στην κεντρική λίστα αναπαραγωγής στην αρχή"))
        self.menu_news_add_to_playlist_top.setStatusTip(_translate("MainWindow", "Προσθήκη δελτίου ειδήσεων στην κορύφη της κεντρικής λίστας αναπαραγωγής"))
        self.menu_news_add_to_playlist_bottom.setText(_translate("MainWindow", "Προσθήκη δελτίου ειδήσεων στην κεντρική λίστα αναπαραγωγής στο τέλος"))
        self.menu_news_add_to_playlist_bottom.setStatusTip(_translate("MainWindow", "Προσθήκη δελτίου ειδήσεων στο τέλος της κεντρικής λίστας αναπαραγωγής"))
        self.menu_church_news_add_to_playlist_bottom.setText(_translate("MainWindow", "Προσθήκη δελτίου εκκλησιαστικών ανακοινώσεων στην κεντρική λίστα αναπαραγωγής στο τέλος"))
        self.menu_church_news_add_to_playlist_bottom.setStatusTip(_translate("MainWindow", "Προσθήκη δελτίου εκκλησιαστικών ανακοινώσεων στο τέλος της κεντρικής λίστας αναπαραγωγής"))
        self.menu_news_add_to_new_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη δελτίου ειδήσεων σε νέα προγραμματισμένη μετάδοση"))
        self.menu_news_add_to_new_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη δελτίου ειδήσεων σε νέα προγραμματισμένη μετάδοση"))
        self.menu_news_add_to_existed_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη δελτίου ειδήσεων σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_news_add_to_existed_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη δελτίου ειδήσεων σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_church_news_add_to_new_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη δελτίου ειδήσεων σε νέα προγραμματισμένη μετάδοση"))
        self.menu_church_news_add_to_new_scheduled_transmition.setToolTip(_translate("MainWindow", "Προσθήκη δελτίου εκκλησιαστικών ανακοινώσεων σε νέα προγραμματισμένη μετάδοση"))
        self.menu_church_news_add_to_new_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη δελτίου εκκλησιαστικών ανακοινώσεων σε νέα προγραμματισμένη μετάδοση"))
        self.menu_church_news_add_to_existed_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη δελτίου εκκλησιαστικών ανακοινώσεων σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_church_news_add_to_existed_scheduled_transmition.setToolTip(_translate("MainWindow", "Προσθήκη δελτίου εκκλησιαστικών ανακοινώσεων σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_church_news_add_to_existed_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη δελτίου εκκλησιαστικών ανακοινώσεων σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_weather_news_import.setText(_translate("MainWindow", "Εισαγωγή δελτίου καιρού"))
        self.menu_weather_news_import.setStatusTip(_translate("MainWindow", "Εισαγωγή δελτίου καιρού"))
        self.menu_like_today_import.setText(_translate("MainWindow", "Εισαγωγή \"Σαν σήμερα\""))
        self.menu_like_today_import.setStatusTip(_translate("MainWindow", "Εισαγωγή \"Σαν σήμερα\""))
        self.menu_weather_news_default.setText(_translate("MainWindow", "Προεπιλεγμένο δελτίο καιρού"))
        self.menu_weather_news_default.setStatusTip(_translate("MainWindow", "Επιλογή προεπιλεγμένου δελτίου καιρού"))
        self.menu_like_today_default.setText(_translate("MainWindow", "Προεπιλεγμένο \"Σαν σήμερα\""))
        self.menu_like_today_default.setStatusTip(_translate("MainWindow", "Επιλογή προεπιλεγμένου \"Σαν σήμερα\""))
        self.menu_weather_news_export.setText(_translate("MainWindow", "Εξαγωγή δελτίου καιρού"))
        self.menu_weather_news_export.setStatusTip(_translate("MainWindow", "Εξαγωγή δελτίου καιρού σε μορφές mp3, wav, aac, flv, ogg"))
        self.menu_like_today_export.setText(_translate("MainWindow", "Εξαγωγή \"Σαν σήμερα\""))
        self.menu_like_today_export.setStatusTip(_translate("MainWindow", "Εξαγωγή \"Σαν σήμερα\" σε μορφές mp3, wav, aac, flv, ogg"))
        self.menu_weather_news_edit.setText(_translate("MainWindow", "Επεξεργασία δελτίου καιρού"))
        self.menu_weather_news_edit.setStatusTip(_translate("MainWindow", "Επεξεργασία ιδιοτήτων δελτίου καιρού όπως ο τίτλος και η βαθμολογία του"))
        self.menu_like_today_edit.setText(_translate("MainWindow", "Επεξεργασία \"Σαν σήμερα\""))
        self.menu_like_today_edit.setStatusTip(_translate("MainWindow", "Επεξεργασία ιδιοτήτων \"Σαν σήμερα\" όπως ο τίτλος και η βαθμολογία του"))
        self.menu_weather_news_preview.setText(_translate("MainWindow", "Προεπισκόπηση δελτίου καιρού"))
        self.menu_weather_news_preview.setStatusTip(_translate("MainWindow", "Αναπαραγωγή δελτίου καιρού μέσω προεπισκόπισής του"))
        self.menu_like_today_preview.setText(_translate("MainWindow", "Προεπισκόπηση \"Σαν σήμερα\""))
        self.menu_like_today_preview.setStatusTip(_translate("MainWindow", "Αναπαραγωγή \"Σαν σήμερα\" μέσω προεπισκόπισής του"))
        self.menu_weather_news_delete.setText(_translate("MainWindow", "Διαγραφή δελτίου καιρού"))
        self.menu_weather_news_delete.setStatusTip(_translate("MainWindow", "Οριστική διαγραφή δελτίου καιρού"))
        self.menu_like_today_delete.setText(_translate("MainWindow", "Διαγραφή \"Σαν σήμερα\""))
        self.menu_like_today_delete.setStatusTip(_translate("MainWindow", "Οριστική διαγραφή \"Σαν σήμερα\""))
        self.menu_weather_news_play_now_on_deck_1.setText(_translate("MainWindow", "Αναπαραγωγή δελτίου καιρού τώρα στο deck 1"))
        self.menu_weather_news_play_now_on_deck_1.setStatusTip(_translate("MainWindow", "Αναπαραγωγή δελτίου καιρού στο deck 1"))
        self.menu_like_today_play_now_on_deck_1.setText(_translate("MainWindow", "Αναπαραγωγή \"Σαν σήμερα\" τώρα στο deck 1"))
        self.menu_like_today_play_now_on_deck_1.setStatusTip(_translate("MainWindow", "Αναπαραγωγή \"Σαν σήμερα\" στο deck 1"))
        self.menu_weather_news_play_now_on_deck_2.setText(_translate("MainWindow", "Αναπαραγωγή δελτίου καιρού τώρα στο deck 2"))
        self.menu_weather_news_play_now_on_deck_2.setStatusTip(_translate("MainWindow", "Αναπαραγωγή δελτίου καιρού στο deck 2"))
        self.menu_like_today_play_now_on_deck_2.setText(_translate("MainWindow", "Αναπαραγωγή \"Σαν σήμερα\" τώρα στο deck 2"))
        self.menu_like_today_play_now_on_deck_2.setStatusTip(_translate("MainWindow", "Αναπαραγωγή \"Σαν σήμερα\" στο deck 2"))
        self.menu_weather_news_play_when_ready.setText(_translate("MainWindow", "Αναπαραγωγή δελτίου καιρού σε διαθέσιμο deck"))
        self.menu_weather_news_play_when_ready.setStatusTip(_translate("MainWindow", "Αναπαραγωγή δελτίου καιρού όταν τελειώσει το κομμάτι που παίζει τώρα"))
        self.menu_like_today_play_when_ready.setText(_translate("MainWindow", "Αναπαραγωγή \"Σαν σήμερα\" σε διαθέσιμο deck"))
        self.menu_like_today_play_when_ready.setStatusTip(_translate("MainWindow", "Αναπαραγωγή \"Σαν σήμερα\" όταν τελειώσει το κομμάτι που παίζει τώρα"))
        self.menu_weather_news_add_to_player_list_top.setText(_translate("MainWindow", "Προσθήκη δελτίου καιρού στην κεντρική λίστα αναπαραγωγής στην αρχή"))
        self.menu_weather_news_add_to_player_list_top.setStatusTip(_translate("MainWindow", "Προσθήκη δελτίου καιρού στην κορυφή της κεντρικής λίστας αναπαραγωγής"))
        self.menu_like_today_add_to_player_list_top.setText(_translate("MainWindow", "Προσθήκη \"Σαν σήμερα\" στην κεντρική λίστα αναπαραγωγής στην αρχή"))
        self.menu_like_today_add_to_player_list_top.setStatusTip(_translate("MainWindow", "Προσθήκη \"Σαν σήμερα\" στην κορυφή της κεντρικής λίστας αναπαραγωγής"))
        self.menu_weather_news_add_to_player_list_bottom.setText(_translate("MainWindow", "Προσθήκη δελτίου καιρού στην κεντρική λίστα αναπαραγωγής στο τέλος"))
        self.menu_weather_news_add_to_player_list_bottom.setStatusTip(_translate("MainWindow", "Προσθήκη δελτίου καιρού στο τέλος της κεντρικής λίστας αναπαραγωγής"))
        self.menu_like_today_add_to_player_list_bottom.setText(_translate("MainWindow", "Προσθήκη \"Σαν σήμερα\" στην κεντρική λίστα αναπαραγωγής στο τέλος"))
        self.menu_like_today_add_to_player_list_bottom.setStatusTip(_translate("MainWindow", "Προσθήκη \"Σαν σήμερα\" στο τέλος της κεντρικής λίστας αναπαραγωγής"))
        self.menu_weather_news_add_to_new_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη δελτίου καιρού σε νέα προγραμματισμένη μετάδοση"))
        self.menu_weather_news_add_to_new_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη δελτίου καιρού σε νέα προγραμματισμένη μετάδοση"))
        self.menu_like_today_add_to_new_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη \"Σαν σήμερα\" σε νέα προγραμματισμένη μετάδοση"))
        self.menu_like_today_add_to_new_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη \"Σαν σήμερα\" σε νέα προγραμματισμένη μετάδοση"))
        self.menu_weather_news_add_to_existed_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη δελτίου καιρού σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_weather_news_add_to_existed_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη δελτίου καιρού σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_like_today_add_to_existed_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη \"Σαν σήμερα\" σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_like_today_add_to_existed_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη \"Σαν σήμερα\" σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_playlist_play_now.setText(_translate("MainWindow", "Αναπαραγωγή λίστας αναπαραγωγής τώρα"))
        self.menu_playlist_play_now.setStatusTip(_translate("MainWindow", "Άμεση διακοπή αρχείων από τα decks και αναπαραγωγή λίστας αναπαραγωγής τώρα"))
        self.menu_playlist_play_when_ready.setText(_translate("MainWindow", "Αναπαραγωγή λίστας αναπαραγωγής σε διαθέσιμο deck"))
        self.menu_playlist_play_when_ready.setStatusTip(_translate("MainWindow", "Αναπαραγωγή λίστας αναπαραγωγής όταν τα decks αδειάσουν"))
        self.menu_sound_clips_play_now.setText(_translate("MainWindow", "Αναπαραγωγή ηχητικού clip τώρα στο music clip deck"))
        self.menu_sound_clips_play_now.setStatusTip(_translate("MainWindow", "Άμεση αναπαραγωγή ηχητικού clip στο music clip deck τώρα"))
        self.menu_sound_clips_play_when_ready.setText(_translate("MainWindow", "Αναπαραγωγή ηχητικού clip όταν το music clip deck γίνει διαθέσιμο"))
        self.menu_sound_clips_play_when_ready.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ηχητικού clip στο music clip deck όταν αδειάσει"))
        self.menu_import_sound_file_from_sound_file.setText(_translate("MainWindow", "Εισαγωγή αρχείου ήχου από αρχείο ήχου"))
        self.menu_import_sound_file_from_sound_file.setStatusTip(_translate("MainWindow", "Εισαγωγή αρχείου ήχου από αρχείο ήχου"))
        self.menu_sound_file_load_deck_1.setText(_translate("MainWindow", "Φόρτωση αρχείου ήχου τώρα στο deck 1"))
        self.menu_sound_file_load_deck_1.setStatusTip(_translate("MainWindow", "Φόρτωση αρχείου ήχου στο deck 1 τώρα"))
        self.menu_sound_file_load_deck_2.setText(_translate("MainWindow", "Φόρτωση αρχείου ήχου τώρα στο deck 2"))
        self.menu_sound_file_load_deck_2.setStatusTip(_translate("MainWindow", "Φόρτωση αρχείου ήχου στο deck 2 τώρα"))
        self.menu_sound_file_load_available_deck.setText(_translate("MainWindow", "Φόρτωση αρχείου ήχου σε διαθέσιμο deck"))
        self.menu_sound_file_load_available_deck.setStatusTip(_translate("MainWindow", "Φόρτωση αρχείου ήχου σε άδειο deck όταν τερματιστεί η αναπαραγωγή αρχείου από αυτό"))
        self.menu_station_logo_load_deck_1.setText(_translate("MainWindow", "Φόρτωση σήματος σταθμού στο deck 1"))
        self.menu_station_logo_load_deck_1.setStatusTip(_translate("MainWindow", "Φόρτωση σήματος σταθμού στο deck 1 τώρα"))
        self.menu_station_logo_load_deck_2.setText(_translate("MainWindow", "Φόρτωση σήματος σταθμού στο deck 2"))
        self.menu_station_logo_load_deck_2.setStatusTip(_translate("MainWindow", "Φόρτωση σήματος σταθμού στο deck 2 τώρα"))
        self.menu_station_logo_load_available_deck.setText(_translate("MainWindow", "Φόρτωση σήματος σταθμού σε διαθέσιμο deck"))
        self.menu_station_logo_load_available_deck.setStatusTip(_translate("MainWindow", "Φόρτωση σήματος σταθμού σε άδειο deck όταν τερματιστεί η αναπαραγωγή αρχείου από αυτό"))
        self.menu_church_news_load_deck_1.setText(_translate("MainWindow", "Φόρτωση δελτίου εκκλησιασικών ανακοινώσεων στο deck 1"))
        self.menu_church_news_load_deck_1.setStatusTip(_translate("MainWindow", "Φόρτωση δελτίου εκκλησιαστικών ανακοινώσεων στο deck 1 τώρα"))
        self.menu_church_news_load_deck_2.setText(_translate("MainWindow", "Φόρτωση δελτίου εκκλησιασικών ανακοινώσεων στο deck 2"))
        self.menu_church_news_load_deck_2.setStatusTip(_translate("MainWindow", "Φόρτωση δελτίου εκκλησιαστικών ανακοινώσεων στο deck 2 τώρα"))
        self.menu_church_news_load_available_deck.setText(_translate("MainWindow", "Φόρτωση δελτίου εκκλησιασικών ανακοινώσεων σε διαθέσιμο deck"))
        self.menu_church_news_load_available_deck.setStatusTip(_translate("MainWindow", "Φόρτωση δελτίου εκκλησιαστικών ανακοινώσεων σε άδειο deck όταν τερματιστεί η αναπαραγωγή αρχείου από αυτό"))
        self.menu_weather_news_load_deck_1.setText(_translate("MainWindow", "Φόρτωση δελτίου καιρού στο deck 1"))
        self.menu_weather_news_load_deck_1.setStatusTip(_translate("MainWindow", "Φόρτωση δελτίου καιρού στο deck 1 τώρα"))
        self.menu_like_today_load_deck_1.setText(_translate("MainWindow", "Φόρτωση \"Σαν σήμερα\" στο deck 1"))
        self.menu_like_today_load_deck_1.setStatusTip(_translate("MainWindow", "Φόρτωση \"Σαν σήμερα\" στο deck 1 τώρα"))
        self.menu_weather_news_load_deck_2.setText(_translate("MainWindow", "Φόρτωση δελτίου καιρού στο deck 2"))
        self.menu_weather_news_load_deck_2.setStatusTip(_translate("MainWindow", "Φόρτωση δελτίου καιρού στο deck 2 τώρα"))
        self.menu_like_today_load_deck_2.setText(_translate("MainWindow", "Φόρτωση \"Σαν σήμερα\" στο deck 2"))
        self.menu_like_today_load_deck_2.setStatusTip(_translate("MainWindow", "Φόρτωση \"Σαν σήμερα\" στο deck 2 τώρα"))
        self.menu_weather_news_load_available_deck.setText(_translate("MainWindow", "Φόρτωση δελτίου καιρού σε διαθέσιμο deck"))
        self.menu_weather_news_load_available_deck.setStatusTip(_translate("MainWindow", "Φόρτωση δελτίου καιρού σε άδειο deck όταν τερματιστεί η αναπαραγωγή αρχείου από αυτό"))
        self.menu_like_today_load_available_deck.setText(_translate("MainWindow", "Φόρτωση \"Σαν σήμερα\" σε διαθέσιμο deck"))
        self.menu_like_today_load_available_deck.setStatusTip(_translate("MainWindow", "Φόρτωση \"Σαν σήμερα\" σε άδειο deck όταν τερματιστεί η αναπαραγωγή αρχείου από αυτό"))
        self.menu_news_load_deck_1.setText(_translate("MainWindow", "Φόρτωση δελτίου ειδήσεων στο deck 1"))
        self.menu_news_load_deck_1.setStatusTip(_translate("MainWindow", "Φόρτωση δελτίου ειδήσεων στο deck 1 τώρα"))
        self.menu_news_load_deck_2.setText(_translate("MainWindow", "Φόρτωση δελτίου ειδήσεων στο deck 2"))
        self.menu_news_load_deck_2.setStatusTip(_translate("MainWindow", "Φόρτωση δελτίου ειδήσεων στο deck 2 τώρα"))
        self.menu_news_load_available_deck.setText(_translate("MainWindow", "Φόρτωση δελτίου ειδήσεων σε διαθέσιμο deck"))
        self.menu_news_load_available_deck.setStatusTip(_translate("MainWindow", "Φόρτωση δελτίου ειδήσεων σε άδειο deck όταν τερματιστεί η αναπαραγωγή αρχείου από αυτό"))
        self.menu_record_load_deck_1.setText(_translate("MainWindow", "Φόρτωση ηχογραφημένου αρχείου στο deck 1"))
        self.menu_record_load_deck_1.setStatusTip(_translate("MainWindow", "Φόρτωση ηχογραφημένου αρχείου στο deck 1 τώρα"))
        self.menu_record_load_deck_2.setText(_translate("MainWindow", "Φόρτωση ηχογραφημένου αρχείου στο deck 2"))
        self.menu_record_load_deck_2.setStatusTip(_translate("MainWindow", "Φόρτωση ηχογραφημένου αρχείου στο deck 2 τώρα"))
        self.menu_record_load_available_deck.setText(_translate("MainWindow", "Φόρτωση ηχογραφημένου αρχείου σε διαθέσιμο deck"))
        self.menu_record_load_available_deck.setStatusTip(_translate("MainWindow", "Φόρτωση ηχογραφημένου αρχείου σε άδειο deck όταν τερματιστεί η αναπαραγωγή αρχείου από αυτό"))
        self.menu_sound_clips_prepare.setText(_translate("MainWindow", "Προετοιμασία ηχητικού clip"))
        self.menu_sound_clips_prepare.setStatusTip(_translate("MainWindow", "Φόρτωση - προετοιμασία ηχητικού clip για αναπαραγωγή"))
        self.menu_retransmitions_load_to_deck_1.setText(_translate("MainWindow", "Φόρτωση αναμετάδοσης στο deck 1"))
        self.menu_retransmitions_load_to_deck_1.setStatusTip(_translate("MainWindow", "Φόρτωση αναμετάδοσης στο deck 1 τώρα"))
        self.menu_retransmitions_load_to_deck_2.setText(_translate("MainWindow", "Φόρτωση αναμετάδοσης στο deck 2"))
        self.menu_retransmitions_load_to_deck_2.setStatusTip(_translate("MainWindow", "Φόρτωση αναμετάδοσης στο deck 2 τώρα"))
        self.menu_retransmitions_load_to_available_deck.setText(_translate("MainWindow", "Φόρτωση αναμετάδοσης σε διαθέσιμο deck"))
        self.menu_retransmitions_load_to_available_deck.setStatusTip(_translate("MainWindow", "Φόρτωση αναμετάδοσης σε άδειο deck όταν τερματιστεί η αναπαραγωγή αρχείου από αυτό"))
        self.menu_news_import.setText(_translate("MainWindow", "Εισαγωγή δελτίου ειδήσεων"))
        self.menu_news_import.setIconText(_translate("MainWindow", "Εισαγωγή δελτίου ειδήσεων"))
        self.menu_news_import.setStatusTip(_translate("MainWindow", "Εισαγωγή δελτίου ειδήσεων"))
        self.menu_news_default.setText(_translate("MainWindow", "Προεπιλεγμένο δελτίο ειδήσεων για σήμερα"))
        self.menu_news_default.setIconText(_translate("MainWindow", "Προεπιλεγμένο δελτίο ειδήσεων"))
        self.menu_news_default.setStatusTip(_translate("MainWindow", "Επιλογή προεπιλεγμένου δελτίου ειδήσεων"))
        self.menu_news_export.setText(_translate("MainWindow", "Εξαγωγή δελτίου ειδήσεων"))
        self.menu_news_export.setIconText(_translate("MainWindow", "Εξαγωγή δελτίου ειδήσεων"))
        self.menu_news_export.setStatusTip(_translate("MainWindow", "Εξαγωγή δελτίου ειδήσεων σε μορφές mp3, wav, aac, flv, ogg"))
        self.menu_news_edit.setText(_translate("MainWindow", "Επεξεργασία δελτίου ειδήσεων"))
        self.menu_news_edit.setIconText(_translate("MainWindow", "Επεξεργασία δελτίου ειδήσεων"))
        self.menu_news_edit.setStatusTip(_translate("MainWindow", "Επεξεργασία ιδιοτήτων δελτίου ειδήσεων όπως ο τίτλος και η βαθμολογία του"))
        self.menu_news_preview.setText(_translate("MainWindow", "Προεπισκόπηση δελτίου ειδήσεων"))
        self.menu_news_preview.setIconText(_translate("MainWindow", "Προεπισκόπηση δελτίου ειδήσεων"))
        self.menu_news_preview.setStatusTip(_translate("MainWindow", "Αναπαραγωγή δελτίου ειδήσεων μέσω προεπισκόπισής του"))
        self.menu_news_delete.setText(_translate("MainWindow", "Διαγραφή δελτίου ειδήσεων"))
        self.menu_news_delete.setIconText(_translate("MainWindow", "Διαγραφή δελτίου ειδήσεων"))
        self.menu_news_delete.setStatusTip(_translate("MainWindow", "Οριστική διαγραφή δελτίου ειδήσεων"))
        self.menu_record_folder.setText(_translate("MainWindow", "Άνοιγμα φακέλου που περιέχει τα ηχογραφημένα αρχεία"))
        self.menu_record_folder.setStatusTip(_translate("MainWindow", "Άνοιγμα φακέλου που περιέχει τα ηχογραφημένα αρχεία"))
        self.menu_record_export.setText(_translate("MainWindow", "Εξαγωγή ηχογραφημένου αρχείου"))
        self.menu_record_export.setStatusTip(_translate("MainWindow", "Εξαγωγή ηχογραφημένου αρχείου σε μορφές mp3, wav, aac, flv, ogg"))
        self.menu_record_edit.setText(_translate("MainWindow", "Επεξεργασία ηχογραφημένου αρχείου"))
        self.menu_record_edit.setStatusTip(_translate("MainWindow", "Επεξεργασία ιδιοτήτων ηχογραφημένου αρχείου όπως ο τίτλος και η συσχετιζόμενη εικόνα"))
        self.menu_record_preview.setText(_translate("MainWindow", "Προεπισκόπιση ηχογραφημένου αρχείου"))
        self.menu_record_preview.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ηχογραφημένου αρχείου μέσω προεπισκόπισής του"))
        self.menu_record_delete.setText(_translate("MainWindow", "Διαγραφή ηχογραφημένου αρχείου"))
        self.menu_record_delete.setStatusTip(_translate("MainWindow", "Οριστική διαγραφή ηχογραφημένων αρχείων"))
        self.menu_ip_calls_active.setText(_translate("MainWindow", "Ο παραγωγός διαθέσιμος για ηχητικές κλήσεις;"))
        self.menu_ip_calls_active.setStatusTip(_translate("MainWindow", "Επιλέξτε αν ο ραδιοφωνικός παραγωγός είναι διαθέσιμος να δεχθεί ηχητικές κλήσεις από τους ακροατές του σταθμού"))
        self.menu_ip_calls_export.setText(_translate("MainWindow", "Εξαγωγή ηχητικής κλήσης"))
        self.menu_ip_calls_export.setStatusTip(_translate("MainWindow", "Εξαγωγή ηχογραφημένης ηχητικής κλήσης σε μορφές mp3, wav, aac, flv, ogg"))
        self.menu_ip_calls_preview.setText(_translate("MainWindow", "Προεπισκόπηση ηχητικής κλήσης"))
        self.menu_ip_calls_preview.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ηχογραφημένης ηχητικής κλήσης μέσω προεπισκόπισής της"))
        self.menu_ip_calls_delete.setText(_translate("MainWindow", "Διαγραφή ηχητικής κλήσης"))
        self.menu_ip_calls_delete.setStatusTip(_translate("MainWindow", "Οριστική διαγραφή ηχογραφημένης ηχητικής κλήσης"))
        self.menu_ip_calls_play_now_deck_1.setText(_translate("MainWindow", "Αναπαραγωγή ηχητικής κλήσης τώρα στο deck 1"))
        self.menu_ip_calls_play_now_deck_1.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ηχογραφημένης ηχητικής κλήσης στο deck 1"))
        self.menu_ip_calls_play_now_deck_2.setText(_translate("MainWindow", "Αναπαραγωγή ηχητικής κλήσης τώρα στο deck 2"))
        self.menu_ip_calls_play_now_deck_2.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ηχογραφημένης ηχητικής κλήσης στο deck 2"))
        self.menu_ip_calls_play_when_ready.setText(_translate("MainWindow", "Αναπαραγωγή ηχητικής κλήσης σε διαθέσιμο deck"))
        self.menu_ip_calls_play_when_ready.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ηχογραφήμένης ηχητικής κλήσης όταν τελειώσει το κομμάτι που παίζει τώρα"))
        self.menu_ip_calls_load_deck_1.setText(_translate("MainWindow", "Φόρτωση ηχητικής κλήσης στο deck 1"))
        self.menu_ip_calls_load_deck_1.setStatusTip(_translate("MainWindow", "Φόρτωση ηχογραφημένης ηχητικής κλήσης στο deck 1 τώρα"))
        self.menu_ip_calls_load_deck_2.setText(_translate("MainWindow", "Φόρτωση ηχητικής κλήσης στο deck 2"))
        self.menu_ip_calls_load_deck_2.setStatusTip(_translate("MainWindow", "Φόρτωση ηχογραφημένης ηχητικής κλήσης στο deck 2 τώρα"))
        self.menu_ip_calls_load_available_deck.setText(_translate("MainWindow", "Φόρτωση ηχητικής κλήσης σε διαθέσιμο deck"))
        self.menu_ip_calls_load_available_deck.setStatusTip(_translate("MainWindow", "Φόρτωση ηχογραφημένης ηχητικής κλήσης σε άδειο deck όταν τερματιστεί η αναπαραγωγή αρχείου από αυτό"))
        self.menu_ip_calls_add_to_player_list_top.setText(_translate("MainWindow", "Προσθήκη ηχητικής κλήσης στην κεντρική λίστα αναπαραγωγής στην αρχή"))
        self.menu_ip_calls_add_to_player_list_top.setStatusTip(_translate("MainWindow", "Προσθήκη ηχογραφημένης ηχητικής κλήσης στην κορυφή της κεντρικής λίστας αναπαραγωγής"))
        self.menu_ip_calls_add_to_player_list_bottom.setText(_translate("MainWindow", "Προσθήκη ηχητικής κλήσης στην κεντρική λίστα αναπαραγωγής στο τέλος"))
        self.menu_ip_calls_add_to_player_list_bottom.setStatusTip(_translate("MainWindow", "Προσθήκη ηχογραφημένης ηχητικής κλήσης στο τέλος της κεντρικής λίστας αναπαραγωγής"))
        self.menu_ip_calls_add_to_new_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη ηχητικής κλήσης σε νέα προγραμματισμένη μετάδοση"))
        self.menu_ip_calls_add_to_new_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη ηχογραφημένης ηχητικής κλήσης σε νέα προγραμματισμένη μετάδοση"))
        self.menu_ip_calls_add_to_existed_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη ηχητικής κλήσης σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_ip_calls_add_to_existed_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη ηχογραφημένης ηχητικής κλήσης σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_new_radio_station.setText(_translate("MainWindow", "Εισαγωγή ραδιοφωνικού σταθμού"))
        self.menu_new_radio_station.setStatusTip(_translate("MainWindow", "Εισαγωγή νέας ραδιοφωνικής σύνδεσης"))
        self.menu_edit_radio_station.setText(_translate("MainWindow", "Επεξεργασία ραδιοφωνικού σταθμού"))
        self.menu_edit_radio_station.setStatusTip(_translate("MainWindow", "Επεξεργασία υπάρχουσας ραδιοφωνικής σύνδεσης"))
        self.menu_delete_radio_station.setText(_translate("MainWindow", "Διαγραφη ραδιοφωνικού σταθμού"))
        self.menu_delete_radio_station.setStatusTip(_translate("MainWindow", "Οριστική διαγραφή υπάρχουσας ραδιοφωνικής σύνδεσης"))
        self.menu_new_scheduled_transmition.setText(_translate("MainWindow", "Εισαγωγή προγραμματισμένης μετάδοσης"))
        self.menu_new_scheduled_transmition.setStatusTip(_translate("MainWindow", "Δημιουργία νέας προγραμματισμένης μετάδοσης"))
        self.menu_edit_scheduled_transmition_2.setText(_translate("MainWindow", "Επεξεργασία προγραμματισμένων μεταδόσεων"))
        self.menu_edit_scheduled_transmition_2.setStatusTip(_translate("MainWindow", "Επεξεργασία υπάρχουσας προγραμματισμένης μετάδοσης"))
        self.menu_delete_scheduled_transmition.setText(_translate("MainWindow", "Διαγραφή προγραμματισμένων μεταδόσεων"))
        self.menu_delete_scheduled_transmition.setStatusTip(_translate("MainWindow", "Οριστική διαγραφή υπάρχουσας προγραμματισμένης μετάδοσης"))
        self.menu_manage_transmitions.setText(_translate("MainWindow", "Διαχείριση ραδιοφωνικών μεταδόσεων"))
        self.menu_manage_transmitions.setStatusTip(_translate("MainWindow", "Διαχείριση και εποπτεία ραδιοφωνικών συνδέσεων"))
        self.menu_record_import.setText(_translate("MainWindow", "Εισαγωγή αρχειου ηχογράφησης"))
        self.menu_record_import.setStatusTip(_translate("MainWindow", "Εισαγωγή αρχειου ηχογράφησης"))
        self.menu_preview_scheduled_transmition.setText(_translate("MainWindow", "Προεπισκόπιση προγραμματισμένων μεταδόσεων"))
        self.menu_preview_scheduled_transmition.setStatusTip(_translate("MainWindow", "Αναπαραγωγή προγραμματισμένης μετάδοσης όπως αυτή θα εκτελείτο μέσω προεπισκόπισης"))
        self.menu_daily_scheduled_transmitions.setText(_translate("MainWindow", "Προβολή ημερίσιων προγραμματισμένων μεταδόσεων"))
        self.menu_daily_scheduled_transmitions.setStatusTip(_translate("MainWindow", "Εμφάνιση ημερίσιων προγραμματισμένων μεταδόσεων και διαχείρισή τους"))
        self.menu_import_sound_file_from_sound_video.setText(_translate("MainWindow", "Εισαγωγή αρχείου ήχου από βίντεο"))
        self.menu_import_sound_file_from_sound_video.setStatusTip(_translate("MainWindow", "Εισαγωγή αρχείου ήχου από video"))
        self.menu_news_play_now_on_deck_1.setText(_translate("MainWindow", "Αναπαραγωγή δελτίου ειδήσεων τώρα στο deck 1"))
        self.menu_news_play_now_on_deck_1.setStatusTip(_translate("MainWindow", "Αναπαραγωγή δελτίου ειδήσεων στο deck 1"))
        self.action_open_manual.setText(_translate("MainWindow", "Εγχειρίδιο χρήσης"))
        self.action_open_manual.setStatusTip(_translate("MainWindow", "Εγχειρίδιο χρήσης"))
        self.action_program_abstract_information.setText(_translate("MainWindow", "Λίγα λόγια για το πρόγραμμα"))
        self.action_program_abstract_information.setStatusTip(_translate("MainWindow", "Λίγα λόγια για το πρόγραμμα"))
        self.action_contact.setText(_translate("MainWindow", "Επικοινωνία"))
        self.action_contact.setStatusTip(_translate("MainWindow", "Επικοινωνία"))
        self.action_change_theme.setText(_translate("MainWindow", "Επιλογή θέματος"))
        self.action_change_theme.setStatusTip(_translate("MainWindow", "Επιλογή θέματος"))
        self.action_main_player_list_visible_fields.setText(_translate("MainWindow", "Ορατά πεδία λίστας αναπαραγωγής"))
        self.action_main_player_list_visible_fields.setStatusTip(_translate("MainWindow", "Ορατά πεδία λίστας αναπαραγωγής"))
        self.action_program_components_visible.setText(_translate("MainWindow", "Ορατά πεδία προγράμματος"))
        self.action_program_components_visible.setStatusTip(_translate("MainWindow", "Ορατά πεδία προγράμματος"))
        self.action_scheduled_transmition_report.setText(_translate("MainWindow", "Αναφορά προγραμματισμένων μεταδόσεων"))
        self.action_scheduled_transmition_report.setStatusTip(_translate("MainWindow", "Αυτόματη δημιουργία και εμφάνιση αναφοράς για κάποια προγραμματισμένη μετάδοση"))
        self.action_weekly_program_report.setText(_translate("MainWindow", "Εβδομαδιαίο πρόγραμμα σταθμού"))
        self.action_weekly_program_report.setStatusTip(_translate("MainWindow", "Αναφορά που αφορά τα εβδομαδιαίο πρόγραμμα του σταθμού"))
        self.action_deck_history_report.setText(_translate("MainWindow", "Ιστορικό μεταδόσεων"))
        self.action_deck_history_report.setStatusTip(_translate("MainWindow", "Αναφορά που αφορά το ιστορικό των decks (decks history)"))
        self.action_listeners_statistics.setText(_translate("MainWindow", "Στατιστικά ακροατών"))
        self.action_listeners_statistics.setStatusTip(_translate("MainWindow", "Αναφορά που αφορά στατιστικά των ακροατών"))
        self.action_show_daily_scheduled_transmitions.setText(_translate("MainWindow", "Προβολή ημερίσιων προγραμματισμένων μεταδόσεων"))
        self.action_show_daily_scheduled_transmitions.setStatusTip(_translate("MainWindow", "Προβολή ημερίσιων προγραμματισμένων μεταδόσεων"))
        self.action_start_record.setText(_translate("MainWindow", "Έναρξη ηχογράφησης"))
        self.action_start_record.setStatusTip(_translate("MainWindow", "Έναρξη ηχογράφησης"))
        self.action_pause_record.setText(_translate("MainWindow", "Παύση ηχογράφησης"))
        self.action_pause_record.setStatusTip(_translate("MainWindow", "Παύση ηχογράφησης"))
        self.action_stop_record.setText(_translate("MainWindow", "Λήξη ηχογράφησης"))
        self.action_stop_record.setStatusTip(_translate("MainWindow", "Διακοπή ηχογράφησης"))
        self.action_show_record_files.setText(_translate("MainWindow", "Άνοιγμα φακέλου που περιέχει τα ηχογραφημένα αρχεία"))
        self.action_show_record_files.setStatusTip(_translate("MainWindow", "Εμφάνιση φακέλου που περιέχει τα ηχογραφημένα αρχεία"))
        self.action_manage_radio_connections.setText(_translate("MainWindow", "Διαχείριση ραδιοφωνικών μεταδόσεων"))
        self.action_manage_radio_connections.setStatusTip(_translate("MainWindow", "Διαχείριση ραδιοφωνικών συνδέσεων"))
        self.action_available_for_ip_calls.setText(_translate("MainWindow", "Ο παραγωγός διαθέσιμος για ηχητικές κλήσεις;"))
        self.action_available_for_ip_calls.setStatusTip(_translate("MainWindow", "Επιλέξτε εφόσον είστε διαθέσιμος για διαδικτυακές ηχητικές κλήσεις"))
        self.action_manage_output_devices.setText(_translate("MainWindow", "Ρύθμιση ηχείων"))
        self.action_manage_output_devices.setStatusTip(_translate("MainWindow", "Διαχείριση ηχητικών συσκευών εξόδου (ηχεία)"))
        self.action_manage_input_device.setText(_translate("MainWindow", "Ρύθμιση μικροφώνου"))
        self.action_manage_input_device.setStatusTip(_translate("MainWindow", "Διαχείριση ηχητικής συσκευής εισόδου (μικρόφωνο)"))
        self.action_manage_proccesses.setText(_translate("MainWindow", "Διαχείριση διεργασιών"))
        self.action_manage_proccesses.setStatusTip(_translate("MainWindow", "Διαχείριση διεργασιών προγράμματος"))
        self.action_general_deck_play_previous.setText(_translate("MainWindow", "Αναπαραγωγή προηγούμενου"))
        self.action_general_deck_play_or_pause.setText(_translate("MainWindow", "Αναπαραγωγή ή παύση όλων"))
        self.action_general_deck_stop.setText(_translate("MainWindow", "Διακοπή όλων"))
        self.action_general_deck_play_next.setText(_translate("MainWindow", "Αναπαραγωγή επόμενου"))
        self.action_windows_volume.setText(_translate("MainWindow", "Ρύθμιση ήχου Windows"))
        self.action_general_deck_volume.setText(_translate("MainWindow", "Τελική ρύθμιση έντασης ήχου"))
        self.action_general_deck_pan.setText(_translate("MainWindow", "Τελική στερεοφωνική ισοστάθμιση"))
        self.action_general_deck_normalize.setText(_translate("MainWindow", "Κανονικοποίηση σήματος εξόδου"))
        self.action_general_deck_filter.setText(_translate("MainWindow", "Ζωνοπερατό φίλτρο σήματος εξόδου"))
        self.action_microphone_press_to_talk.setText(_translate("MainWindow", "Πιέστε παρατεταμένα για να μιλήσετε"))
        self.action_microphone_push_to_talk.setText(_translate("MainWindow", "Κάντε click για να μιλήσετε"))
        self.action_microphone_volume.setText(_translate("MainWindow", "Ένταση ήχου μικροφώνου"))
        self.action_microphone_pan.setText(_translate("MainWindow", "Στερεοφωνική ισοστάθμιση μικροφώνου"))
        self.action_microphone_normalize.setText(_translate("MainWindow", "Κανονικοποίηση μικροφώνου"))
        self.action_microphone_filter.setText(_translate("MainWindow", "Εφαρμογή ζωνοπερατού φίλτρου"))
        self.action_go_to_page_1.setText(_translate("MainWindow", "Μετάβαση στην ηλεκτρονική σελίδα 1"))
        self.action_go_to_page_1.setStatusTip(_translate("MainWindow", "Μετάβαση στην ηλεκτρονική σελίδα 1"))
        self.action_go_to_page_2.setText(_translate("MainWindow", "Μετάβαση στην ηλεκτρονική σελίδα 2"))
        self.action_go_to_page_2.setStatusTip(_translate("MainWindow", "Μετάβαση στην ηλεκτρονική σελίδα 2"))
        self.action_go_to_page_3.setText(_translate("MainWindow", "Μετάβαση στην ηλεκτρονική σελίδα 3"))
        self.action_go_to_page_3.setStatusTip(_translate("MainWindow", "Μετάβαση στην ηλεκτρονική σελίδα 3"))
        self.action_3.setText(_translate("MainWindow", "Εισαγωγή \"Σαν σήμερα\""))
        self.action_4.setText(_translate("MainWindow", "Αναπαραγωγή \"Σαν σήμερα\""))
        self.action_5.setText(_translate("MainWindow", "Προετοιμασία \"Σαν σήμερα\""))
        self.action_6.setText(_translate("MainWindow", "Προσθήκη \"Σαν σήμερα\""))
        self.action_7.setText(_translate("MainWindow", "Προεπιλεγμένο \"Σαν σήμερα\""))
        self.action_8.setText(_translate("MainWindow", "Εξαγωγή \"Σαν σήμερα\""))
        self.action_9.setText(_translate("MainWindow", "Επεξεργασία \"Σαν σήμερα\""))
        self.action_10.setText(_translate("MainWindow", "Προεπισκόπηση \"Σαν σήμερα\""))
        self.action_12.setText(_translate("MainWindow", "Διαγραφή \"Σαν σήμερα\""))
        self.menu_sport_news_import.setText(_translate("MainWindow", "Εισαγωγή δελτίου αθλητικών ειδήσεων"))
        self.menu_sport_news_import.setStatusTip(_translate("MainWindow", "Εισαγωγή δελτίου αθλητικών ειδήσεων"))
        self.menu_sport_news_default.setText(_translate("MainWindow", "Προεπιλεγμένο δελτίο αθλητικών ειδήσεων για σήμερα"))
        self.menu_sport_news_default.setStatusTip(_translate("MainWindow", "Προεπιλεγμένο δελτίο αθλητικών ειδήσεων για σήμερα"))
        self.menu_sport_news_export.setText(_translate("MainWindow", "Εξαγωγή δελτίου αθλητικών ειδήσεων"))
        self.menu_sport_news_export.setStatusTip(_translate("MainWindow", "Εξαγωγή δελτίου αθλητικών ειδήσεων"))
        self.menu_sport_news_edit.setText(_translate("MainWindow", "Επεξεργασία δελτίου αθλητικών ειδήσεων"))
        self.menu_sport_news_edit.setStatusTip(_translate("MainWindow", "Επεξεργασία δελτίου αθλητικών ειδήσεων"))
        self.menu_sport_news_preview.setText(_translate("MainWindow", "Προεπισκόπηση δελτίου αθλητικών ειδήσεων"))
        self.menu_sport_news_preview.setStatusTip(_translate("MainWindow", "Προεπισκόπηση δελτίου αθλητικών ειδήσεων"))
        self.menu_sport_news_delete.setText(_translate("MainWindow", "Διαγραφή δελτίου αθλητικών ειδήσεων"))
        self.menu_sport_news_delete.setStatusTip(_translate("MainWindow", "Διαγραφή δελτίου αθλητικών ειδήσεων"))
        self.menu_sport_news_play_now_on_deck_1.setText(_translate("MainWindow", "Αναπαραγωγή δελτίου αθλητικών ειδήσεων τώρα στο deck 1"))
        self.menu_sport_news_play_now_on_deck_1.setStatusTip(_translate("MainWindow", "Αναπαραγωγή δελτίου αθλητικών ειδήσεων τώρα στο deck 1"))
        self.menu_sport_news_play_now_on_deck_2.setText(_translate("MainWindow", "Αναπαραγωγή δελτίου αθλητικών ειδήσεων τώρα στο deck 2"))
        self.menu_sport_news_play_now_on_deck_2.setStatusTip(_translate("MainWindow", "Αναπαραγωγή δελτίου αθλητικών ειδήσεων τώρα στο deck 2"))
        self.menu_sport_news_play_when_ready.setText(_translate("MainWindow", "Αναπαραγωγή δελτίου αθλητικών ειδήσεων σε διαθέσιμο deck"))
        self.menu_sport_news_play_when_ready.setStatusTip(_translate("MainWindow", "Αναπαραγωγή δελτίου αθλητικών ειδήσεων σε διαθέσιμο deck"))
        self.menu_sport_news_load_deck_1.setText(_translate("MainWindow", "Φόρτωση δελτίου αθλητικών ειδήσεων στο deck 1"))
        self.menu_sport_news_load_deck_1.setStatusTip(_translate("MainWindow", "Φόρτωση δελτίου αθλητικών ειδήσεων στο deck 1"))
        self.menu_sport_news_load_deck_2.setText(_translate("MainWindow", "Φόρτωση δελτίου αθλητικών ειδήσεων στο deck 2"))
        self.menu_sport_news_load_deck_2.setStatusTip(_translate("MainWindow", "Φόρτωση δελτίου αθλητικών ειδήσεων στο deck 2"))
        self.menu_sport_news_load_available_deck.setText(_translate("MainWindow", "Φόρτωση δελτίου αθλητικών ειδήσεων σε διαθέσιμο deck"))
        self.menu_sport_news_load_available_deck.setStatusTip(_translate("MainWindow", "Φόρτωση δελτίου αθλητικών ειδήσεων σε διαθέσιμο deck"))
        self.menu_sport_news_add_to_playlist_top.setText(_translate("MainWindow", "Προσθήκη δελτίου αθλητικών ειδήσεων στην κεντρική λίστα αναπαραγωγής στην αρχή"))
        self.menu_sport_news_add_to_playlist_top.setStatusTip(_translate("MainWindow", "Προσθήκη δελτίου αθλητικών ειδήσεων στην κεντρική λίστα αναπαραγωγής στην αρχή"))
        self.menu_sport_news_add_to_playlist_bottom.setText(_translate("MainWindow", "Προσθήκη δελτίου αθλητικών ειδήσεων στην κεντρική λίστα αναπαραγωγής στο τέλος"))
        self.menu_sport_news_add_to_playlist_bottom.setStatusTip(_translate("MainWindow", "Προσθήκη δελτίου αθλητικών ειδήσεων στην κεντρική λίστα αναπαραγωγής στο τέλος"))
        self.menu_sport_news_add_to_new_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη δελτίου αθλητικών ειδήσεων σε νέα προγραμματισμένη μετάδοση"))
        self.menu_sport_news_add_to_new_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη δελτίου αθλητικών ειδήσεων σε νέα προγραμματισμένη μετάδοση"))
        self.menu_sport_news_add_to_existed_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη δελτίου αθλητικών ειδήσεων σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_sport_news_add_to_existed_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη δελτίου αθλητικών ειδήσεων σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_history_import.setText(_translate("MainWindow", "Εισαγωγή ιστορικού αρχείου"))
        self.menu_history_import.setStatusTip(_translate("MainWindow", "Εισαγωγή ιστορικού αρχείου"))
        self.menu_history_export.setText(_translate("MainWindow", "Εξαγωγή ιστορικού αρχείου"))
        self.menu_history_export.setStatusTip(_translate("MainWindow", "Εξαγωγή ιστορικού αρχείου"))
        self.menu_history_edit.setText(_translate("MainWindow", "Επεξεργασία ιστορικού αρχείου"))
        self.menu_history_edit.setStatusTip(_translate("MainWindow", "Επεξεργασία ιστορικού αρχείου"))
        self.menu_history_preview.setText(_translate("MainWindow", "Προεπισκόπηση ιστορικού αρχείου"))
        self.menu_history_preview.setStatusTip(_translate("MainWindow", "Προεπισκόπηση ιστορικού αρχείου"))
        self.menu_history_delete.setText(_translate("MainWindow", "Διαγραφή ιστορικού αρχείου"))
        self.menu_history_delete.setStatusTip(_translate("MainWindow", "Διαγραφή ιστορικού αρχείου"))
        self.menu_history_play_now_deck_1.setText(_translate("MainWindow", "Αναπαραγωγή ιστορικού αρχείου τώρα στο deck 1"))
        self.menu_history_play_now_deck_1.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ιστορικού αρχείου τώρα στο deck 1"))
        self.menu_history_play_now_deck_2.setText(_translate("MainWindow", "Αναπαραγωγή ιστορικού αρχείου τώρα στο deck 2"))
        self.menu_history_play_now_deck_2.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ιστορικού αρχείου τώρα στο deck 2"))
        self.menu_history_play_when_ready.setText(_translate("MainWindow", "Αναπαραγωγή ιστορικού αρχείου σε διαθέσιμο deck"))
        self.menu_history_play_when_ready.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ιστορικού αρχείου σε διαθέσιμο deck"))
        self.menu_history_load_deck_1.setText(_translate("MainWindow", "Φόρτωση ιστορικού αρχείου στο deck 1"))
        self.menu_history_load_deck_1.setStatusTip(_translate("MainWindow", "Φόρτωση ιστορικού αρχείου στο deck 1"))
        self.menu_history_load_deck_2.setText(_translate("MainWindow", "Φόρτωση ιστορικού αρχείου στο deck 2"))
        self.menu_history_load_deck_2.setStatusTip(_translate("MainWindow", "Φόρτωση ιστορικού αρχείου στο deck 2"))
        self.menu_history_load_available_deck.setText(_translate("MainWindow", "Φόρτωση ιστορικού αρχείου σε διαθέσιμο deck"))
        self.menu_history_load_available_deck.setStatusTip(_translate("MainWindow", "Φόρτωση ιστορικού αρχείου σε διαθέσιμο deck"))
        self.menu_history_add_to_player_list_top.setText(_translate("MainWindow", "Προσθήκη ιστορικού αρχείου στην κεντρική λίστα αναπαραγωγής στην αρχή"))
        self.menu_history_add_to_player_list_top.setStatusTip(_translate("MainWindow", "Προσθήκη ιστορικού αρχείου στην κεντρική λίστα αναπαραγωγής στην αρχή"))
        self.menu_history_add_to_player_list_bottom.setText(_translate("MainWindow", "Προσθήκη ιστορικού αρχείου στην κεντρική λίστα αναπαραγωγής στο τέλος"))
        self.menu_history_add_to_player_list_bottom.setStatusTip(_translate("MainWindow", "Προσθήκη ιστορικού αρχείου στην κεντρική λίστα αναπαραγωγής στο τέλος"))
        self.menu_history_add_to_new_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη ιστορικού αρχείου σε νέα προγραμματισμένη μετάδοση"))
        self.menu_history_add_to_new_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη ιστορικού αρχείου σε νέα προγραμματισμένη μετάδοση"))
        self.menu_history_add_to_existed_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη ιστορικού αρχείου σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_history_add_to_existed_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη ιστορικού αρχείου σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_documentary_import.setText(_translate("MainWindow", "Εισαγωγή ντοκιμαντέρ"))
        self.menu_documentary_import.setStatusTip(_translate("MainWindow", "Εισαγωγή ντοκιμαντέρ"))
        self.menu_documentary_export.setText(_translate("MainWindow", "Εξαγωγή ντοκιμαντέρ"))
        self.menu_documentary_export.setStatusTip(_translate("MainWindow", "Εξαγωγή ντοκιμαντέρ"))
        self.menu_documentary_edit.setText(_translate("MainWindow", "Επεξεργασία ντοκιμαντέρ"))
        self.menu_documentary_edit.setStatusTip(_translate("MainWindow", "Επεξεργασία ντοκιμαντέρ"))
        self.menu_documentary_preview.setText(_translate("MainWindow", "Προεπισκόπηση ντοκιμαντέρ"))
        self.menu_documentary_preview.setStatusTip(_translate("MainWindow", "Προεπισκόπηση ντοκιμαντέρ"))
        self.menu_documentary_delete.setText(_translate("MainWindow", "Διαγραφή ντοκιμαντέρ"))
        self.menu_documentary_delete.setStatusTip(_translate("MainWindow", "Διαγραφή ντοκιμαντέρ"))
        self.menu_documentary_play_now_deck_1.setText(_translate("MainWindow", "Αναπαραγωγή ιστορικού αρχείου τώρα στο deck 1"))
        self.menu_documentary_play_now_deck_1.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ιστορικού αρχείου τώρα στο deck 1"))
        self.menu_documentary_play_now_deck_2.setText(_translate("MainWindow", "Αναπαραγωγή ντοκιμαντέρ τώρα στο deck 2"))
        self.menu_documentary_play_now_deck_2.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ιστορικού αρχείου τώρα στο deck 2"))
        self.menu_documentary_play_when_ready.setText(_translate("MainWindow", "Αναπαραγωγή ντοκιμαντέρ σε διαθέσιμο deck"))
        self.menu_documentary_play_when_ready.setStatusTip(_translate("MainWindow", "Αναπαραγωγή ντοκιμαντέρ σε διαθέσιμο deck"))
        self.menu_documentary_load_deck_1.setText(_translate("MainWindow", "Φόρτωση ντοκιμαντέρ στο deck 1"))
        self.menu_documentary_load_deck_1.setStatusTip(_translate("MainWindow", "Φόρτωση ντοκιμαντέρ στο deck 1"))
        self.menu_documentary_load_deck_2.setText(_translate("MainWindow", "Φόρτωση ντοκιμαντέρ στο deck 2"))
        self.menu_documentary_load_deck_2.setStatusTip(_translate("MainWindow", "Φόρτωση ντοκιμαντέρ στο deck 2"))
        self.menu_documentary_load_available_deck.setText(_translate("MainWindow", "Φόρτωση ντοκιμαντέρ σε διαθέσιμο deck"))
        self.menu_documentary_load_available_deck.setStatusTip(_translate("MainWindow", "Φόρτωση ντοκιμαντέρ σε διαθέσιμο deck"))
        self.menu_documentary_add_to_player_list_top.setText(_translate("MainWindow", "Προσθήκη ντοκιμαντέρ στην κεντρική λίστα αναπαραγωγής στην αρχή"))
        self.menu_documentary_add_to_player_list_top.setStatusTip(_translate("MainWindow", "Προσθήκη ντοκιμαντέρ στην κεντρική λίστα αναπαραγωγής στην αρχή"))
        self.menu_documentary_add_to_player_list_bottom.setText(_translate("MainWindow", "Προσθήκη ντοκιμαντέρ στην κεντρική λίστα αναπαραγωγής στο τέλος"))
        self.menu_documentary_add_to_player_list_bottom.setStatusTip(_translate("MainWindow", "Προσθήκη ντοκιμαντέρ στην κεντρική λίστα αναπαραγωγής στο τέλος"))
        self.menu_documentary_add_to_new_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη ντοκιμαντέρ σε νέα προγραμματισμένη μετάδοση"))
        self.menu_documentary_add_to_new_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη ντοκιμαντέρ σε νέα προγραμματισμένη μετάδοση"))
        self.menu_documentary_add_to_existed_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη ντοκιμαντέρ σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_documentary_add_to_existed_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη ντοκιμαντέρ σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_greek_lessons_import.setText(_translate("MainWindow", "Εισαγωγή μαθήματος αρχαίων ελληνικών"))
        self.menu_greek_lessons_export.setText(_translate("MainWindow", "Εξαγωγή μαθήματος αρχαίων ελληνικών"))
        self.menu_greek_lessons_export.setStatusTip(_translate("MainWindow", "Εξαγωγή μαθήματος αρχαίων ελληνικών"))
        self.menu_greek_lessons_edit.setText(_translate("MainWindow", "Επεξεργασία μαθήματος αρχαίων ελληνικών"))
        self.menu_greek_lessons_edit.setStatusTip(_translate("MainWindow", "Επεξεργασία μαθήματος αρχαίων ελληνικών"))
        self.menu_greek_lessons_preview.setText(_translate("MainWindow", "Προεπισκόπιση μαθήματος αρχαίων ελληνικών"))
        self.menu_greek_lessons_preview.setStatusTip(_translate("MainWindow", "Προεπισκόπιση μαθήματος αρχαίων ελληνικών"))
        self.menu_greek_lessons_delete.setText(_translate("MainWindow", "Διαγραφή μαθήματος αρχαίων ελληνικών"))
        self.menu_greek_lessons_delete.setStatusTip(_translate("MainWindow", "Διαγραφή μαθήματος αρχαίων ελληνικών"))
        self.menu_greek_lessons_play_now_deck_1.setText(_translate("MainWindow", "Αναπαραγωγή μαθήματος αρχαίων ελληνικών τώρα στο deck 1"))
        self.menu_greek_lessons_play_now_deck_1.setStatusTip(_translate("MainWindow", "Αναπαραγωγή μαθήματος αρχαίων ελληνικών τώρα στο deck 1"))
        self.menu_greek_lessons_play_now_deck_2.setText(_translate("MainWindow", "Αναπαραγωγή μαθήματος αρχαίων ελληνικών τώρα στο deck 2"))
        self.menu_greek_lessons_play_now_deck_2.setStatusTip(_translate("MainWindow", "Αναπαραγωγή μαθήματος αρχαίων ελληνικών τώρα στο deck 2"))
        self.menu_greek_lessons_play_when_ready.setText(_translate("MainWindow", "Αναπαραγωγή μαθήματος αρχαίων ελληνικών σε διαθέσιμο deck"))
        self.menu_greek_lessons_play_when_ready.setStatusTip(_translate("MainWindow", "Αναπαραγωγή μαθήματος αρχαίων ελληνικών σε διαθέσιμο deck"))
        self.menu_greek_lessons_load_deck_1.setText(_translate("MainWindow", "Φόρτωση μαθήματος αρχαίων ελληνικών στο deck 1"))
        self.menu_greek_lessons_load_deck_1.setStatusTip(_translate("MainWindow", "Φόρτωση μαθήματος αρχαίων ελληνικών στο deck 1"))
        self.menu_greek_lessons_load_deck_2.setText(_translate("MainWindow", "Φόρτωση μαθήματος αρχαίων ελληνικών στο deck 2"))
        self.menu_greek_lessons_load_deck_2.setStatusTip(_translate("MainWindow", "Φόρτωση μαθήματος αρχαίων ελληνικών στο deck 2"))
        self.menu_greek_lessons_load_available_deck.setText(_translate("MainWindow", "Φόρτωση μαθήματος αρχαίων ελληνικών σε διαθέσιμο deck"))
        self.menu_greek_lessons_load_available_deck.setStatusTip(_translate("MainWindow", "Φόρτωση μαθήματος αρχαίων ελληνικών σε διαθέσιμο deck"))
        self.menu_greek_lessons_add_to_player_list_top.setText(_translate("MainWindow", "Προσθήκη μαθήματος αρχαίων ελληνικών στην κεντρική λίστα αναπαραγωγής στην αρχή"))
        self.menu_greek_lessons_add_to_player_list_top.setStatusTip(_translate("MainWindow", "Προσθήκη μαθήματος αρχαίων ελληνικών στην κεντρική λίστα αναπαραγωγής στην αρχή"))
        self.menu_greek_lessons_add_to_player_list_bottom.setText(_translate("MainWindow", "Προσθήκη μαθήματος αρχαίων ελληνικών στην κεντρική λίστα αναπαραγωγής στο τέλος"))
        self.menu_greek_lessons_add_to_player_list_bottom.setStatusTip(_translate("MainWindow", "Προσθήκη μαθήματος αρχαίων ελληνικών στην κεντρική λίστα αναπαραγωγής στο τέλος"))
        self.menu_greek_lessons_add_to_new_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη μαθήματος αρχαίων ελληνικών σε νέα προγραμματισμένη μετάδοση"))
        self.menu_greek_lessons_add_to_new_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη μαθήματος αρχαίων ελληνικών σε νέα προγραμματισμένη μετάδοση"))
        self.menu_greek_lessons_add_to_existed_scheduled_transmition.setText(_translate("MainWindow", "Προσθήκη μαθήματος αρχαίων ελληνικών σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.menu_greek_lessons_add_to_existed_scheduled_transmition.setStatusTip(_translate("MainWindow", "Προσθήκη μαθήματος αρχαίων ελληνικών σε υπάρχουσα προγραμματισμένη μετάδοση"))
        self.action_go_to_page_4.setText(_translate("MainWindow", "Μετάβαση στην ηλεκτρονική σελίδα 4"))
        self.action_go_to_page_4.setToolTip(_translate("MainWindow", "Μετάβαση στην ηλεκτρονική σελίδα 4"))
        self.action_go_to_page_4.setStatusTip(_translate("MainWindow", "Μετάβαση στην ηλεκτρονική σελίδα 3"))
        self.action.setText(_translate("MainWindow", "Ομαδοποίηση τμημάτων προγράμματος σε σελίδες"))
        self.action_move_stacked_widgets_items.setText(_translate("MainWindow", "Ομαδοποίηση τμημάτων προγράμματος σε σελίδες"))
        self.action_move_stacked_widgets_items.setToolTip(_translate("MainWindow", "Ομαδοποίηση τμημάτων προγράμματος σε σελίδες"))
        self.action_move_stacked_widgets_items.setStatusTip(_translate("MainWindow", "Επιλογή θέματος"))
        self.menu_select_camera.setText(_translate("MainWindow", "Ρύθμιση κάμερας"))
        self.action_select_camera.setText(_translate("MainWindow", "Ρύθμιση κάμερας"))
import os
import sys
sys.path.append(os.path.abspath("../../../src/python+/main-window/movable-qstackedwidget"))
sys.path.append(os.path.abspath("../../../src/compiled-ui/"))
from custom_qstacked_widgets import StackedWidget

import importlib
icons = importlib.import_module('icons')

